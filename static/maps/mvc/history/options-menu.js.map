{"version":3,"sources":["mvc/history/options-menu.js"],"names":["_","menu","html","header","href","target","anon","func","Galaxy","currHistoryPanel","createNewHistory","model","done","loadCurrentHistory","router","push","id","confirm","_delete","purge","collapseAll","$","post","root","user_action","Webhooks","load","type","async","callback","webhooks","webhooks_menu","each","webhook","toJSON","activate","config","title","length","unshift","merge","buildMenu","isAnon","purgeAllowed","urlRoot","clone","filter","menuOption","galaxy_main","location","create","$button","options","anonymous","undefined","PopupMenu"],"mappings":"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","file":"../../../scripts/mvc/history/options-menu.js","sourcesContent":["import * as _ from \"underscore\";\nimport _l from \"utils/localization\";\nimport PopupMenu from \"mvc/ui/popup-menu\";\nimport historyCopyDialog from \"mvc/history/copy-dialog\";\nimport Webhooks from \"mvc/webhooks\";\n\n/* global $ */\n/* global Galaxy */\n\n// ============================================================================\nvar menu = [\n    {\n        html: _l(\"History Lists\"),\n        header: true\n    },\n    {\n        html: _l(\"Saved Histories\"),\n        href: \"histories/list\",\n        target: \"_top\"\n    },\n    {\n        html: _l(\"Histories Shared with Me\"),\n        href: \"histories/list_shared\",\n        target: \"_top\"\n    },\n    {\n        html: _l(\"Current History\"),\n        header: true,\n        anon: true\n    },\n    {\n        html: _l(\"Create New\"),\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel) {\n                Galaxy.currHistoryPanel.createNewHistory();\n            }\n        }\n    },\n    {\n        html: _l(\"Copy History\"),\n        func: function() {\n            historyCopyDialog(Galaxy.currHistoryPanel.model).done(() => {\n                Galaxy.currHistoryPanel.loadCurrentHistory();\n            });\n        }\n    },\n    {\n        html: _l(\"Share or Publish\"),\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel && Galaxy.router) {\n                Galaxy.router.push(`/histories/sharing?id=${Galaxy.currHistoryPanel.model.id}`);\n            }\n        }\n    },\n    {\n        html: _l(\"Show Structure\"),\n        anon: true,\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel && Galaxy.router) {\n                Galaxy.router.push(`/histories/show_structure`);\n            }\n        }\n    },\n    {\n        html: _l(\"Extract Workflow\"),\n        href: \"workflow/build_from_current_history\"\n    },\n    {\n        html: _l(\"Delete\"),\n        anon: true,\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel && confirm(_l(\"Really delete the current history?\"))) {\n                Galaxy.currHistoryPanel.model._delete().done(() => {\n                    Galaxy.currHistoryPanel.loadCurrentHistory();\n                });\n            }\n        }\n    },\n    {\n        html: _l(\"Delete Permanently\"),\n        purge: true,\n        anon: true,\n        func: function() {\n            if (\n                Galaxy &&\n                Galaxy.currHistoryPanel &&\n                confirm(_l(\"Really delete the current history permanently? This cannot be undone.\"))\n            ) {\n                Galaxy.currHistoryPanel.model.purge().done(() => {\n                    Galaxy.currHistoryPanel.loadCurrentHistory();\n                });\n            }\n        }\n    },\n\n    {\n        html: _l(\"Dataset Actions\"),\n        header: true,\n        anon: true\n    },\n    {\n        html: _l(\"Copy Datasets\"),\n        href: \"dataset/copy_datasets\"\n    },\n    {\n        html: _l(\"Dataset Security\"),\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel && Galaxy.router) {\n                Galaxy.router.push(`/histories/permissions?id=${Galaxy.currHistoryPanel.model.id}`);\n            }\n        }\n    },\n    {\n        html: _l(\"Resume Paused Jobs\"),\n        href: \"history/resume_paused_jobs?current=True\",\n        anon: true\n    },\n    {\n        html: _l(\"Collapse Expanded Datasets\"),\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel) {\n                Galaxy.currHistoryPanel.collapseAll();\n            }\n        }\n    },\n    {\n        html: _l(\"Unhide Hidden Datasets\"),\n        anon: true,\n        func: function() {\n            // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n            if (Galaxy && Galaxy.currHistoryPanel && confirm(_l(\"Really unhide all hidden datasets?\"))) {\n                $.post(`${Galaxy.root}history/adjust_hidden`, { user_action: \"unhide\" }, () => {\n                    Galaxy.currHistoryPanel.loadCurrentHistory();\n                });\n            }\n        }\n    },\n    {\n        html: _l(\"Delete Hidden Datasets\"),\n        anon: true,\n        func: function() {\n            // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n            if (Galaxy && Galaxy.currHistoryPanel && confirm(_l(\"Really delete all hidden datasets?\"))) {\n                $.post(`${Galaxy.root}history/adjust_hidden`, { user_action: \"delete\" }, () => {\n                    Galaxy.currHistoryPanel.loadCurrentHistory();\n                });\n            }\n        }\n    },\n    {\n        html: _l(\"Purge Deleted Datasets\"),\n        confirm: _l(\"Really delete all deleted datasets permanently? This cannot be undone.\"),\n        href: \"history/purge_deleted_datasets\",\n        purge: true,\n        anon: true\n    },\n\n    {\n        html: _l(\"Downloads\"),\n        header: true\n    },\n    {\n        html: _l(\"Export Tool Citations\"),\n        anon: true,\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel && Galaxy.router) {\n                Galaxy.router.push(`/histories/citations?id=${Galaxy.currHistoryPanel.model.id}`);\n            }\n        }\n    },\n    {\n        html: _l(\"Export History to File\"),\n        href: \"history/export_archive?preview=True\",\n        anon: true\n    },\n\n    {\n        html: _l(\"Other Actions\"),\n        header: true\n    },\n    {\n        html: _l(\"Import from File\"),\n        href: \"histories/import\",\n        target: \"_top\"\n    }\n];\n\n// Webhooks\nWebhooks.load({\n    type: \"history-menu\",\n    async: false, // (hypothetically) slows down the performance\n    callback: function(webhooks) {\n        var webhooks_menu = [];\n\n        webhooks.each(model => {\n            var webhook = model.toJSON();\n            if (webhook.activate) {\n                webhooks_menu.push({\n                    html: _l(webhook.config.title),\n                    // func: function() {},\n                    anon: true\n                });\n            }\n        });\n\n        if (webhooks_menu.length > 0) {\n            webhooks_menu.unshift({\n                html: _l(\"Webhooks\"),\n                header: true\n            });\n            $.merge(menu, webhooks_menu);\n        }\n    }\n});\n\nfunction buildMenu(isAnon, purgeAllowed, urlRoot) {\n    return _.clone(menu).filter(menuOption => {\n        if (isAnon && !menuOption.anon) {\n            return false;\n        }\n        if (!purgeAllowed && menuOption.purge) {\n            return false;\n        }\n\n        //TODO:?? hard-coded galaxy_main\n        if (menuOption.href) {\n            menuOption.href = urlRoot + menuOption.href;\n            menuOption.target = menuOption.target || \"galaxy_main\";\n        }\n\n        if (menuOption.confirm) {\n            menuOption.func = () => {\n                if (confirm(menuOption.confirm)) {\n                    /* galaxy_main is a global here: TODO: Fix it! */\n                    galaxy_main.location = menuOption.href;\n                }\n            };\n        }\n        return true;\n    });\n}\n\nvar create = ($button, options) => {\n    options = options || {};\n    var isAnon = options.anonymous === undefined ? true : options.anonymous;\n    var purgeAllowed = options.purgeAllowed || false;\n    var menu = buildMenu(isAnon, purgeAllowed, Galaxy.root);\n    //console.debug( 'menu:', menu );\n    return new PopupMenu($button, menu);\n};\n\n// ============================================================================\nexport default create;\n"]}