{"version":3,"sources":["mvc/history/hdca-li.js"],"names":["_super","DC_LI","DCListItemView","HDCAListItemView","extend","className","prototype","_setUpListeners","call","renderListen","model","options","render","jobStatesSummary","listenTo","_getFoldoutPanelClass","DC_VIEW","CollectionView","_swapNewRender","$newRender","state","new","errored","terminal","running","get","STATES","OK","RUNNING","$el","addClass","stateDescription","$","html","collection","elementCount","jobStateSource","collectionType","collectionTypeDescription","simpleDescription","collectionDescription","hasDetails","isNew","jobCount","errorCount","numInError","states","ok","okPercent","runningPercent","otherPercent","jobsStr","toString","modelString","templates","warnings","_","hidden","visible","titleBarTemplate","hid","escape","name","HISTORY_ITEM_LI","nametagTemplate","titleBar"],"mappings":"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","file":"../../../scripts/mvc/history/hdca-li.js","sourcesContent":["import STATES from \"mvc/dataset/states\";\nimport DC_LI from \"mvc/collection/collection-li\";\nimport DC_VIEW from \"mvc/collection/collection-view\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport HISTORY_ITEM_LI from \"mvc/history/history-item-li\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DC_LI.DCListItemView;\n/** @class Read only view for HistoryDatasetCollectionAssociation (a dataset collection inside a history).\n */\nvar HDCAListItemView = _super.extend(\n    /** @lends HDCAListItemView.prototype */ {\n        className: `${_super.prototype.className} history-content`,\n\n        /** event listeners */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            var renderListen = (model, options) => {\n                this.render();\n            };\n            if (this.model.jobStatesSummary) {\n                this.listenTo(this.model.jobStatesSummary, \"change\", renderListen);\n            }\n            this.listenTo(this.model, {\n                \"change:tags change:visible change:state\": renderListen\n            });\n        },\n\n        /** Override to provide the proper collections panels as the foldout */\n        _getFoldoutPanelClass: function() {\n            return DC_VIEW.CollectionView;\n        },\n\n        /** In this override, add the state as a class for use with state-based CSS */\n        _swapNewRender: function($newRender) {\n            _super.prototype._swapNewRender.call(this, $newRender);\n            //TODO: model currently has no state\n            var state;\n            var jobStatesSummary = this.model.jobStatesSummary;\n            if (jobStatesSummary) {\n                if (jobStatesSummary.new()) {\n                    state = \"loading\";\n                } else if (jobStatesSummary.errored()) {\n                    state = \"error\";\n                } else if (jobStatesSummary.terminal()) {\n                    state = \"ok\";\n                } else if (jobStatesSummary.running()) {\n                    state = \"running\";\n                } else {\n                    state = \"queued\";\n                }\n            } else if (this.model.get(\"job_source_id\")) {\n                // Initial rendering - polling will fill in more details in a bit.\n                state = \"loading\";\n            } else {\n                state = this.model.get(\"populated_state\") ? STATES.OK : STATES.RUNNING;\n            }\n            this.$el.addClass(`state-${state}`);\n            var stateDescription = this.stateDescription();\n            this.$(\".state-description\").html(stateDescription);\n            return this.$el;\n        },\n\n        stateDescription: function() {\n            var collection = this.model;\n            var elementCount = collection.get(\"element_count\");\n            var jobStateSource = collection.get(\"job_source_type\");\n            var collectionType = this.model.get(\"collection_type\");\n            var collectionTypeDescription = DC_VIEW.collectionTypeDescription(collection);\n            var simpleDescription = DC_VIEW.collectionDescription(collection);\n            var jobStatesSummary = collection.jobStatesSummary;\n            if (!jobStateSource || jobStateSource == \"Job\") {\n                return simpleDescription;\n            } else if (!jobStatesSummary || !jobStatesSummary.hasDetails()) {\n                return `\n                    <div class=\"progress state-progress\">\n                        <span class=\"note\">Loading job data for ${collectionTypeDescription}.<span class=\"blinking\">..</span></span>\n                        <div class=\"progress-bar info\" style=\"width:100%\">\n                    </div>`;\n            } else {\n                var isNew = jobStatesSummary.new();\n                var jobCount = isNew ? null : jobStatesSummary.jobCount();\n                if (isNew) {\n                    return `\n                        <div class=\"progress state-progress\">\n                            <span class=\"note\">Creating jobs.<span class=\"blinking\">..</span></span>\n                            <div class=\"progress-bar info\" style=\"width:100%\">\n                        </div>`;\n                } else if (jobStatesSummary.errored()) {\n                    var errorCount = jobStatesSummary.numInError();\n                    return `a ${collectionTypeDescription} with ${errorCount} / ${jobCount} jobs in error`;\n                } else if (jobStatesSummary.terminal()) {\n                    return simpleDescription;\n                } else {\n                    var running = jobStatesSummary.states()[\"running\"] || 0;\n                    var ok = jobStatesSummary.states()[\"ok\"] || 0;\n                    var okPercent = ok / (jobCount * 1.0);\n                    var runningPercent = running / (jobCount * 1.0);\n                    var otherPercent = 1.0 - okPercent - runningPercent;\n                    var jobsStr = jobCount && jobCount > 1 ? `${jobCount} jobs` : `a job`;\n                    return `\n                        <div class=\"progress state-progress\">\n                            <span class=\"note\">${jobsStr} generating a ${collectionTypeDescription}</span>\n                            <div class=\"progress-bar ok\" style=\"width:${okPercent * 100.0}%\"></div>\n                            <div class=\"progress-bar running\" style=\"width:${runningPercent * 100.0}%\"></div>\n                            <div class=\"progress-bar new\" style=\"width:${otherPercent * 100.0}%\">\n                        </div>`;\n                }\n            }\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `HDCAListItemView(${modelString})`;\n        }\n    }\n);\n\n/** underscore templates */\nHDCAListItemView.prototype.templates = (() => {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: collection => {\n            collection.visible\n                ? \"\"\n                : `<div class=\"hidden-msg warningmessagesmall\">${_l(\"This collection has been hidden\")}</div>`;\n        }\n    });\n\n    var titleBarTemplate = collection => `\n        <div class=\"title-bar clear\" tabindex=\"0\">\n            <span class=\"state-icon\"></span>\n            <div class=\"title\">\n                <span class=\"hid\">${collection.hid}</span>\n                <span class=\"name\">${_.escape(collection.name)}</span>\n            </div>\n            <div class=\"state-description\">\n            </div>\n            ${HISTORY_ITEM_LI.nametagTemplate(collection)}\n        </div>\n    `;\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        titleBar: titleBarTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    HDCAListItemView: HDCAListItemView\n};\n"]}