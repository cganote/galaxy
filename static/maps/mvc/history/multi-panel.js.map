{"version":3,"sources":["mvc/history/multi-panel.js"],"names":["_","Backbone","logNamespace","HistoryViewColumn","View","extend","baseMVC","LoggableMixin","_logNamespace","tagName","className","id","model","get","initialize","options","purgeAllowed","isUndefined","panel","createPanel","setUpListeners","panelOptions","HISTORY_VIEW_EDIT","HistoryViewEdit","defaults","dragItems","$scrollContainer","$el","once","trigger","setUpPanelListeners","listenTo","rendered","view","$","off","inView","viewLeft","viewRight","columnLeft","offset","left","columnRight","width","$panel","render","speed","undefined","modelData","toJSON","html","template","renderPanel","css","setUpBehaviors","data","isCurrentHistory","currentHistory","controlsLeftTemplate","history","controlsRightTemplate","setElement","$list","before","_renderDropTargetHelp","events","setAsCurrent","_delete","done","undelete","window","confirm","purge","copy","variable","toString","MultiPanelColumns","log","addClass","columnWidth","borderWidth","columnGap","headerHeight","footerHeight","controlsHeight","perPage","hdaQueue","ajaxQueue","NamedAjaxQueue","collection","columnMap","columnOptions","historySearch","datasetSearch","setCollection","histories","on","fetchMore","stopListening","HISTORY_MODEL","HistoryCollection","setUpCollectionListeners","createColumns","clear","addModels","models","isArray","forEach","addColumn","error","errorHandler","add","_postFetchAll","addAsCurrentColumn","setCurrentHistory","handleDeletedHistory","sort","renderColumns","fetchData","remove","scrollLeft","oldCurrentColumn","findWhere","height","newCurrentColumn","currentHistoryId","_recalcFirstColumnHeight","includeDeleted","column","removeColumn","xhr","status","readyState","isString","message","title","ERROR_MODAL","errorModal","badGatewayErrorModal","ajaxErrorModal","_ajaxErrorHandler","apply","toArray","arguments","create","ev","current","each","i","createColumn","Galaxy","config","allow_user_dataset_purge","setUpColumnListeners","searchItems","queueHdaFetchDetails","newColumn","queueHdaFetch","widthToRemove","fadeOut","checkColumnsInView","_dropData","JSON","parse","dataTransfer","getData","currentColumnDropTargetOn","currentColumnDropTargetOff","toCopy","filter","contents","isCopyable","json","queue","currentPage","name","fn","fetchPage","reverse","content","start","fetch","columnMapLength","Object","keys","length","sortedFilteredColumns","filters","sortedColumns","index","filtered","every","map","call","sorted","fxSpeed","mainTemplate","isNumber","sortedAndFiltered","$middle","empty","_addColumns","allFetched","append","loadingIndicatorTemplate","columns","numExisting","children","_calcMiddleWidth","delegateEvents","appendTo","numColumns","preventStackWidthAdj","contentsShown","fetchOptions","silent","ids","values","storage","allExpanded","join","details","fetchCurrentPage","renderItems","JOB_STATES_MODEL","FETCH_STATE_ON_ADD","jobStateSummariesCollection","running","needsContentsLoaded","haveDetails","progressivelyFetchDetails","_renderEmptyMessage","renderInfo","msg","text","close","location","root","_clickToggleDeletedHistories","toggleDeletedHistories","currentTarget","is","toggleOptionsPopover","show","_clickToggleDeletedDatasets","toggleDeletedDatasets","delay","toggleShowDeleted","_clickToggleHiddenDatasets","toggleHiddenDatasets","toggleShowHidden","_chooseOrder","orderKey","orderDescriptions","setOrder","currentHistoryModel","slice","fetchFirst","unshift","_scrollLeft","val","_moreOptionsPopover","searchInput","placeholder","onfirstsearch","fetchAll","onsearch","searchFor","matchesAll","onclear","progress","curr","total","deferred","clearSearch","resize","debouncedInView","debounce","viewport","_viewport","checkForEndOfScroll","parent","scroll","popover","container","placement","optionsPopoverTemplate","$firstColumn","first","middleHeight","controlHeight","find","$outerMiddle","right","columnsInView","vp","END_PADDING","scrollRight","currentColumn","dataDropped","dropTargetOn","prototype","dataDrop","dropTarget","update_time","size"],"mappings":"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","file":"../../../scripts/mvc/history/multi-panel.js","sourcesContent":["import _l from \"utils/localization\";\nimport * as _ from \"libs/underscore\";\nimport * as Backbone from \"libs/backbone\";\nimport HISTORY_MODEL from \"mvc/history/history-model\";\nimport HISTORY_VIEW_EDIT from \"mvc/history/history-view-edit\";\nimport JOB_STATES_MODEL from \"mvc/history/job-states-model\";\nimport historyCopyDialog from \"mvc/history/copy-dialog\";\nimport ERROR_MODAL from \"mvc/ui/error-modal\";\nimport baseMVC from \"mvc/base-mvc\";\nimport ajaxQueue from \"utils/ajax-queue\";\nimport \"ui/search-input\";\n\n/* global $ */\n/* global Galaxy */\n\nvar logNamespace = \"history\";\n/* ==============================================================================\nTODO:\n\n============================================================================== */\n/** @class A container for a history panel that renders controls for that history (delete, copy, etc.) */\nvar HistoryViewColumn = Backbone.View.extend(baseMVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    tagName: \"div\",\n    className: \"history-column flex-column flex-row-container\",\n    id: function id() {\n        if (!this.model) {\n            return \"\";\n        }\n        return `history-column-${this.model.get(\"id\")}`;\n    },\n\n    // ------------------------------------------------------------------------ set up\n    /** set up passed-in panel (if any) and listeners */\n    initialize: function initialize(options) {\n        options = options || {};\n        this.purgeAllowed = !_.isUndefined(options.purgeAllowed) ? options.purgeAllowed : false;\n        this.panel = options.panel || this.createPanel(options);\n\n        this.setUpListeners();\n    },\n\n    /** create a history panel for this column */\n    createPanel: function createPanel(panelOptions) {\n        return new HISTORY_VIEW_EDIT.HistoryViewEdit(\n            _.defaults(panelOptions, {\n                model: this.model,\n                // non-current panels should set their hdas to draggable\n                purgeAllowed: this.purgeAllowed,\n                dragItems: true,\n                $scrollContainer: function() {\n                    return this.$el;\n                }\n            })\n        );\n    },\n\n    /** set up reflexive listeners */\n    setUpListeners: function setUpListeners() {\n        //this.log( 'setUpListeners', this );\n        this.once(\"rendered\", () => {\n            this.trigger(\"rendered:initial\", this);\n        });\n        this.setUpPanelListeners();\n    },\n\n    /** set listeners needed for panel */\n    setUpPanelListeners: function setUpPanelListeners() {\n        this.listenTo(\n            this.panel,\n            {\n                //'all': function(){ console.info( 'panel of ' + this, arguments ); },\n\n                // assumes panel will take the longest to render\n                rendered: () => {\n                    this.trigger(\"rendered\", this);\n                },\n                // when a panel's view expands turn off the click handler on the rerun button so that it uses it's href\n                // this allows the button to open the tool rerun form in a new tab (instead of erroring)\n                // TODO: hack\n                \"view:expanded view:rendered\": function(view) {\n                    view.$(\".rerun-btn\").off();\n                }\n            },\n            this\n        );\n    },\n\n    /** do the dimensions of this column overlap the given (horizontal) browser coords? */\n    inView: function(viewLeft, viewRight) {\n        var columnLeft = this.$el.offset().left;\n        var columnRight = columnLeft + this.$el.width();\n        if (columnRight < viewLeft) {\n            return false;\n        }\n        if (columnLeft > viewRight) {\n            return false;\n        }\n        return true;\n    },\n\n    /** shortcut to the panel */\n    $panel: function $panel() {\n        return this.$(\".history-panel\");\n    },\n\n    // ------------------------------------------------------------------------ render\n    /** render ths column, its panel, and set up plugins */\n    render: function render(speed) {\n        speed = speed !== undefined ? speed : \"fast\";\n        //this.log( this + '.render', this.$el, this.el );\n        //TODO: not needed\n        var modelData = this.model ? this.model.toJSON() : {};\n        this.$el.html(this.template(modelData));\n        this.renderPanel(speed);\n        // jq 1.12 doesn't fade/show properly when display: flex, re-set here\n        this.panel.$el.css(\"display\", \"flex\");\n        // if model and not children\n        // template\n        // render controls\n        this.setUpBehaviors();\n        // add panel\n        return this;\n    },\n\n    /** set up plugins */\n    setUpBehaviors: function setUpBehaviors() {\n        //this.log( 'setUpBehaviors:', this );\n        // on panel size change, ...\n    },\n\n    /** column body template with inner div for panel based on data (model json) */\n    template: function template(data) {\n        data = _.extend(data || {}, {\n            isCurrentHistory: this.currentHistory\n        });\n        return $(`\n            <div class=\"panel-controls mb-1\">\n                <div class=\"flex-row flex-column-container no-gutters justify-content-between\">\n                    ${this.controlsLeftTemplate({ history: data, view: this })}\n                    ${this.controlsRightTemplate({ history: data, view: this })}\n                </div>\n            </div>\n            <div class=\"inner flex-row flex-column-container\">\n                <div id=\"history-${data.id}\" class=\"history-column history-panel flex-column\"></div>\n            </div>`);\n    },\n\n    /** render the panel contained in the column using speed for fx speed */\n    renderPanel: function renderPanel(speed) {\n        speed = speed !== undefined ? speed : \"fast\";\n        this.panel.setElement(this.$panel()).render(speed);\n        if (this.currentHistory) {\n            this.panel.$list().before(this.panel._renderDropTargetHelp());\n        }\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ behaviors and events\n    /** event map */\n    events: {\n        // will make this the current history\n        \"click .switch-to.btn\": function() {\n            this.model.setAsCurrent();\n        },\n        //TODO: remove boiler plate from next 3\n        \"click .delete-history\": function() {\n            this.model._delete().done(data => {\n                this.render();\n            });\n        },\n        \"click .undelete-history\": function() {\n            this.model.undelete().done(data => {\n                this.render();\n            });\n        },\n        \"click .purge-history\": function() {\n            if (window.confirm(_l(\"This will permanently remove the data. Are you sure?\"))) {\n                this.model.purge().done(data => {\n                    this.render();\n                });\n            }\n        },\n        // will copy this history and make the copy the current history\n        \"click .copy-history\": \"copy\"\n    },\n\n    // ------------------------------------------------------------------------ non-current controls\n    /** Open a modal to get a new history name, copy it (if not canceled), and makes the copy current */\n    copy: function copy() {\n        historyCopyDialog(this.model);\n    },\n\n    // ------------------------------------------------------------------------ templates\n    /** controls template displaying controls above the panel based on this.currentHistory */\n    controlsLeftTemplate: _.template(\n        `\n        <div class=\"text-left col-8\">\n            <% if( data.history.isCurrentHistory ){ %>\n                <strong class=\"current-label\">\n                    ${_l(\"Current History\")}\n                </strong>\n            <% } else { %>\n                <button class=\"switch-to btn btn-secondary\">\n                    ${_l(\"Switch to\")}\n                </button>\n            <% } %>\n        </div>`,\n        { variable: \"data\" }\n    ),\n\n    /** controls template displaying controls above the panel based on this.currentHistory */\n    controlsRightTemplate: _.template(\n        `<div class=\"text-right col-4\">\n            <% if( !data.history.purged ){ %>\n                <div class=\"panel-menu btn-group\">\n                    <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\">\n                        <span class=\"caret\"></span>\n                    </button>\n                    <ul class=\"dropdown-menu\" role=\"menu\">\n                        <% if( !data.history.deleted ){ %>\n                            <li><a href=\"javascript:void(0);\" class=\"copy-history\">\n                                ${_l(\"Copy\")}\n                            </a></li>\n                            <li><a href=\"javascript:void(0);\" class=\"delete-history\">\n                                ${_l(\"Delete\")}\n                            </a></li>\n                        <% } else /* if is deleted */ { %>\n                            <li><a href=\"javascript:void(0);\" class=\"undelete-history\">\n                                ${_l(\"Undelete\")}\n                            </a></li>\n                        <% } %>\n                        <% if( data.view.purgeAllowed ){ %>\n                            <li><a href=\"javascript:void(0);\" class=\"purge-history\">\n                                ${_l(\"Purge\")}\n                            </a></li>\n                        <% } %>\n                    </ul>\n                </div>\n            <% } %>\n        </div>`,\n        { variable: \"data\" }\n    ),\n\n    // ------------------------------------------------------------------------ misc\n    /** String rep */\n    toString: function() {\n        return `HistoryViewColumn(${this.panel ? this.panel : \"\"})`;\n    }\n});\n\n//==============================================================================\n/** @class A view of a HistoryCollection and displays histories similarly to the current history panel.\n */\nvar MultiPanelColumns = Backbone.View.extend(baseMVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    className: \"multi-panel-history\",\n\n    // ------------------------------------------------------------------------ set up\n    /** Set up internals, history collection, and columns to display the history */\n    initialize: function initialize(options) {\n        options = options || {};\n        this.log(`${this}.init`, options);\n\n        // add the className here (since we gen. pass the el in options)\n        this.$el.addClass(this.className);\n\n        // --- instance vars\n        //TODO: move these to some defaults\n        this.options = {\n            columnWidth: 312,\n            borderWidth: 1,\n            columnGap: 8,\n            headerHeight: 29,\n            footerHeight: 0,\n            controlsHeight: 20\n        };\n\n        /** how many histories to get when fetching a new batch/page */\n        this.perPage = options.perPage || 10;\n\n        /** named ajax queue for loading hdas */\n        this.hdaQueue = new ajaxQueue.NamedAjaxQueue([], false);\n\n        // --- set up models, sub-views, and listeners\n        /** the original unfiltered and unordered collection of histories */\n        this.collection = null;\n        /** model id to column map */\n        this.columnMap = {};\n        /** model id to column map */\n        this.columnOptions = options.columnOptions || {};\n\n        /** what to search for within all histories */\n        this.historySearch = null;\n        /** what to search for within all datasets */\n        this.datasetSearch = null;\n\n        this.setCollection(options.histories);\n        this.setUpListeners();\n    },\n\n    /** Set up reflexive listeners */\n    setUpListeners: function setUpListeners() {\n        //multipanel.log( 'setUpListeners', multipanel );\n        this.on(\"end-of-scroll\", () => {\n            this.collection.fetchMore();\n        });\n    },\n\n    // ------------------------------------------------------------------------ collection\n    /** Set up a (new) history collection, sorting and adding listeners\n     *  @fires 'new-collection' when set with this view as the arg\n     */\n    setCollection: function setCollection(collection) {\n        // console.log( 'setCollection:', collection );\n        this.stopListening(this.collection);\n\n        this.collection = collection || new HISTORY_MODEL.HistoryCollection();\n        this.setUpCollectionListeners();\n\n        this.createColumns();\n        this.hdaQueue.clear();\n\n        this.trigger(\"new-collection\", this);\n        return this;\n    },\n\n    /** Set up a (new) history collection, sorting and adding listeners\n     *  @fires 'new-collection' when set with this view as the arg\n     */\n    addModels: function addModels(models, collection, options) {\n        // console.log( 'addModels:', models, collection, options );\n        options = options || {};\n        models = _.isArray(models) ? models : [models];\n        models.forEach(model => {\n            this.addColumn(model, false);\n            // if this is from a fetch, sort will be called and it will call render\n        });\n        return this;\n    },\n\n    /** Set up listeners for the collection - handling: added histories, change of current, deletion, and sorting */\n    setUpCollectionListeners: function() {\n        this.listenTo(this.collection, {\n            // handle ajax errors from the collection\n            error: this.errorHandler,\n            // add multiple models\n            add: this.addModels,\n            // when all the histories a user has have been fetched\n            \"all-fetched\": this._postFetchAll,\n            // handle addition of histories, triggered by column copy and create new\n            \"new-current\": this.addAsCurrentColumn,\n            // handle setting a history as current, triggered by history.setAsCurrent\n            \"set-as-current\": this.setCurrentHistory,\n            // handle deleting a history (depends on whether panels is including deleted or not)\n            \"change:deleted change:purged\": this.handleDeletedHistory,\n            // re-render columns after a sort\n            sort: function() {\n                this.renderColumns(0);\n            }\n        });\n    },\n\n    _postFetchAll: function(fetchData) {\n        // console.log( '_postFetchAll' );\n        this.$(\".histories-loading-indicator\").remove();\n        // when new histories is fetched and the indicator is not required,\n        // the panel will jump slightly left - totally aesthetic but jarring\n        // TODO: this probably would be best handled elsewhere during a refinement cycle (if any)\n        if (!this.historySearch) {\n            var $scrollContainer = this.$(\".outer-middle\");\n            $scrollContainer.scrollLeft($scrollContainer.scrollLeft() + 24);\n        }\n    },\n\n    /** Re-render and set currentHistoryId to reflect a new current history */\n    setCurrentHistory: function setCurrentHistory(history) {\n        this.log(\"setCurrentHistory:\", history);\n        var oldCurrentColumn = _.findWhere(this.columnMap, {\n            currentHistory: true\n        });\n        if (oldCurrentColumn) {\n            oldCurrentColumn.currentHistory = false;\n            oldCurrentColumn.$el.height(\"\");\n        }\n\n        var newCurrentColumn = this.columnMap[this.collection.currentHistoryId];\n        newCurrentColumn.currentHistory = true;\n        this.collection.sort();\n        this._recalcFirstColumnHeight();\n        return newCurrentColumn;\n    },\n\n    /** Either remove a deleted history or re-render it to show the deleted message\n     *      based on collection.includeDeleted\n     */\n    handleDeletedHistory: function handleDeletedHistory(history) {\n        if (history.get(\"deleted\") || history.get(\"purged\")) {\n            this.log(\"handleDeletedHistory\", this.collection.includeDeleted, history);\n            var column = this.columnMap[history.id];\n            if (!column) {\n                return;\n            }\n\n            // if it's the current column, create a new, empty history as the new current\n            if (column.model.id === this.collection.currentHistoryId) {\n                //TODO: figuring out the order of async here is tricky\n                //  - for now let the user handle the two step process\n                //multipanel.collection.create().done( function(){\n                //    if( !multipanel.collection.includeDeleted ){ multipanel.removeColumn( column, false ); }\n                //});\n            } else if (!this.collection.includeDeleted) {\n                this.removeColumn(column);\n            }\n        }\n    },\n\n    // ........................................................................ error handling\n    /** Event handler for errors (from the history collection mainly)\n     *  Alternately use two strings for model and xhr to use custom message and title (respectively)\n     *  (e.g. this.trigger( 'error', 'Heres a message', 'Heres a title' ))\n     *  @param {Model or View} model    the (Backbone) source of the error\n     *  @param {XMLHTTPRequest} xhr     any ajax obj. assoc. with the error\n     *  @param {Object} options         the options map commonly used with bbone ajax\n     */\n    errorHandler: function(model, xhr, options) {\n        // interrupted ajax or no connection\n        if (xhr && xhr.status === 0 && xhr.readyState === 0) {\n            // return ERROR_MODAL.offlineErrorModal();\n            // fail silently\n            return;\n        }\n        // otherwise, leave something to report in the console\n        this.error(model, xhr, options);\n        // and feedback to a modal\n        // if sent two strings (and possibly details as 'options'), use those as message and title\n        if (_.isString(model) && _.isString(xhr)) {\n            var message = model;\n            var title = xhr;\n            return ERROR_MODAL.errorModal(message, title, options);\n        }\n        // bad gateway\n        // TODO: possibly to global handler\n        if (xhr && xhr.status === 502) {\n            return ERROR_MODAL.badGatewayErrorModal();\n        }\n        return ERROR_MODAL.ajaxErrorModal(model, xhr, options);\n    },\n\n    /** If Galaxy object is available handle error there, otherwise, locally (and crudely) */\n    _ajaxErrorHandler: function() {\n        ERROR_MODAL.ajaxErrorModal.apply(null, _.toArray(arguments));\n    },\n\n    /** create a new history and set it to current */\n    create: function(ev) {\n        return this.collection.create({ current: true });\n    },\n\n    // ------------------------------------------------------------------------ columns\n    /** create columns from collection */\n    createColumns: function createColumns(models, columnOptions) {\n        columnOptions = columnOptions || this.options.columnOptions;\n        // clear column map\n        // TODO: make cummulative\n        this.columnMap = {};\n        this.collection.each((model, i) => {\n            this.columnMap[model.id] = this.createColumn(model, columnOptions);\n        });\n    },\n\n    /** create a column and its panel and set up any listeners to them */\n    createColumn: function createColumn(history, options) {\n        // options passed can be re-used, so extend them before adding the model to prevent pollution for the next\n        options = _.extend({}, options, {\n            model: history,\n            purgeAllowed: Galaxy.config.allow_user_dataset_purge\n        });\n        var column = new HistoryViewColumn(options);\n        if (history.id === this.collection.currentHistoryId) {\n            column.currentHistory = true;\n        }\n        this.setUpColumnListeners(column);\n        if (this.datasetSearch) {\n            column.panel.searchItems(this.datasetSearch);\n            this.queueHdaFetchDetails(column);\n        }\n        return column;\n    },\n\n    /** add a new column for history and render all columns if render is true */\n    addColumn: function add(history, render) {\n        render = render !== undefined ? render : true;\n        var newColumn = this.createColumn(history);\n        this.columnMap[history.id] = newColumn;\n        if (render) {\n            this.renderColumns();\n        }\n        return newColumn;\n    },\n\n    /** add a new column for history and make it the current history/column */\n    addAsCurrentColumn: function add(history, collection, options) {\n        var newColumn = this.addColumn(history, false);\n        this.setCurrentHistory(history);\n        newColumn.once(\"rendered\", () => {\n            this.queueHdaFetch(newColumn);\n        });\n        return newColumn;\n    },\n\n    /** remove the given column, it's listeners, and optionally render */\n    removeColumn: function remove(column, render) {\n        render = render !== undefined ? render : true;\n        this.log(\"removeColumn\", column);\n        if (!column) {\n            return;\n        }\n        var widthToRemove = this.options.columnWidth + this.options.columnGap;\n        column.$el.fadeOut(\"fast\", () => {\n            if (render) {\n                $(this).remove();\n                this.$(\".middle\").width(this.$(\".middle\").width() - widthToRemove);\n                this.checkColumnsInView();\n                this._recalcFirstColumnHeight();\n            }\n\n            //TODO: to freeColumn (where Columns have freePanel)\n            this.stopListening(column.panel);\n            this.stopListening(column);\n            delete this.columnMap[column.model.id];\n            column.remove();\n        });\n    },\n\n    /** set up listeners for a column and it's panel - handling: hda lazy-loading, drag and drop */\n    setUpColumnListeners: function setUpColumnListeners(column) {\n        this.listenTo(column, {\n            //'all': function(){ console.info( 'column ' + column + ':', arguments ) },\n            \"in-view\": this.queueHdaFetch\n        });\n\n        this.listenTo(column.panel, {\n            //'all': function(){ console.info( 'panel ' + column.panel + ':', arguments ) },\n\n            \"view:draggable:dragstart\": (ev, view, panel, column) => {\n                this._dropData = JSON.parse(ev.dataTransfer.getData(\"text\"));\n                this.currentColumnDropTargetOn();\n            },\n            \"view:draggable:dragend\": (ev, view, panel, column) => {\n                this._dropData = null;\n                this.currentColumnDropTargetOff();\n            },\n            \"droptarget:drop\": (ev, data, panel) => {\n                //note: bad copy sources fail silently\n                var toCopy = this._dropData.filter(json => panel.model.contents.isCopyable(json));\n                this._dropData = null;\n\n                var queue = new ajaxQueue.NamedAjaxQueue();\n                if (panel.model.contents.currentPage !== 0) {\n                    queue.add({\n                        name: \"fetch-front-page\",\n                        fn: function() {\n                            return panel.model.contents.fetchPage(0);\n                        }\n                    });\n                }\n                // need to reverse to better match expected order\n                // TODO: reconsider order in list-view._setUpItemViewListeners, dragstart (instead of here)\n                toCopy.reverse().forEach(content => {\n                    queue.add({\n                        name: `copy-${content.id}`,\n                        fn: function() {\n                            return panel.model.contents.copy(content);\n                        }\n                    });\n                });\n                queue.start();\n                queue.done(responses => {\n                    panel.model.fetch();\n                });\n            }\n        });\n    },\n\n    /** conv. fn to count the columns in columnMap */\n    columnMapLength: function() {\n        return Object.keys(this.columnMap).length;\n    },\n\n    /** return array of Columns filtered by filters and sorted to match the collection\n     *  @param: filters Function[] array of filter fns\n     */\n    sortedFilteredColumns: function(filters) {\n        filters = filters || this.filters;\n        if (!filters || !filters.length) {\n            return this.sortedColumns();\n        }\n        return this.sortedColumns().filter((column, index) => {\n            var filtered = column.currentHistory || _.every(filters.map(filter => filter.call(column)));\n            return filtered;\n        });\n    },\n\n    /** return array of Columns sorted to match the collection */\n    sortedColumns: function() {\n        var sorted = this.collection.map((history, index) => this.columnMap[history.id]);\n        return sorted;\n    },\n\n    // ------------------------------------------------------------------------ render\n    /** Render this view, columns, and set up view plugins */\n    render: function render(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n\n        this.log(`${this}.render`);\n        this.$el.html(this.mainTemplate);\n        this.renderColumns(speed);\n\n        // set the columns to full height allowed and set up behaviors for thie multipanel\n        this.setUpBehaviors();\n        //TODO: wrong - has to wait for columns to render\n        //  - create a column listener that fires this when all columns are rendered\n        this.trigger(\"rendered\", this);\n        return this;\n    },\n\n    /** Render the columns and panels */\n    renderColumns: function renderColumns(speed) {\n        speed = _.isNumber(speed) ? speed : this.fxSpeed;\n        // console.log( 'renderColumns:', speed );\n        // render columns and track the total number rendered, firing an event when all are rendered\n        var sortedAndFiltered = this.sortedFilteredColumns();\n        // console.log( '\\t sortedAndFiltered:', sortedAndFiltered );\n        var $middle = this.$(\".middle\").empty();\n\n        this._addColumns(sortedAndFiltered, speed);\n        if (!this.collection.allFetched) {\n            $middle.append(this.loadingIndicatorTemplate);\n        }\n        //TODO: sorta - at least their fx queue has started the re-rendering\n        this.trigger(\"columns-rendered\", sortedAndFiltered, this);\n\n        if (!this.datasetSearch || sortedAndFiltered.length > 1) {\n            // check for in-view, hda lazy-loading if so\n            this.checkColumnsInView();\n            // the first, current column has position: fixed and flex css will not apply - adjust height manually\n            this._recalcFirstColumnHeight();\n        }\n        return sortedAndFiltered;\n    },\n\n    _addColumns: function(columns, speed) {\n        speed = _.isNumber(speed) ? speed : this.fxSpeed;\n        var $middle = this.$(\".middle\");\n\n        var numExisting = $middle.children(\".history-column\").length;\n        $middle.width(this._calcMiddleWidth(columns.length + numExisting));\n\n        columns.forEach((column, i) => {\n            column\n                .delegateEvents()\n                .render(speed)\n                .$el.appendTo($middle);\n        });\n    },\n\n    _calcMiddleWidth: function(numColumns) {\n        var preventStackWidthAdj = 16;\n        return (\n            numColumns * (this.options.columnWidth + this.options.columnGap) +\n            // last column gap\n            this.options.columnGap +\n            // the amount that safely prevents stacking of columns when adding a new one\n            preventStackWidthAdj\n        );\n    },\n\n    //TODO: combine the following two more sensibly\n    //TODO: could have HistoryContents.haveDetails return false\n    //      if column.model.contents.length === 0 && !column.model.get( 'empty' ) then just check that\n    /** Get the *summary* contents of a column's history (and details on any expanded contents),\n     *      queueing the ajax call and using a named queue to prevent the call being sent twice\n     */\n    queueHdaFetch: function queueHdaFetch(column) {\n        // console.log( column.model + '.contentsShown:', column.model.contentsShown() );\n        var contents = column.model.contents;\n        // console.log( 'queueHdaFetch:', column, column.model.get( 'contents_active' ) );\n        // if the history model says it has hdas but none are present, queue an ajax req for them\n        if (contents.length === 0 && column.model.contentsShown()) {\n            var fetchOptions = { silent: true };\n            var ids = _.values(contents.storage.allExpanded()).join();\n            if (ids) {\n                fetchOptions.details = ids;\n            }\n            // this uses a 'named' queue so that duplicate requests are ignored\n            this.hdaQueue.add({\n                name: column.model.id,\n                fn: function() {\n                    return contents\n                        .fetchCurrentPage(fetchOptions)\n                        .done(() => {\n                            column.panel.renderItems();\n                        })\n                        .done(() => {\n                            if (!JOB_STATES_MODEL.FETCH_STATE_ON_ADD) {\n                                contents.jobStateSummariesCollection.fetch();\n                            }\n                        });\n                }\n            });\n            // the queue is re-used, so if it's not processing requests - start it again\n            if (!this.hdaQueue.running) {\n                this.hdaQueue.start();\n            }\n        }\n    },\n\n    /** Get the *detailed* json for *all* of a column's history's contents - req'd for searching */\n    queueHdaFetchDetails: function(column) {\n        var contents = column.model.contents;\n        var needsContentsLoaded = contents.length === 0 && column.model.contentsShown();\n        if (needsContentsLoaded || !contents.haveDetails()) {\n            // this uses a 'named' queue so that duplicate requests are ignored\n            this.hdaQueue.add({\n                name: column.model.id,\n                fn: function() {\n                    return contents.progressivelyFetchDetails().done(() => {\n                        column.panel._renderEmptyMessage();\n                    });\n                }\n            });\n            // the queue is re-used, so if it's not processing requests - start it again\n            if (!this.hdaQueue.running) {\n                this.hdaQueue.start();\n            }\n        }\n    },\n\n    /** put a text msg in the header */\n    renderInfo: function(msg) {\n        return this.$(\".header .header-info\").text(msg);\n    },\n\n    // ------------------------------------------------------------------------ events/behaviors\n    events: {\n        // will move to the server root (gen. Analyze data)\n        \"click .done.btn\": \"close\",\n        // creates a new empty history and makes it current\n        \"click .create-new.btn\": \"create\",\n        \"click #include-deleted\": \"_clickToggleDeletedHistories\",\n        // these change the collection and column sort order\n        \"click .order .set-order\": \"_chooseOrder\",\n        \"click #toggle-deleted\": \"_clickToggleDeletedDatasets\",\n        \"click #toggle-hidden\": \"_clickToggleHiddenDatasets\"\n        //'dragstart .list-item .title-bar'                       : function( e ){ console.debug( 'ok' ); }\n    },\n\n    close: function(ev) {\n        //TODO: switch to pushState/router\n        window.location = Galaxy.root;\n    },\n\n    _clickToggleDeletedHistories: function(ev) {\n        this.toggleDeletedHistories($(ev.currentTarget).is(\":checked\"));\n        this.toggleOptionsPopover();\n    },\n    /** Include deleted histories in the collection */\n    toggleDeletedHistories: function(show) {\n        if (show) {\n            window.location = `${Galaxy.root}history/view_multiple?include_deleted_histories=True`;\n        } else {\n            window.location = `${Galaxy.root}history/view_multiple`;\n        }\n    },\n\n    _clickToggleDeletedDatasets: function(ev) {\n        this.toggleDeletedDatasets($(ev.currentTarget).is(\":checked\"));\n        this.toggleOptionsPopover();\n    },\n    toggleDeletedDatasets: function(show) {\n        show = show !== undefined ? show : false;\n        this.sortedFilteredColumns().forEach((column, i) => {\n            _.delay(() => {\n                column.panel.toggleShowDeleted(show, false);\n            }, i * 200);\n        });\n    },\n\n    _clickToggleHiddenDatasets: function(ev) {\n        this.toggleHiddenDatasets($(ev.currentTarget).is(\":checked\"));\n        this.toggleOptionsPopover();\n    },\n    toggleHiddenDatasets: function(show) {\n        show = show !== undefined ? show : false;\n        this.sortedFilteredColumns().forEach((column, i) => {\n            _.delay(() => {\n                column.panel.toggleShowHidden(show, false);\n            }, i * 200);\n        });\n    },\n\n    /** change the collection order and re-fetch when the drop down in the options menu is changed */\n    _chooseOrder: function(ev) {\n        var collection = this.collection;\n        var orderKey = $(ev.currentTarget).data(\"order\");\n        // set the sort order text also\n        this.$(\".current-order\").text(this.orderDescriptions[orderKey]);\n        this.toggleOptionsPopover();\n        // set the order and re-fetch using the new order, saving the current history as the first\n        collection.setOrder(orderKey);\n        var currentHistoryModel = collection.slice(0, 1);\n        collection.fetchFirst().done(() => {\n            collection.unshift(currentHistoryModel, {\n                silent: true\n            });\n            this.createColumns();\n            // need to clear this or previously fetched contents won't refetch now (bc of named queue)\n            this.hdaQueue.clear();\n            this.render();\n        });\n        this.once(\"columns-rendered\", this._scrollLeft);\n        //TODO: check allFetched and do not reset if so - just sort instead\n    },\n\n    /** scroll the column container right or left */\n    _scrollLeft: function(val) {\n        val = _.isNumber(val) ? val : 0;\n        this.$(\".outer-middle\").scrollLeft(val);\n    },\n\n    /** Set up any view plugins */\n    setUpBehaviors: function() {\n        this._moreOptionsPopover();\n\n        // input to search histories\n        this.$(\"#search-histories\").searchInput({\n            name: \"search-histories\",\n            placeholder: _l(\"search histories\"),\n\n            onfirstsearch: searchFor => {\n                this.$(\"#search-histories\").searchInput(\"toggle-loading\");\n                this.renderInfo(_l(\"loading all histories for search\"));\n                this.collection.fetchAll().done(() => {\n                    this.$(\"#search-histories\").searchInput(\"toggle-loading\");\n                    this.renderInfo(\"\");\n                });\n            },\n            onsearch: searchFor => {\n                this.historySearch = searchFor;\n                this.filters = [\n                    () => {\n                        return this.model.matchesAll(this.historySearch);\n                    }\n                ];\n                this.renderColumns(0);\n            },\n            onclear: searchFor => {\n                this.historySearch = null;\n                //TODO: remove specifically not just reset\n                this.filters = [];\n                this.renderColumns(0);\n            }\n        });\n\n        // input to search datasets\n        this.$(\"#search-datasets\").searchInput({\n            name: \"search-datasets\",\n            placeholder: _l(\"search all datasets\"),\n\n            onfirstsearch: searchFor => {\n                this.hdaQueue.clear();\n                this.$(\"#search-datasets\").searchInput(\"toggle-loading\");\n                this.datasetSearch = searchFor;\n                this.sortedFilteredColumns().forEach(column => {\n                    column.panel.searchItems(searchFor);\n                    // load details for them that need\n                    this.queueHdaFetchDetails(column);\n                });\n                this.hdaQueue.progress(progress => {\n                    this.renderInfo([_l(\"searching\"), progress.curr + 1, _l(\"of\"), progress.total].join(\" \"));\n                });\n                this.hdaQueue.deferred.done(() => {\n                    this.renderInfo(\"\");\n                    this.$(\"#search-datasets\").searchInput(\"toggle-loading\");\n                });\n            },\n            onsearch: searchFor => {\n                this.datasetSearch = searchFor;\n                this.sortedFilteredColumns().forEach(column => {\n                    column.panel.searchItems(searchFor);\n                });\n            },\n            onclear: searchFor => {\n                this.datasetSearch = null;\n                this.sortedFilteredColumns().forEach(column => {\n                    column.panel.clearSearch();\n                });\n            }\n        });\n\n        // resize first (fixed position) column on page resize\n        $(window).resize(() => {\n            this._recalcFirstColumnHeight();\n        });\n\n        // when scrolling - check for histories now in view: they will fire 'in-view' and queueHdaLoading if necc.\n        //TODO:?? might be able to simplify and not use pub-sub\n        var debouncedInView = _.debounce(() => {\n            var viewport = this._viewport();\n            this.checkColumnsInView(viewport);\n            this.checkForEndOfScroll(viewport);\n        }, 100);\n        this.$(\".middle\")\n            .parent()\n            .scroll(debouncedInView);\n    },\n\n    /** create the options popover */\n    _moreOptionsPopover: function() {\n        return this.$(\".open-more-options.btn\").popover({\n            container: \".header\",\n            placement: \"bottom\",\n            html: true,\n            content: $(this.optionsPopoverTemplate(this))\n        });\n    },\n\n    /** change the collection order and re-fetch when the drop down in the options menu is changed */\n    toggleOptionsPopover: function(ev) {\n        // hide seems broken in our version\n        this.$(\".open-more-options.btn\").popover(\"toggle\");\n    },\n\n    /** Adjust the height of the first, current column since flex-boxes won't work with fixed postiion elements */\n    _recalcFirstColumnHeight: function() {\n        var $firstColumn = this.$(\".history-column\").first();\n        var middleHeight = this.$(\".middle\").height();\n        var controlHeight = $firstColumn.find(\".panel-controls\").height();\n        $firstColumn\n            .height(middleHeight)\n            .find(\".inner\")\n            .height(middleHeight - controlHeight);\n    },\n\n    /** Get the left and right pixel coords of the middle element */\n    _viewport: function() {\n        var $outerMiddle = this.$(\".middle\").parent();\n        var viewLeft = $outerMiddle.offset().left;\n        var width = $outerMiddle.width();\n        return {\n            left: viewLeft,\n            right: viewLeft + width\n        };\n    },\n\n    /** returns the columns currently in the viewport */\n    columnsInView: function(viewport) {\n        //TODO: uses offset which is render intensive\n        //TODO: 2N - could use arg filter (sortedFilteredColumns( filter )) instead\n        var vp = viewport || this._viewport();\n        return this.sortedFilteredColumns().filter(column => column.currentHistory || column.inView(vp.left, vp.right));\n    },\n\n    //TODO: sortByInView - return cols in view, then others\n    /** trigger in-view from columns in-view */\n    checkColumnsInView: function() {\n        //TODO: assbackward - don't fire from the column, fire from here and listen from here\n        this.columnsInView().forEach(column => {\n            column.trigger(\"in-view\", column);\n        });\n    },\n\n    /** is the middle, horizontally scrolling section scrolled fully to the right? */\n    checkForEndOfScroll: function(viewport) {\n        viewport = viewport || this._viewport();\n        var END_PADDING = 16;\n        var $middle = this.$(\".middle\");\n        var scrollRight = $middle.parent().scrollLeft() + viewport.right;\n        if (scrollRight >= $middle.width() - END_PADDING) {\n            this.trigger(\"end-of-scroll\");\n        }\n    },\n\n    /** Show and enable the current columns drop target */\n    currentColumnDropTargetOn: function() {\n        var currentColumn = this.columnMap[this.collection.currentHistoryId];\n        if (!currentColumn) {\n            return;\n        }\n        //TODO: fix this - shouldn't need monkeypatch\n        currentColumn.panel.dataDropped = data => {};\n        currentColumn.panel.dropTargetOn();\n    },\n\n    /** Hide and disable the current columns drop target */\n    currentColumnDropTargetOff: function() {\n        var currentColumn = this.columnMap[this.collection.currentHistoryId];\n        if (!currentColumn) {\n            return;\n        }\n        currentColumn.panel.dataDropped = HISTORY_VIEW_EDIT.HistoryViewEdit.prototype.dataDrop;\n        // slight override of dropTargetOff to not erase drop-target-help\n        currentColumn.panel.dropTarget = false;\n        currentColumn.panel.$(\".history-drop-target\").remove();\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** String rep */\n    toString: function() {\n        return `MultiPanelColumns(${this.columns ? this.columns.length : 0})`;\n    },\n\n    // ------------------------------------------------------------------------ templates\n    mainTemplate: `\n        <div class=\"header flex-column-container\">\n            <div class=\"control-column control-column-left flex-column\">\n                <div id=\"search-histories\" class=\"search-control\"></div>\n                <div id=\"search-datasets\" class=\"search-control\"></div>\n                <a class=\"open-more-options btn btn-secondary\" tabindex=\"3\">\n                    <span class=\"fa fa-ellipsis-h\"></span>\n                </a>\n            </div>\n            <div class=\"control-column control-column-center flex-column\">\n                <div class=\"header-info\">\n                </div>\n            </div>\n            <div class=\"control-column control-column-right flex-column\">\n                <button class=\"create-new btn btn-secondary\" tabindex=\"4\">\n                    ${_l(\"Create new\")}\n                </button>\n            </div>\n        </div>\n        <div class=\"outer-middle flex-row flex-row-container\">\n            <div class=\"middle flex-column-container flex-row\"></div>\n        </div>\n        <div class=\"footer flex-column-container\"></div>`,\n\n    loadingIndicatorTemplate: `\n        <div class=\"histories-loading-indicator\">\n            <span class=\"fa fa-spin fa-spinner\"></span>\n            ${_l(\"Loading histories\")} ...\n        </div>`,\n\n    orderDescriptions: {\n        update_time: _l(\"most recent first\"),\n        \"update_time-asc\": _l(\"least recent first\"),\n        name: _l(\"name, a to z\"),\n        \"name-dsc\": _l(\"name, z to a\"),\n        size: _l(\"size, large to small\"),\n        \"size-asc\": _l(\"size, small to large\")\n    },\n\n    optionsPopoverTemplate: _.template(\n        [\n            '<div class=\"more-options d-flex flex-column\">',\n            '<div class=\"order btn-group mb-2\">',\n            '<button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\">',\n            `${_l(\"Order histories by\")} `,\n            '<span class=\"current-order\"><%- view.orderDescriptions[ view.collection.order ] %></span> ',\n            '<span class=\"caret\"></span>',\n            \"</button>\",\n            '<ul class=\"dropdown-menu\" role=\"menu\">',\n            \"<% _.each( view.orderDescriptions, function( text, order ){ %>\",\n            '<li class=\"dropdown-item\"><a href=\"javascript:void(0);\" class=\"set-order\" data-order=\"<%- order %>\">',\n            \"<%- text %>\",\n            \"</a></li>\",\n            \"<% }); %>\",\n            \"</ul>\",\n            \"</div>\",\n\n            '<div class=\"checkbox\"><label><input id=\"include-deleted\" type=\"checkbox\"',\n            '<%= view.collection.includeDeleted? \" checked\" : \"\" %>>',\n            _l(\"Include deleted histories\"),\n            \"</label></div>\",\n\n            '<div class=\"checkbox\"><label><input id=\"toggle-deleted\" type=\"checkbox\">',\n            _l(\"Include deleted datasets\"),\n            \"</label></div>\",\n            '<div class=\"checkbox\"><label><input id=\"toggle-hidden\" type=\"checkbox\">',\n            _l(\"Include hidden datasets\"),\n            \"</label></div>\",\n            \"</div>\"\n        ].join(\"\"),\n        { variable: \"view\" }\n    )\n});\n\n//==============================================================================\nexport default {\n    MultiPanelColumns: MultiPanelColumns\n};\n"]}