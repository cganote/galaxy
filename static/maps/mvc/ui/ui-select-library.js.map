{"version":3,"sources":["mvc/ui/ui-select-library.js"],"names":["Libraries","Backbone","Collection","extend","url","Galaxy","root","LibraryDatasets","initialize","self","config","Model","library_id","on","fetch","reset","get","View","options","libraries","datasets","library_select","Ui","Select","onchange","value","set","dataset_list","List","name","optional","multiple","trigger","data","each","push","model","id","label","update","library_current","text","setElement","_template","$","append","$el","success","undefined","val"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-select-library.js","sourcesContent":["// dependencies\nimport Ui from \"mvc/ui/ui-misc\";\nimport List from \"mvc/ui/ui-list\";\n\n// collection of libraries\nvar Libraries = Backbone.Collection.extend({\n    url: `${Galaxy.root}api/libraries?deleted=false`\n});\n\n// collection of dataset\nvar LibraryDatasets = Backbone.Collection.extend({\n    initialize: function() {\n        var self = this;\n        this.config = new Backbone.Model({ library_id: null });\n        this.config.on(\"change\", () => {\n            self.fetch({ reset: true });\n        });\n    },\n    url: function() {\n        return `${Galaxy.root}api/libraries/${this.config.get(\"library_id\")}/contents`;\n    }\n});\n\n// hda/hdca content selector ui element\nvar View = Backbone.View.extend({\n    // initialize\n    initialize: function(options) {\n        // link this\n        var self = this;\n\n        // collections\n        this.libraries = new Libraries();\n        this.datasets = new LibraryDatasets();\n\n        // link app and options\n        this.options = options;\n\n        // select field for the library\n        // TODO: Remove this once the library API supports searching for library datasets\n        this.library_select = new Ui.Select.View({\n            onchange: function(value) {\n                self.datasets.config.set(\"library_id\", value);\n            }\n        });\n\n        // create ui-list view to keep track of selected data libraries\n        this.dataset_list = new List.View({\n            name: \"dataset\",\n            optional: options.optional,\n            multiple: options.multiple,\n            onchange: function() {\n                self.trigger(\"change\");\n            }\n        });\n\n        // add reset handler for fetched libraries\n        this.libraries.on(\"reset\", () => {\n            var data = [];\n            self.libraries.each(model => {\n                data.push({\n                    value: model.id,\n                    label: model.get(\"name\")\n                });\n            });\n            self.library_select.update({ data: data });\n        });\n\n        // add reset handler for fetched library datasets\n        this.datasets.on(\"reset\", () => {\n            var data = [];\n            var library_current = self.library_select.text();\n            if (library_current !== null) {\n                self.datasets.each(model => {\n                    if (model.get(\"type\") === \"file\") {\n                        data.push({\n                            value: model.id,\n                            label: model.get(\"name\")\n                        });\n                    }\n                });\n            }\n            self.dataset_list.update({ data: data });\n        });\n\n        // add change event. fires on trigger\n        this.on(\"change\", () => {\n            if (options.onchange) {\n                options.onchange(self.value());\n            }\n        });\n\n        // create elements\n        this.setElement(this._template());\n        this.$(\".library-select\").append(this.library_select.$el);\n        this.$el.append(this.dataset_list.$el);\n\n        // initial fetch of libraries\n        this.libraries.fetch({\n            reset: true,\n            success: function() {\n                self.library_select.trigger(\"change\");\n                if (self.options.value !== undefined) {\n                    self.value(self.options.value);\n                }\n            }\n        });\n    },\n\n    /** Return/Set currently selected library datasets */\n    value: function(val) {\n        return this.dataset_list.value(val);\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"ui-select-library\">' +\n            '<div class=\"library ui-margin-bottom\">' +\n            '<span class=\"library-title\">Select Library</span>' +\n            '<span class=\"library-select\"/>' +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n"]}