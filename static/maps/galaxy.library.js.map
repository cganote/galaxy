{"version":3,"sources":["galaxy.library.js"],"names":["LibraryRouter","Backbone","Router","extend","initialize","routesHit","history","on","bind","trackPageview","routes","back","window","navigate","trigger","replace","url","getFragment","test","ga","Galaxy","root","LibraryPrefs","mod_baseMVC","SessionStorageModel","defaults","with_deleted","without_restricted","sort_order","sort_by","library_page_size","folder_page_size","GalaxyLibrary","View","libraryToolbarView","libraryListView","library_router","libraryView","folderToolbarView","folderListView","datasetView","config","ga_code","i","s","o","g","r","a","m","q","push","arguments","l","Date","createElement","getElementsByTagName","async","src","parentNode","insertBefore","document","libraries","preferences","id","$el","unbind","mod_librarytoolbar_view","LibraryToolbarView","mod_librarylist_view","LibraryListView","show_page","render","mod_foldertoolbar_view","FolderToolbarView","mod_folderlist_view","FolderListView","parseInt","folder_id","format","$","find","length","mod_toastr","info","download","dataset_id","mod_library_dataset_view","LibraryDatasetView","show_version","show_permissions","ldda_id","mod_library_library_view","LibraryView","library_id","folderView","mod_library_folder_view","FolderView","source","showImportModal","start","pushState","GalaxyApp"],"mappings":"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","file":"../scripts/galaxy.library.js","sourcesContent":["// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n// === MAIN GALAXY LIBRARY MODULE ====\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n\nimport mod_utils from \"utils/utils\";\nimport mod_toastr from \"libs/toastr\";\nimport mod_baseMVC from \"mvc/base-mvc\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_folderlist_view from \"mvc/library/library-folderlist-view\";\nimport mod_librarylist_view from \"mvc/library/library-librarylist-view\";\nimport mod_librarytoolbar_view from \"mvc/library/library-librarytoolbar-view\";\nimport mod_foldertoolbar_view from \"mvc/library/library-foldertoolbar-view\";\nimport mod_library_dataset_view from \"mvc/library/library-dataset-view\";\nimport mod_library_library_view from \"mvc/library/library-library-view\";\nimport mod_library_folder_view from \"mvc/library/library-folder-view\";\n// ============================================================================\n/**\n * The Data Libraries router. Takes care about triggering routes\n * and sends users to proper pieces of the application.\n */\nvar LibraryRouter = Backbone.Router.extend({\n    initialize: function() {\n        this.routesHit = 0;\n        // keep count of number of routes handled by the application\n        Backbone.history.on(\n            \"route\",\n            function() {\n                this.routesHit++;\n            },\n            this\n        );\n\n        this.bind(\"route\", this.trackPageview);\n    },\n\n    routes: {\n        \"\": \"libraries\",\n        \"page/:show_page\": \"libraries_page\",\n        \"library/:library_id/permissions\": \"library_permissions\",\n        \"folders/:folder_id/permissions\": \"folder_permissions\",\n        \"folders/:id\": \"folder_content\",\n        \"folders/:id/page/:show_page\": \"folder_page\",\n        \"folders/:folder_id/datasets/:dataset_id\": \"dataset_detail\",\n        \"folders/:folder_id/datasets/:dataset_id/permissions\": \"dataset_permissions\",\n        \"folders/:folder_id/datasets/:dataset_id/versions/:ldda_id\": \"dataset_version\",\n        \"folders/:folder_id/download/:format\": \"download\",\n        \"folders/:folder_id/import/:source\": \"import_datasets\"\n    },\n\n    /**\n     * If more than one route has been hit the user did not land on current\n     * page directly so we can go back safely. Otherwise go to the home page.\n     * Use replaceState if available so the navigation doesn't create an\n     * extra history entry\n     */\n    back: function() {\n        if (this.routesHit > 1) {\n            window.history.back();\n        } else {\n            this.navigate(\"#\", { trigger: true, replace: true });\n        }\n    },\n\n    /**\n     * Track every route change as a page view in Google Analytics.\n     */\n    trackPageview: function() {\n        var url = Backbone.history.getFragment();\n        //prepend slash\n        if (!/^\\//.test(url) && url != \"\") {\n            url = `/${url}`;\n        }\n        if (typeof ga !== \"undefined\") {\n            ga(\"send\", \"pageview\", `${Galaxy.root}library/list${url}`);\n        }\n    }\n});\n\n// ============================================================================\n/** session storage for library preferences */\nvar LibraryPrefs = mod_baseMVC.SessionStorageModel.extend({\n    defaults: {\n        with_deleted: false,\n        without_restricted: false,\n        sort_order: \"asc\",\n        sort_by: \"name\",\n        library_page_size: 20,\n        folder_page_size: 15\n    }\n});\n\n// ============================================================================\n/**\n * Main view of the Galaxy Data Libraries. Stores pointers to other subviews\n * and defines what router should do on the route triggers.\n */\nvar GalaxyLibrary = Backbone.View.extend({\n    libraryToolbarView: null,\n    libraryListView: null,\n    library_router: null,\n    libraryView: null,\n    folderToolbarView: null,\n    folderListView: null,\n    datasetView: null,\n\n    initialize: function() {\n        // This should go upstream in the js app once available\n        if (window.Galaxy.config.ga_code) {\n            ((i, s, o, g, r, a, m) => {\n                i[\"GoogleAnalyticsObject\"] = r;\n                (i[r] =\n                    i[r] ||\n                    function() {\n                        (i[r].q = i[r].q || []).push(arguments);\n                    }),\n                    (i[r].l = 1 * new Date());\n                (a = s.createElement(o)), (m = s.getElementsByTagName(o)[0]);\n                a.async = 1;\n                a.src = g;\n                m.parentNode.insertBefore(a, m);\n            })(window, document, \"script\", \"//www.google-analytics.com/analytics.js\", \"ga\");\n            ga(\"create\", window.Galaxy.config.ga_code, \"auto\");\n            ga(\"send\", \"pageview\");\n        }\n\n        Galaxy.libraries = this;\n\n        this.preferences = new LibraryPrefs({ id: \"global-lib-prefs\" });\n\n        this.library_router = new LibraryRouter();\n\n        this.library_router.on(\"route:libraries\", () => {\n            if (Galaxy.libraries.libraryToolbarView) {\n                Galaxy.libraries.libraryToolbarView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.libraryToolbarView = new mod_librarytoolbar_view.LibraryToolbarView();\n            Galaxy.libraries.libraryListView = new mod_librarylist_view.LibraryListView();\n        });\n\n        this.library_router.on(\"route:libraries_page\", show_page => {\n            if (Galaxy.libraries.libraryToolbarView === null) {\n                Galaxy.libraries.libraryToolbarView = new mod_librarytoolbar_view.LibraryToolbarView();\n                Galaxy.libraries.libraryListView = new mod_librarylist_view.LibraryListView({ show_page: show_page });\n            } else {\n                Galaxy.libraries.libraryListView.render({\n                    show_page: show_page\n                });\n            }\n        });\n\n        this.library_router.on(\"route:folder_content\", id => {\n            if (Galaxy.libraries.folderToolbarView) {\n                Galaxy.libraries.folderToolbarView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.folderToolbarView = new mod_foldertoolbar_view.FolderToolbarView({ id: id });\n            Galaxy.libraries.folderListView = new mod_folderlist_view.FolderListView({ id: id });\n        });\n\n        this.library_router.on(\"route:folder_page\", (id, show_page) => {\n            if (Galaxy.libraries.folderToolbarView === null) {\n                Galaxy.libraries.folderToolbarView = new mod_foldertoolbar_view.FolderToolbarView({ id: id });\n                Galaxy.libraries.folderListView = new mod_folderlist_view.FolderListView({\n                    id: id,\n                    show_page: show_page\n                });\n            } else {\n                Galaxy.libraries.folderListView.render({\n                    id: id,\n                    show_page: parseInt(show_page)\n                });\n            }\n        });\n\n        this.library_router.on(\"route:download\", (folder_id, format) => {\n            if ($(\"#folder_list_body\").find(\":checked\").length === 0) {\n                mod_toastr.info(\"You must select at least one dataset to download\");\n                Galaxy.libraries.library_router.navigate(`folders/${folder_id}`, { trigger: true, replace: true });\n            } else {\n                Galaxy.libraries.folderToolbarView.download(format);\n                Galaxy.libraries.library_router.navigate(`folders/${folder_id}`, { trigger: false, replace: true });\n            }\n        });\n\n        this.library_router.on(\"route:dataset_detail\", (folder_id, dataset_id) => {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({\n                id: dataset_id,\n                show_version: false,\n                show_permissions: false\n            });\n        });\n\n        this.library_router.on(\"route:dataset_version\", (folder_id, dataset_id, ldda_id) => {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({\n                id: dataset_id,\n                ldda_id: ldda_id,\n                show_version: true\n            });\n        });\n\n        this.library_router.on(\"route:dataset_permissions\", (folder_id, dataset_id) => {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({\n                id: dataset_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:library_permissions\", library_id => {\n            if (Galaxy.libraries.libraryView) {\n                Galaxy.libraries.libraryView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.libraryView = new mod_library_library_view.LibraryView({\n                id: library_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:folder_permissions\", folder_id => {\n            if (Galaxy.libraries.folderView) {\n                Galaxy.libraries.folderView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.folderView = new mod_library_folder_view.FolderView({\n                id: folder_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:import_datasets\", (folder_id, source) => {\n            if (Galaxy.libraries.folderToolbarView && Galaxy.libraries.folderListView) {\n                Galaxy.libraries.folderToolbarView.showImportModal({\n                    source: source\n                });\n            } else {\n                Galaxy.libraries.folderToolbarView = new mod_foldertoolbar_view.FolderToolbarView({ id: folder_id });\n                Galaxy.libraries.folderListView = new mod_folderlist_view.FolderListView({ id: folder_id });\n                Galaxy.libraries.folderToolbarView.showImportModal({\n                    source: source\n                });\n            }\n        });\n\n        Backbone.history.start({ pushState: false });\n    }\n});\n\nexport default {\n    GalaxyApp: GalaxyLibrary\n};\n"]}