{"version":3,"sources":["viz/trackster.js"],"names":["_","Backbone","TracksterUI","options","baseURL","Utils","cssLoadFile","Galaxy","modal","show","title","body","bookmarks","$","each","push","position","children","text","annotation","overview_track_name","view","overview_drawable","config","get_value","viz_config","to_dict","viewport","chrom","start","low","end","high","overview","ajax","url","root","type","dataType","data","id","vis_id","dbkey","vis_json","JSON","stringify","success","hide","vis_info","has_changes","window","history","pushState","top","location","hash","error","buttons","Cancel","menu","IconButton","create_icon_buttons_menu","icon_class","on_click","visualization","select_datasets","new_tracks","add_drawable","tracks","object_from_template","track","DrawableGroup","name","force_right_panel","css","save_viz","handle_unsaved_changes","tooltip_config","placement","buttonMenu","editable","bookmarks_container","new_bookmark","addClass","appendTo","position_div","click","go_to","annotation_div","delete_icon_container","prependTo","slideUp","remove","make_text_editable","num_rows","use_textarea","help_text","view_config","viewport_config","drawables_config","bookmarks_config","TracksterView","extend","header","editor","when","load_chroms_deferred","then","overview_drawable_name","undefined","change_chrom","chrom_info","i","length","drawables","set_overview","bookmark","add_bookmark","set_up_router","TrackBrowserRouter","document","keyup","e","srcElement","is","which","move_fraction","viewport_container","scrollTop","off","Save","Model","TracksterUIView","ui","createButtonMenu","$el","attr","append","resize_window","galaxy_config","app","view_existing","query_string","get","choose_existing_or_new","view_new","listTracksParams","dataset_params","dataset_id","hda_ldda","gene_region","view_in_saved","tracks_grid","GridView","url_base","embedded","parent","find","val","param","create_visualization","container","init_editor","alert","template_view_new","response","Create","create_browser","dbkeys_in_genomes","map","r","default_dbkey","contains","focus","select2","html","add_dataset","data_type","track_data","init_keyboard_nav","on","trigger","View","GalaxyApp"],"mappings":"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","file":"../../scripts/viz/trackster.js","sourcesContent":["/**\n * Top-level trackster code, used for creating/loading visualizations and user interface elements.\n */\nimport _l from \"utils/localization\";\nimport * as _ from \"libs/underscore\";\nimport * as Backbone from \"libs/backbone\";\nimport tracks from \"viz/trackster/tracks\";\nimport visualization from \"viz/visualization\";\nimport IconButton from \"mvc/ui/icon-button\";\nimport query_string from \"utils/query-string-parsing\";\nimport GridView from \"mvc/grid/grid-view\";\nimport Utils from \"utils/utils\";\nimport \"libs/jquery/jquery.event.drag\";\nimport \"libs/jquery/jquery.event.hover\";\nimport \"libs/jquery/jquery.mousewheel\";\nimport \"libs/jquery/jquery-ui\";\nimport \"libs/jquery/select2\";\nimport \"libs/farbtastic\";\nimport \"libs/jquery/jquery.form\";\nimport \"libs/jquery/jquery.rating\";\nimport \"ui/editable-text\";\n\n/* global Galaxy */\n/* global $ */\n\n/**\n * User interface controls for trackster\n */\nclass TracksterUI extends Backbone.Model {\n    constructor(options) {\n        super(options);\n    }\n\n    initialize(baseURL) {\n        this.baseURL = baseURL;\n        Utils.cssLoadFile(\"static/style/jquery.rating.css\");\n        Utils.cssLoadFile(\"static/style/autocomplete_tagging.css\");\n        Utils.cssLoadFile(\"static/style/jquery-ui/smoothness/jquery-ui.css\");\n        Utils.cssLoadFile(\"static/style/library.css\");\n        Utils.cssLoadFile(\"static/style/trackster.css\");\n    }\n\n    /**\n     * Save visualization, returning a Deferred object for the remote call to save.\n     */\n    save_viz() {\n        // show dialog\n        Galaxy.modal.show({ title: \"Saving...\", body: \"progress\" });\n\n        // Save bookmarks.\n        var bookmarks = [];\n        $(\".bookmark\").each(() => {\n            bookmarks.push({\n                position: $(this)\n                    .children(\".position\")\n                    .text(),\n                annotation: $(this)\n                    .children(\".annotation\")\n                    .text()\n            });\n        });\n\n        // FIXME: give unique IDs to Drawables and save overview as ID.\n        var overview_track_name = this.view.overview_drawable\n            ? this.view.overview_drawable.config.get_value(\"name\")\n            : null;\n\n        var viz_config = {\n            view: this.view.to_dict(),\n            viewport: {\n                chrom: this.view.chrom,\n                start: this.view.low,\n                end: this.view.high,\n                overview: overview_track_name\n            },\n            bookmarks: bookmarks\n        };\n\n        // Make call to save visualization.\n        return $.ajax({\n            url: `${Galaxy.root}visualization/save`,\n            type: \"POST\",\n            dataType: \"json\",\n            data: {\n                id: this.view.vis_id,\n                title: this.view.config.get_value(\"name\"),\n                dbkey: this.view.dbkey,\n                type: \"trackster\",\n                vis_json: JSON.stringify(viz_config)\n            }\n        })\n            .success(vis_info => {\n                Galaxy.modal.hide();\n                this.view.vis_id = vis_info.vis_id;\n                this.view.has_changes = false;\n\n                // Needed to set URL when first saving a visualization.\n                window.history.pushState({}, \"\", vis_info.url + window.top.location.hash);\n            })\n            .error(() => {\n                // show dialog\n                Galaxy.modal.show({\n                    title: _l(\"Could Not Save\"),\n                    body: \"Could not save visualization. Please try again later.\",\n                    buttons: {\n                        Cancel: () => {\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n            });\n    }\n\n    /**\n     * Create button menu\n     */\n    createButtonMenu() {\n        var menu = IconButton.create_icon_buttons_menu(\n            [\n                {\n                    icon_class: \"plus-button\",\n                    title: _l(\"Add tracks\"),\n                    on_click: () => {\n                        visualization.select_datasets({ dbkey: this.view.dbkey }, new_tracks => {\n                            _.each(new_tracks, track => {\n                                this.view.add_drawable(tracks.object_from_template(track, this.view, this.view));\n                            });\n                        });\n                    }\n                },\n                {\n                    icon_class: \"block--plus\",\n                    title: _l(\"Add group\"),\n                    on_click: () => {\n                        this.view.add_drawable(\n                            new tracks.DrawableGroup(this.view, this.view, {\n                                name: \"New Group\"\n                            })\n                        );\n                    }\n                },\n                {\n                    icon_class: \"bookmarks\",\n                    title: _l(\"Bookmarks\"),\n                    on_click: () => {\n                        // HACK -- use style to determine if panel is hidden and hide/show accordingly.\n                        window.force_right_panel($(\"div#right\").css(\"right\") == \"0px\" ? \"hide\" : \"show\");\n                    }\n                },\n                {\n                    icon_class: \"globe\",\n                    title: _l(\"Circster\"),\n                    on_click: () => {\n                        window.top.location = `${this.baseURL}visualization/circster?id=${this.view.vis_id}`;\n                    }\n                },\n                {\n                    icon_class: \"disk--arrow\",\n                    title: _l(\"Save\"),\n                    on_click: () => {\n                        this.save_viz();\n                    }\n                },\n                {\n                    icon_class: \"cross-circle\",\n                    title: _l(\"Close\"),\n                    on_click: () => {\n                        this.handle_unsaved_changes(this.view);\n                    }\n                }\n            ],\n            {\n                tooltip_config: { placement: \"bottom\" }\n            }\n        );\n\n        this.buttonMenu = menu;\n        return menu;\n    }\n\n    /**\n     * Add bookmark.\n     */\n    add_bookmark(position, annotation, editable) {\n        // Create HTML.\n        var bookmarks_container = $(\"#right .unified-panel-body\");\n\n        var new_bookmark = $(\"<div/>\")\n            .addClass(\"bookmark\")\n            .appendTo(bookmarks_container);\n\n        var position_div = $(\"<div/>\")\n            .addClass(\"position\")\n            .appendTo(new_bookmark);\n\n        //position_link\n        $(\"<a href=''/>\")\n            .text(position)\n            .appendTo(position_div)\n            .click(() => {\n                this.view.go_to(position);\n                return false;\n            });\n\n        var annotation_div = $(\"<div/>\")\n            .text(annotation)\n            .appendTo(new_bookmark);\n\n        // If editable, enable bookmark deletion and annotation editing.\n        if (editable) {\n            var delete_icon_container = $(\"<div/>\")\n                .addClass(\"delete-icon-container\")\n                .prependTo(new_bookmark)\n                .click(() => {\n                    // Remove bookmark.\n                    new_bookmark.slideUp(\"fast\");\n                    new_bookmark.remove();\n                    this.view.has_changes = true;\n                    return false;\n                });\n\n            // delete_icon\n            $(\"<a href=''/>\")\n                .addClass(\"icon-button delete\")\n                .appendTo(delete_icon_container);\n\n            annotation_div\n                .make_text_editable({\n                    num_rows: 3,\n                    use_textarea: true,\n                    help_text: \"Edit bookmark note\"\n                })\n                .addClass(\"annotation\");\n        }\n\n        this.view.has_changes = true;\n        return new_bookmark;\n    }\n\n    /**\n     * Create a complete Trackster visualization. Returns view.\n     */\n    create_visualization(view_config, viewport_config, drawables_config, bookmarks_config, editable) {\n        // Create view.\n        this.view = new tracks.TracksterView(_.extend(view_config, { header: false }));\n        this.view.editor = true;\n\n        $.when(this.view.load_chroms_deferred).then(chrom_info => {\n            var overview_drawable_name = null;\n            // Viewport config.\n            if (viewport_config) {\n                var chrom = viewport_config.chrom;\n                var start = viewport_config.start;\n                var end = viewport_config.end;\n                overview_drawable_name = viewport_config.overview;\n\n                if (chrom && start !== undefined && end) {\n                    this.view.change_chrom(chrom, start, end);\n                } else {\n                    // No valid viewport, so use first chromosome.\n                    this.view.change_chrom(chrom_info[0].chrom);\n                }\n            } else {\n                // No viewport, so use first chromosome.\n                this.view.change_chrom(chrom_info[0].chrom);\n            }\n\n            // Add drawables to view.\n            if (drawables_config) {\n                // FIXME: can from_dict() be used to create view and add drawables?\n                for (let i = 0; i < drawables_config.length; i++) {\n                    this.view.add_drawable(tracks.object_from_template(drawables_config[i], this.view, this.view));\n                }\n            }\n\n            // Set overview.\n            for (let i = 0; i < this.view.drawables.length; i++) {\n                if (this.view.drawables[i].config.get_value(\"name\") === overview_drawable_name) {\n                    this.view.set_overview(this.view.drawables[i]);\n                    break;\n                }\n            }\n\n            // Load bookmarks.\n            if (bookmarks_config) {\n                var bookmark;\n                for (let i = 0; i < bookmarks_config.length; i++) {\n                    bookmark = bookmarks_config[i];\n                    this.add_bookmark(bookmark.position, bookmark.annotation, editable);\n                }\n            }\n\n            // View has no changes as of yet.\n            this.view.has_changes = false;\n        });\n\n        // Final initialization.\n        this.set_up_router({ view: this.view });\n\n        // TODO: This is hopefully not necessary anymore, since we're using the instance view.  Do it for compatibility for now.\n        return this.view;\n    }\n\n    /**\n     * Set up location router to use hashes as track browser locations.\n     */\n    set_up_router(options) {\n        new visualization.TrackBrowserRouter(options);\n        Backbone.history.start();\n    }\n\n    /**\n     * Set up keyboard navigation for a visualization.\n     */\n    init_keyboard_nav(view) {\n        // Keyboard navigation. Scroll ~7% of height when scrolling up/down.\n        $(document).keyup(e => {\n            // Do not navigate if arrow keys used in input element.\n            if ($(e.srcElement).is(\":input\")) {\n                return;\n            }\n\n            // Key codes: left == 37, up == 38, right == 39, down == 40\n            switch (e.which) {\n                case 37:\n                    view.move_fraction(0.25);\n                    break;\n                case 38:\n                    // var change = Math.round(view.viewport_container.height() / 15.0);\n                    view.viewport_container.scrollTop(view.viewport_container.scrollTop() - 20);\n                    break;\n                case 39:\n                    view.move_fraction(-0.25);\n                    break;\n                case 40:\n                    // var change = Math.round(view.viewport_container.height() / 15.0);\n                    view.viewport_container.scrollTop(view.viewport_container.scrollTop() + 20);\n                    break;\n            }\n        });\n    }\n\n    /**\n     * Handle unsaved changes in visualization.\n     */\n    handle_unsaved_changes(view) {\n        if (view.has_changes) {\n            Galaxy.modal.show({\n                title: _l(\"Close visualization\"),\n                body: \"There are unsaved changes to your visualization which will be lost if you do not save them.\",\n                buttons: {\n                    Cancel: () => {\n                        Galaxy.modal.hide();\n                    },\n                    \"Leave without Saving\": () => {\n                        $(window).off(\"beforeunload\");\n                        window.top.location = `${Galaxy.root}visualizations/list`;\n                    },\n                    Save: () => {\n                        $.when(this.save_viz()).then(() => {\n                            window.top.location = `${Galaxy.root}visualizations/list`;\n                        });\n                    }\n                }\n            });\n        } else {\n            window.top.location = `${Galaxy.root}visualizations/list`;\n        }\n    }\n}\n\nclass TracksterUIView extends Backbone.View {\n    constructor(options) {\n        super(options);\n    }\n    // initalize trackster\n    initialize() {\n        // load ui\n        this.ui = new TracksterUI(Galaxy.root);\n\n        // create button menu\n        this.ui.createButtonMenu();\n\n        // attach the button menu to the panel header and float it left\n        this.ui.buttonMenu.$el.attr(\"style\", \"float: right\");\n\n        // add to center panel\n        $(\"#center .unified-panel-header-inner\").append(this.ui.buttonMenu.$el);\n\n        // configure right panel\n        $(\"#right .unified-panel-title\").append(\"Bookmarks\");\n        $(\"#right .unified-panel-icons\").append(\n            \"<a id='add-bookmark-button' class='icon-button menu-button plus-button' href='javascript:void(0);' title='Add bookmark'></a>\"\n        );\n\n        // resize view when showing/hiding right panel (bookmarks for now).\n        $(\"#right-border\").click(() => {\n            this.ui.view.resize_window();\n        });\n\n        // hide right panel\n        window.force_right_panel(\"hide\");\n\n        // check if id is available\n        if (window.galaxy_config.app.id) {\n            this.view_existing();\n        } else if (query_string.get(\"dataset_id\")) {\n            this.choose_existing_or_new();\n        } else {\n            this.view_new();\n        }\n    }\n\n    choose_existing_or_new() {\n        var dbkey = query_string.get(\"dbkey\");\n        var listTracksParams = {};\n\n        var dataset_params = {\n            dbkey: dbkey,\n            dataset_id: query_string.get(\"dataset_id\"),\n            hda_ldda: query_string.get(\"hda_ldda\"),\n            gene_region: query_string.get(\"gene_region\")\n        };\n\n        if (dbkey) {\n            listTracksParams[\"f-dbkey\"] = dbkey;\n        }\n\n        Galaxy.modal.show({\n            title: \"View Data in a New or Saved Visualization?\",\n            // either have text in here or have to remove body and the header/footer margins\n            body: `<p><ul style='list-style: disc inside none'>You can add this dataset as:<li>a new track to one of your existing, saved Trackster sessions if they share the genome build: <b>${dbkey ||\n                \"Not available.\"}</b></li><li>or create a new session with this dataset as the only track</li></ul></p>`,\n            buttons: {\n                Cancel: () => {\n                    window.top.location = `${Galaxy.root}visualizations/list`;\n                },\n                \"View in saved visualization\": () => {\n                    this.view_in_saved(dataset_params);\n                },\n                \"View in new visualization\": () => {\n                    this.view_new();\n                }\n            }\n        });\n    }\n\n    // view\n    view_in_saved(dataset_params) {\n        var tracks_grid = new GridView({\n            url_base: `${Galaxy.root}visualization/list_tracks`,\n            embedded: true\n        });\n        Galaxy.modal.show({\n            title: _l(\"Add Data to Saved Visualization\"),\n            body: tracks_grid.$el,\n            buttons: {\n                Cancel: () => {\n                    window.top.location = `${Galaxy.root}visualizations/list`;\n                },\n                \"Add to visualization\": () => {\n                    $(window.parent.document)\n                        .find(\"input[name=id]:checked\")\n                        .each(() => {\n                            dataset_params.id = $(this).val();\n                            window.top.location = `${Galaxy.root}visualization/trackster?${$.param(dataset_params)}`;\n                        });\n                }\n            }\n        });\n    }\n\n    // view\n    view_existing() {\n        // get config\n        var viz_config = window.galaxy_config.app.viz_config;\n\n        // view\n        this.ui.create_visualization(\n            {\n                container: $(\"#center .unified-panel-body\"),\n                name: viz_config.title,\n                vis_id: viz_config.vis_id,\n                dbkey: viz_config.dbkey\n            },\n            viz_config.viewport,\n            viz_config.tracks,\n            viz_config.bookmarks,\n            true\n        );\n\n        // initialize editor\n        this.init_editor();\n    }\n\n    // view\n    view_new() {\n        // ajax\n        $.ajax({\n            url: `${Galaxy.root}api/genomes?chrom_info=True`,\n            data: {},\n            error: () => {\n                alert(\"Couldn't create new browser.\");\n            },\n            success: response => {\n                // show dialog\n                Galaxy.modal.show({\n                    title: _l(\"New Visualization\"),\n                    body: this.template_view_new(response),\n                    buttons: {\n                        Cancel: () => {\n                            window.top.location = `${Galaxy.root}visualizations/list`;\n                        },\n                        Create: () => {\n                            this.create_browser($(\"#new-title\").val(), $(\"#new-dbkey\").val());\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n\n                // select default\n                var dbkeys_in_genomes = response.map(r => r[1]);\n                if (\n                    window.galaxy_config.app.default_dbkey &&\n                    _.contains(dbkeys_in_genomes, window.galaxy_config.app.default_dbkey)\n                ) {\n                    $(\"#new-dbkey\").val(window.galaxy_config.app.default_dbkey);\n                }\n\n                // change focus\n                $(\"#new-title\").focus();\n                $(\"select[name='dbkey']\").select2();\n\n                // to support the large number of options for dbkey, enable scrolling in overlay.\n                $(\"#overlay\").css(\"overflow\", \"auto\");\n            }\n        });\n    }\n\n    // new browser form\n    template_view_new(response) {\n        // start template\n        var html =\n            '<form id=\"new-browser-form\" action=\"javascript:void(0);\" method=\"post\" onsubmit=\"return false;\">' +\n            '<div class=\"form-row\">' +\n            '<label for=\"new-title\">Browser name:</label>' +\n            '<div class=\"form-row-input\">' +\n            '<input type=\"text\" name=\"title\" id=\"new-title\" value=\"Unnamed\"></input>' +\n            \"</div>\" +\n            '<div style=\"clear: both;\"></div>' +\n            \"</div>\" +\n            '<div class=\"form-row\">' +\n            '<label for=\"new-dbkey\">Reference genome build (dbkey): </label>' +\n            '<div class=\"form-row-input\">' +\n            '<select name=\"dbkey\" id=\"new-dbkey\">';\n\n        // add dbkeys\n        for (let i = 0; i < response.length; i++) {\n            html += `<option value=\"${response[i][1]}\">${response[i][0]}</option>`;\n        }\n\n        // close selection/finalize template\n        html += `</select></div><div style=\"clear: both;\"></div></div><div class=\"form-row\">Is the build not listed here? <a href=\"${\n            Galaxy.root\n        }custom_builds\" target=\"_top\">Add a Custom Build</a></div></form>`;\n\n        // return\n        return html;\n    }\n\n    // initialization for editor-specific functions.\n    init_editor() {\n        // set title\n        $(\"#center .unified-panel-title\").text(`${this.ui.view.config.get_value(\"name\")} (${this.ui.view.dbkey})`);\n\n        // add dataset\n        if (window.galaxy_config.app.add_dataset)\n            $.ajax({\n                url: `${Galaxy.root}api/datasets/${window.galaxy_config.app.add_dataset}`,\n                data: { hda_ldda: \"hda\", data_type: \"track_config\" },\n                dataType: \"json\",\n                success: track_data => {\n                    this.ui.view.add_drawable(tracks.object_from_template(track_data, this.ui.view, this.ui.view));\n                }\n            });\n\n        // initialize icons\n        $(\"#add-bookmark-button\").click(() => {\n            // add new bookmark.\n            var position = `${this.ui.view.chrom}:${this.ui.view.low}-${this.ui.view.high}`;\n\n            var annotation = \"Bookmark description\";\n            return this.ui.add_bookmark(position, annotation, true);\n        });\n\n        // initialize keyboard\n        this.ui.init_keyboard_nav(this.ui.view);\n\n        $(window).on(\"beforeunload\", () => {\n            if (this.ui.view.has_changes) {\n                return \"There are unsaved changes to your visualization that will be lost if you leave this page.\";\n            }\n        });\n    }\n\n    // create\n    create_browser(name, dbkey) {\n        $(document).trigger(\"convert_to_values\");\n\n        this.ui.create_visualization(\n            {\n                container: $(\"#center .unified-panel-body\"),\n                name: name,\n                dbkey: dbkey\n            },\n            window.galaxy_config.app.gene_region\n        );\n\n        // initialize editor\n        this.init_editor();\n\n        // modify view setting\n        this.ui.view.editor = true;\n    }\n}\n\nexport default {\n    TracksterUI: TracksterUI,\n    GalaxyApp: TracksterUIView\n};\n"]}