{"version":3,"sources":["viz/trackster/tracks.js"],"names":["_","Backbone","extend","html_elt_js_obj_dict","is_container","element","obj","attr","moveable","handle_class","container_selector","element_js_obj","bind","handle","relative","e","d","$","parent","children","this_obj","child","container","top","bottom","i","parents","length","position","outerHeight","cur_container","offsetY","insertBefore","remove_drawable","add_drawable_before","insertAfter","add_drawable","get","is","find","prepend","append","hasClass","move_drawable","deltaY","addClass","removeClass","ERROR_PADDING","MAX_FEATURE_DEPTH","MIN_SQUISH_VIEW_WIDTH","TILE_SIZE","DEFAULT_DATA_QUERY_WAIT","MAX_CHROMS_SELECTABLE","DATA_ERROR","DATA_NOCONVERTER","DATA_NONE","DATA_PENDING","DATA_CANNOT_RUN_TOOL","DATA_OK","TILE_CACHE_SIZE","CONTINUOUS_DATA_MODES","round","num","places","val","Math","pow","supportsByteRanges","url","promise","Deferred","ajax","type","beforeSend","xhr","setRequestHeader","success","result","status","resolve","Drawable","view","obj_dict","id_counter","id","drag_handle_class","is_overview","action_icons","config","config_mod","ConfigSettingCollection","from_models_and_saved_values","build_config_params","prefs","get_value","set_value","name","config_onchange","on","container_div","build_container_div","header_div","header","header_view","viz_views","TrackHeaderView","model","$el","icons_div","hover","show","hide","prototype","action_icons_def","title","css_class","on_click_fn","drawable","toggle_icon","hide_contents","show_contents","ConfigSettingCollectionView","collection","render_in_modal","remove","config_params","key","label","default_value","hidden","init","changed","can_draw","enabled","request_draw","_draw","options","to_dict","set_name","new_name","old_name","revert_name","update_intro_div","update_icons","get_drawables","DrawableCollection","call","obj_type","drawables","unpack_drawables","drawables_array","object_from_template","dictified_drawables","push","to_key_value_dict","other","index","indexOf","splice","replace_drawable","old_drawable","new_drawable","update_html","replaceWith","new_position","get_tracks","track_type","queue","slice","tracks","shift","concat","DrawableGroup","content_div","appendTo","filters_manager","filters_mod","FiltersManager","after","parent_div","saved_filters_managers","old_manager","filters","visible","setup_multitrack_filtering","group","show_composite_track","clear_filters","_restore_filter_managers","clear_tile_cache","toggle","tiles_div","num_drawables","composite_icon","filters_icon","CompositeTrack","j","same_type","a_type","get_type","num_feature_tracks","FeatureTrack","LineTrack","shared_filters","filter","remove_all","filter_name","new_filter","NumberFilter","add_filter","init_filters","composite_track","each","TracksterView","View","initialize","chrom","vis_id","dbkey","stand_alone","undefined","label_tracks","tracks_to_be_redrawn","max_low","max_high","zoom_factor","min_separation","has_changes","load_chroms_deferred","render","canvas_manager","visualization","CanvasManager","ownerDocument","reset","requested_redraw","parent_element","top_container","browser_content_div","bottom_container","top_labeltrack","viewport_container","intro_div","text","click","select_datasets","track","nav_container","prependTo","nav","overview","overview_viewport","overview_close","overview_highlight","overview_box_background","overview_box","default_overview_height","height","nav_controls","chrom_select","submit_nav","keyCode","which","go_to","location_span","stopPropagation","nav_input","tooltip","placement","low","high","css","select","focus","autocomplete","source","request","response","all_features","feature_search_deferreds","map","t","data_manager","search_features","term","dataset_features","when","apply","done","feature","value","minLength","hidden_input","zo_link","zoom_out","zi_link","zoom_in","load_chroms","change_chrom","trigger","pageX","current_x","offsetX","delta","delta_chrom","width","move_delta","reset_overview","clientX","original_low","current_height","clientY","new_scroll","scrollTop","proxy","left","min","startX","offset","abs","max","span","update_location","old_low","request_redraw","add_label_track","LabelTrack","window","resize_timer","clearTimeout","setTimeout","resize_window","document","redraw","get_base_color","base","toLowerCase","trigger_navigate","new_chrom","new_low","new_high","delay","timer","util","commatize","url_parms","chrom_data","Galaxy","root","data","dataType","chrom_info","reference","ref_track","ReferenceTrack","reference_track","html","len","chrom_option","prev_chroms","next_chroms","chrom_start_index","start_index","error","alert","then","found","grep","v","str","replace","chrom_pos","split","parseInt","move_fraction","fraction","current_chrom_span","data_fetch","redraw_on_move_fn","self","label_track","track_list","track_options","to","requestAnimationFrame","_redraw","floor","ceil","resolution_px_b","left_px","width_px","min_width_px","point","cur_center","new_half","resize_viewport","set_overview","overview_drawable","dataset","copy","postdraw_actions","TracksterTool","tools_mod","Tool","defaults","tool_state","set","remove_inputs","state_dict","get_inputs_dict","is_visible","ToolParameterView","events","param_div","param","html_div","update_value","update_event","target","TracksterToolView","set_visible","tool","keydown","param_view","run_tool_row","run_on_dataset_button","run_on_region_button","run_on_region","run_on_dataset","update_params","params","run","target_dataset_id","action","tool_id","modal","body","buttons","Close","region","GenomeRegion","start","end","url_params","regions","toJSON","track_name","tool_region_and_parameters_str","new_track","constructor","hda_ldda","init_for_tool_data","change_mode","mode","set_filters_manager","set_dataset","Dataset","track_data","success_callback","inputs","ss_deferred","ServerStateDeferred","ajax_settings","JSON","stringify","contentType","interval","success_fn","go","message","FilterScaler","default_val","painters","Scaler","gen_val","feature_data","Number","MAX_VALUE","parseFloat","Tile","w_scale","canvas","html_elt","stale","predisplay_actions","LineTrackTile","FeatureTrackTile","all_slotted","feature_mapper","incomplete_features","seq_data","has_icons","other_tiles_features_drawn","Track","Model","dataset_check_type","data_url_extra_params","data_query_wait","GenomeDataManager","genome","Genome","chroms_info","data_mode_compatible","data_and_mode_compatible","can_subset","min_height_px","max_height_px","visible_height_px","resize","add_resize_handle","cancel_fn","unbind","ok_fn","regions_to_use","view_region","bookmarked_regions","from_str","elt","location","href","dataset_id","Collection","No","Yes","on_resize","in_handle","in_drag","drag_control","original_height","new_height","tile_cache","clear","ReadTrack","VariantTrack","show_message","msg_html","retry","init_deferred","data_type","getJSON","kind","msg_elt","valid_chroms","predraw_init","stats","min_value","max_value","mean","sd","set_default_value","TiledTrack","filters_available","Cache","left_offset","tool_view","dynamic_tool_div","overlay_div","slotters","max_rows","set_min_max","isNaN","new_mode","mode_icon","tools_icon","param_space_viz_icon","_gen_tile_cache_key","tile_region","before_draw","clear_after","resolution","tile_width","tile_index","tile_promise","tile_promises","tiles","draw_helper","tile","_add_yaxis_label","on_change","pref_name","make_text_editable","num_cols","on_finish","new_val","help_text","line_track_tiles","force","icons_present","get_mode","update_auto_mode","display_mode","_get_drawables","is_tile","o","get_elt","show_tile","get_tile_data","data_mode","m","tile_data","get_data","tile_drawn","set_elt","tracks_data","is_deferred","subset_entry","pop","drawing_modes","drawing_heights","get_canvas_height","new_canvas","tile_low","tile_high","ctx","getContext","translate","globalAlpha","globalCompositeOperation","draw_tile","canvas_width","_draw_line_track_tile","painter","LinePainter","draw","ref_seq","tile_element","track_height","region_str","toString","param_str","values","join","dataset_type","extra_info","entry","range","tickDistance","log","new_div","screenPosition","display_modes","union","show_group","visible_height","init_deferreds","update_all_min_max","max_height","char_width_px","data_url","GenomeReferenceDataManager","cur_visible","new_visible","subset","font","manager","default_font","textAlign","c","str_len","fillStyle","fillText","bbi","BBIDataManager","DiagonalHeatmapTrack","DiagonalHeatmapPainter","summary_draw_height","start_end_dct","set_painter_from_config","help","ArcLinkedFeaturePainter","LinkedFeaturePainter","all_incomplete_features","pluck","inc_features","tile_incomplete_features","omit","f","keys","size","features","new_canvas_ctx","drawImage","new_tile","update_ui_elt","example_feature","applies_to","show_more_rows_icon","incremental_slots","level","dummy_context","slotter","slotting","FeatureSlotter","measureText","x","slot_features","rows_required","dummy_painter","get_required_height","cur_tile","filtered","slots","hide_feature","flen","update_attrs","keep","filter_alpha_scaler","alpha_filter","filter_height_scaler","height_filter","b","draw_results","translation","VariantPainter","num_samples","get_metadata","match","deferreds","fetch","sample_names","font_size","samples_div_html","ReadPainter","addable_objects","VcfTrack","template","drawable_type"],"mappings":"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","file":"../../../scripts/viz/trackster/tracks.js","sourcesContent":["import _l from \"utils/localization\";\nimport * as _ from \"libs/underscore\";\nimport * as Backbone from \"libs/backbone\";\nimport visualization from \"viz/visualization\";\nimport viz_views from \"viz/viz_views\";\nimport util from \"viz/trackster/util\";\nimport slotting from \"viz/trackster/slotting\";\nimport painters from \"viz/trackster/painters\";\nimport filters_mod from \"viz/trackster/filters\";\nimport data from \"mvc/dataset/data\";\nimport tools_mod from \"mvc/tool/tools\";\nimport config_mod from \"utils/config\";\nimport bbi from \"viz/bbi-data-manager\";\nimport \"ui/editable-text\";\nvar extend = _.extend;\n\n/* global $ */\n/* global Galaxy */\n\n// ---- Web UI specific utilities ----\n\n/**\n * Dictionary of HTML element-JavaScript object relationships.\n */\n// TODO: probably should separate moveable objects from containers.\nvar html_elt_js_obj_dict = {};\n\n/**\n * Designates an HTML as a container.\n */\nfunction is_container(element, obj) {\n    html_elt_js_obj_dict[element.attr(\"id\")] = obj;\n}\n\n/**\n * Make `element` moveable within parent and sibling elements by dragging `handle` (a selector).\n * Function manages JS objects, containers as well.\n *\n * @param element HTML element to make moveable\n * @param handle_class classname that denotes HTML element to be used as handle\n * @param container_selector selector used to identify possible containers for this element\n * @param element_js_obj JavaScript object associated with element; used\n */\nfunction moveable(element, handle_class, container_selector, element_js_obj) {\n    // HACK: set default value for container selector.\n    container_selector = \".group\";\n\n    // Register element with its object.\n    html_elt_js_obj_dict[element.attr(\"id\")] = element_js_obj;\n\n    // Need to provide selector for handle, not class.\n    element\n        .bind(\"drag\", { handle: `.${handle_class}`, relative: true }, function(e, d) {\n            var element = $(this);\n            var parent = element.parent();\n            // Only sorting amongst tracks and groups.\n            var children = parent.children(\".track,.group\");\n            var this_obj = html_elt_js_obj_dict[$(this).attr(\"id\")];\n            var child;\n            var container;\n            var top;\n            var bottom;\n            var i;\n\n            //\n            // Enable three types of dragging: (a) out of container; (b) into container;\n            // (c) sibling movement, aka sorting. Handle in this order for simplicity.\n            //\n\n            // Handle dragging out of container.\n            container = $(this).parents(container_selector);\n            if (container.length !== 0) {\n                top = container.position().top;\n                bottom = top + container.outerHeight();\n                var cur_container = html_elt_js_obj_dict[container.attr(\"id\")];\n                if (d.offsetY < top) {\n                    // Moving above container.\n                    $(this).insertBefore(container);\n                    cur_container.remove_drawable(this_obj);\n                    cur_container.container.add_drawable_before(this_obj, cur_container);\n                    return;\n                } else if (d.offsetY > bottom) {\n                    // Moving below container.\n                    $(this).insertAfter(container);\n                    cur_container.remove_drawable(this_obj);\n                    cur_container.container.add_drawable(this_obj);\n                    return;\n                }\n            }\n\n            // Handle dragging into container. Child is appended to container's content_div.\n            container = null;\n            for (i = 0; i < children.length; i++) {\n                child = $(children.get(i));\n                top = child.position().top;\n                bottom = top + child.outerHeight();\n                // Dragging into container if child is a container and offset is inside container.\n                if (child.is(container_selector) && this !== child.get(0) && d.offsetY >= top && d.offsetY <= bottom) {\n                    // Append/prepend based on where offsetY is closest to and return.\n                    if (d.offsetY - top < bottom - d.offsetY) {\n                        child.find(\".content-div\").prepend(this);\n                    } else {\n                        child.find(\".content-div\").append(this);\n                    }\n                    // Update containers. Object may not have container if it is being moved quickly.\n                    if (this_obj.container) {\n                        this_obj.container.remove_drawable(this_obj);\n                    }\n                    html_elt_js_obj_dict[child.attr(\"id\")].add_drawable(this_obj);\n                    return;\n                }\n            }\n\n            // Handle sibling movement, aka sorting.\n\n            // Determine new position\n            for (i = 0; i < children.length; i++) {\n                child = $(children.get(i));\n                if (\n                    d.offsetY < child.position().top &&\n                    // Cannot move tracks above reference track or intro div.\n                    !(child.hasClass(\"reference-track\") || child.hasClass(\"intro\"))\n                ) {\n                    break;\n                }\n            }\n\n            // If not already in the right place, move. Need\n            // to handle the end specially since we don't have\n            // insert at index\n            if (i === children.length) {\n                if (this !== children.get(i - 1)) {\n                    parent.append(this);\n                    html_elt_js_obj_dict[parent.attr(\"id\")].move_drawable(this_obj, i);\n                }\n            } else if (this !== children.get(i)) {\n                $(this).insertBefore(children.get(i));\n                // Need to adjust insert position if moving down because move is changing\n                // indices of all list items.\n                html_elt_js_obj_dict[parent.attr(\"id\")].move_drawable(this_obj, d.deltaY > 0 ? i - 1 : i);\n            }\n        })\n        .bind(\"dragstart\", function() {\n            $(this).addClass(\"dragging\");\n        })\n        .bind(\"dragend\", function() {\n            $(this).removeClass(\"dragging\");\n        });\n}\n\n/**\n * Init constants & functions used throughout trackster.\n */\n\n// Padding at the top of tracks for error messages\nconst ERROR_PADDING = 20;\n\n// Maximum number of rows un a slotted track\nconst MAX_FEATURE_DEPTH = 100;\n\n// Minimum width for window for squish to be used.\nconst MIN_SQUISH_VIEW_WIDTH = 12000;\n\n// Number of pixels per tile, not including left offset.\nconst TILE_SIZE = 400;\n\nconst DEFAULT_DATA_QUERY_WAIT = 5000;\n\n// Maximum number of chromosomes that are selectable at any one time.\nconst MAX_CHROMS_SELECTABLE = 100;\n\nconst DATA_ERROR = \"Cannot display dataset due to an error. \";\n\nconst DATA_NOCONVERTER = \"A converter for this dataset is not installed. Please check your datatypes_conf.xml file.\";\n\nconst DATA_NONE = \"No data for this chrom/contig.\";\n\nconst DATA_PENDING =\n    \"Preparing data. This can take a while for a large dataset. \" +\n    \"If the visualization is saved and closed, preparation will continue in the background.\";\n\nconst DATA_CANNOT_RUN_TOOL = \"Tool cannot be rerun: \";\n//var DATA_LOADING = \"Loading data...\";\nconst DATA_OK = \"Ready for display\";\nconst TILE_CACHE_SIZE = 10;\n//var DATA_CACHE_SIZE = 20;\n//\n// Numerical/continuous data display modes.\nconst CONTINUOUS_DATA_MODES = [\"Histogram\", \"Line\", \"Filled\", \"Intensity\"];\n\n/**\n * Round a number to a given number of decimal places.\n */\nfunction round(num, places) {\n    // Default rounding is to integer.\n    if (!places) {\n        places = 0;\n    }\n\n    var val = Math.pow(10, places);\n    return Math.round(num * val) / val;\n}\n\n/**\n * Check if a server can do byte range requests.\n */\nfunction supportsByteRanges(url) {\n    var promise = $.Deferred();\n    $.ajax({\n        type: \"HEAD\",\n        url: url,\n        beforeSend: function(xhr) {\n            xhr.setRequestHeader(\"Range\", \"bytes=0-10\");\n        },\n        success: function(result, status, xhr) {\n            promise.resolve(xhr.status === 206);\n        }\n    });\n\n    return promise;\n}\n\n/**\n * Drawables hierarchy:\n *\n * Drawable\n *    --> DrawableCollection\n *        --> DrawableGroup\n *        --> View\n *    --> Track\n */\n\n/**\n * Base class for all drawable objects. Drawable objects are associated with a view and live in a\n * container. They have the following HTML elements and structure:\n *  <container_div>\n *      <header_div>\n *      <content_div>\n *\n * They optionally have a drag handle class.\n */\nvar Drawable = function(view, container, obj_dict) {\n    if (!Drawable.id_counter) {\n        Drawable.id_counter = 0;\n    }\n    this.id = Drawable.id_counter++;\n    this.view = view;\n    this.container = container;\n    this.drag_handle_class = obj_dict.drag_handle_class;\n    this.is_overview = false;\n    this.action_icons = {};\n\n    // -- Set up drawable configuration. --\n    this.config = config_mod.ConfigSettingCollection.from_models_and_saved_values(\n        this.build_config_params(),\n        obj_dict.prefs\n    );\n\n    // If there's no saved name, use object name.\n    if (!this.config.get_value(\"name\")) {\n        this.config.set_value(\"name\", obj_dict.name);\n    }\n    if (this.config_onchange) {\n        this.config.on(\"change\", this.config_onchange, this);\n    }\n\n    // Build Drawable HTML and behaviors.\n    this.container_div = this.build_container_div();\n    this.header_div = null;\n\n    // Use opt-out policy on header creation because this is the more frequent approach:\n    // unless flag set, create header.\n    if (obj_dict.header !== false) {\n        var header_view = new viz_views.TrackHeaderView({\n            model: this,\n            id: this.id\n        });\n\n        this.header_div = header_view.$el;\n        this.container_div.append(this.header_div);\n\n        // Show icons when users is hovering over track.\n        var icons_div = header_view.icons_div;\n        this.action_icons = header_view.action_icons;\n        this.container_div.hover(\n            () => {\n                icons_div.show();\n            },\n            () => {\n                icons_div.hide();\n            }\n        );\n    }\n};\n\nDrawable.prototype.action_icons_def = [\n    // Hide/show drawable content.\n    // FIXME: make this an odict for easier lookup.\n    {\n        name: \"toggle_icon\",\n        title: \"Hide/show content\",\n        css_class: \"toggle\",\n        on_click_fn: function(drawable) {\n            if (drawable.config.get_value(\"content_visible\")) {\n                drawable.action_icons.toggle_icon.addClass(\"toggle-expand\").removeClass(\"toggle\");\n                drawable.hide_contents();\n                drawable.config.set_value(\"content_visible\", false);\n            } else {\n                drawable.action_icons.toggle_icon.addClass(\"toggle\").removeClass(\"toggle-expand\");\n                drawable.config.set_value(\"content_visible\", true);\n                drawable.show_contents();\n            }\n        }\n    },\n    // Edit settings.\n    {\n        name: \"settings_icon\",\n        title: _l(\"Edit settings\"),\n        css_class: \"gear\",\n        on_click_fn: function(drawable) {\n            var view = new config_mod.ConfigSettingCollectionView({\n                collection: drawable.config\n            });\n            view.render_in_modal(\"Configure Track\");\n        }\n    },\n    // Remove.\n    {\n        name: \"remove_icon\",\n        title: _l(\"Remove\"),\n        css_class: \"remove-icon\",\n        on_click_fn: function(drawable) {\n            // Tooltip for remove icon must be deleted when drawable is deleted.\n            $(\".tooltip\").remove();\n            drawable.remove();\n        }\n    }\n];\n\nextend(Drawable.prototype, {\n    config_params: [\n        { key: \"name\", label: \"Name\", type: \"text\", default_value: \"\" },\n        {\n            key: \"content_visible\",\n            type: \"bool\",\n            default_value: true,\n            hidden: true\n        }\n    ],\n\n    build_config_params: function() {\n        return this.config_params;\n    },\n\n    config_onchange: function() {},\n\n    init: function() {},\n\n    changed: function() {\n        this.view.changed();\n    },\n\n    can_draw: function() {\n        if (this.enabled && this.config.get_value(\"content_visible\")) {\n            return true;\n        }\n\n        return false;\n    },\n\n    request_draw: function() {},\n\n    _draw: function(options) {},\n\n    /**\n     * Returns representation of object in a dictionary for easy saving.\n     * Use from_dict to recreate object.\n     */\n    to_dict: function() {},\n\n    /**\n     * Set drawable name.\n     */\n    set_name: function(new_name) {\n        this.old_name = this.config.get_value(\"name\");\n        this.config.set_value(\"name\", new_name);\n    },\n\n    /**\n     * Revert track name; currently name can be reverted only once.\n     */\n    revert_name: function() {\n        if (this.old_name) {\n            this.config.set_value(\"name\", this.old_name);\n        }\n    },\n\n    /**\n     * Remove drawable (a) from its container and (b) from the HTML.\n     */\n    remove: function() {\n        this.changed();\n\n        this.container.remove_drawable(this);\n        var view = this.view;\n        this.container_div.hide(0, function() {\n            $(this).remove();\n            // HACK: is there a better way to update the view?\n            view.update_intro_div();\n        });\n    },\n\n    /**\n     * Build drawable's container div; this is the parent div for all drawable's elements.\n     */\n    build_container_div: function() {},\n\n    /**\n     * Update icons.\n     */\n    update_icons: function() {},\n\n    /**\n     * Hide drawable's contents.\n     */\n    hide_contents: function() {},\n\n    /**\n     * Show drawable's contents.\n     */\n    show_contents: function() {},\n\n    /**\n     * Returns a shallow copy of all drawables in this drawable.\n     */\n    get_drawables: function() {}\n});\n\n/**\n * A collection of drawable objects.\n */\nvar DrawableCollection = function(view, container, obj_dict) {\n    Drawable.call(this, view, container, obj_dict);\n\n    // Attribute init.\n    this.obj_type = obj_dict.obj_type;\n    this.drawables = [];\n};\n\nextend(DrawableCollection.prototype, Drawable.prototype, {\n    /**\n     * Unpack and add drawables to the collection.\n     */\n    unpack_drawables: function(drawables_array) {\n        // Add drawables to collection.\n        this.drawables = [];\n        var drawable;\n        for (var i = 0; i < drawables_array.length; i++) {\n            drawable = object_from_template(drawables_array[i], this.view, this);\n            this.add_drawable(drawable);\n        }\n    },\n\n    /**\n     * Init each drawable in the collection.\n     */\n    init: function() {\n        for (var i = 0; i < this.drawables.length; i++) {\n            this.drawables[i].init();\n        }\n    },\n\n    /**\n     * Draw each drawable in the collection.\n     */\n    _draw: function(options) {\n        for (var i = 0; i < this.drawables.length; i++) {\n            this.drawables[i]._draw(options);\n        }\n    },\n\n    /**\n     * Returns representation of object in a dictionary for easy saving.\n     * Use from_dict to recreate object.\n     */\n    to_dict: function() {\n        var dictified_drawables = [];\n        for (var i = 0; i < this.drawables.length; i++) {\n            dictified_drawables.push(this.drawables[i].to_dict());\n        }\n        return {\n            prefs: this.config.to_key_value_dict(),\n            obj_type: this.obj_type,\n            drawables: dictified_drawables\n        };\n    },\n\n    /**\n     * Add a drawable to the end of the collection.\n     */\n    add_drawable: function(drawable) {\n        this.drawables.push(drawable);\n        drawable.container = this;\n        this.changed();\n    },\n\n    /**\n     * Add a drawable before another drawable.\n     */\n    add_drawable_before: function(drawable, other) {\n        this.changed();\n        var index = this.drawables.indexOf(other);\n        if (index !== -1) {\n            this.drawables.splice(index, 0, drawable);\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Replace one drawable with another.\n     */\n    replace_drawable: function(old_drawable, new_drawable, update_html) {\n        var index = this.drawables.indexOf(old_drawable);\n        if (index !== -1) {\n            this.drawables[index] = new_drawable;\n            if (update_html) {\n                old_drawable.container_div.replaceWith(new_drawable.container_div);\n            }\n            this.changed();\n        }\n        return index;\n    },\n\n    /**\n     * Remove drawable from this collection.\n     */\n    remove_drawable: function(drawable) {\n        var index = this.drawables.indexOf(drawable);\n        if (index !== -1) {\n            // Found drawable to remove.\n            this.drawables.splice(index, 1);\n            drawable.container = null;\n            this.changed();\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Move drawable to another location in collection.\n     */\n    move_drawable: function(drawable, new_position) {\n        var index = this.drawables.indexOf(drawable);\n        if (index !== -1) {\n            // Remove from current position:\n            this.drawables.splice(index, 1);\n            // insert into new position:\n            this.drawables.splice(new_position, 0, drawable);\n            this.changed();\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Returns all drawables in this drawable.\n     */\n    get_drawables: function() {\n        return this.drawables;\n    },\n\n    /**\n     * Returns all <track_type> tracks in collection.\n     */\n    get_tracks: function(track_type) {\n        // Initialize queue with copy of drawables array.\n        var queue = this.drawables.slice(0);\n\n        var tracks = [];\n        var drawable;\n        while (queue.length !== 0) {\n            drawable = queue.shift();\n            if (drawable instanceof track_type) {\n                tracks.push(drawable);\n            } else if (drawable.drawables) {\n                queue = queue.concat(drawable.drawables);\n            }\n        }\n        return tracks;\n    }\n});\n\n/**\n * A group of drawables that are moveable, visible.\n */\nvar DrawableGroup = function(view, container, obj_dict) {\n    extend(obj_dict, {\n        obj_type: \"DrawableGroup\",\n        drag_handle_class: \"group-handle\"\n    });\n    DrawableCollection.call(this, view, container, obj_dict);\n\n    // Set up containers/moving for group: register both container_div and content div as container\n    // because both are used as containers (container div to recognize container, content_div to\n    // store elements). Group can be moved.\n    this.content_div = $(\"<div/>\")\n        .addClass(\"content-div\")\n        .attr(\"id\", `group_${this.id}_content_div`)\n        .appendTo(this.container_div);\n    is_container(this.container_div, this);\n    is_container(this.content_div, this);\n    moveable(this.container_div, this.drag_handle_class, \".group\", this);\n\n    // Set up filters.\n    this.filters_manager = new filters_mod.FiltersManager(this);\n    this.header_div.after(this.filters_manager.parent_div);\n\n    // HACK: add div to clear floating elements.\n    this.filters_manager.parent_div.after($(\"<div style='clear: both'/>\"));\n\n    // For saving drawables' filter managers when group-level filtering is done:\n    this.saved_filters_managers = [];\n\n    // Add drawables.\n    if (\"drawables\" in obj_dict) {\n        this.unpack_drawables(obj_dict.drawables);\n    }\n\n    // Restore filters.\n    if (\"filters\" in obj_dict) {\n        // FIXME: Pass collection_dict to DrawableCollection/Drawable will make this easier.\n        var old_manager = this.filters_manager;\n        this.filters_manager = new filters_mod.FiltersManager(this, obj_dict.filters);\n        old_manager.parent_div.replaceWith(this.filters_manager.parent_div);\n\n        if (obj_dict.filters.visible) {\n            this.setup_multitrack_filtering();\n        }\n    }\n};\n\nextend(DrawableGroup.prototype, Drawable.prototype, DrawableCollection.prototype, {\n    action_icons_def: [\n        Drawable.prototype.action_icons_def[0],\n        Drawable.prototype.action_icons_def[1],\n        // Replace group with composite track.\n        {\n            name: \"composite_icon\",\n            title: _l(\"Show composite track\"),\n            css_class: \"layers-stack\",\n            on_click_fn: function(group) {\n                $(\".tooltip\").remove();\n                group.show_composite_track();\n            }\n        },\n        // Toggle track filters.\n        {\n            name: \"filters_icon\",\n            title: _l(\"Filters\"),\n            css_class: \"ui-slider-050\",\n            on_click_fn: function(group) {\n                // TODO: update Tooltip text.\n                if (group.filters_manager.visible()) {\n                    // Hiding filters.\n                    group.filters_manager.clear_filters();\n                    group._restore_filter_managers();\n                    // TODO: maintain current filter by restoring and setting saved manager's\n                    // settings to current/shared manager's settings.\n                    // TODO: need to restore filter managers when moving drawable outside group.\n                } else {\n                    // Showing filters.\n                    group.setup_multitrack_filtering();\n                    group.request_draw({ clear_tile_cache: true });\n                }\n                group.filters_manager.toggle();\n            }\n        },\n        Drawable.prototype.action_icons_def[2]\n    ],\n\n    build_container_div: function() {\n        var container_div = $(\"<div/>\")\n            .addClass(\"group\")\n            .attr(\"id\", `group_${this.id}`);\n        if (this.container) {\n            this.container.content_div.append(container_div);\n        }\n        return container_div;\n    },\n\n    hide_contents: function() {\n        this.tiles_div.hide();\n    },\n\n    show_contents: function() {\n        // Show the contents div and labels (if present)\n        this.tiles_div.show();\n        // Request a redraw of the content\n        this.request_draw();\n    },\n\n    update_icons: function() {\n        //\n        // Handle update when there are no tracks.\n        //\n        var num_drawables = this.drawables.length;\n        if (num_drawables === 0) {\n            this.action_icons.composite_icon.hide();\n            this.action_icons.filters_icon.hide();\n        } else if (num_drawables === 1) {\n            this.action_icons.composite_icon.toggle(this.drawables[0] instanceof CompositeTrack);\n            this.action_icons.filters_icon.hide();\n        } else {\n            // There are 2 or more tracks.\n\n            //\n            // Determine if a composite track can be created. Current criteria:\n            // (a) all tracks are line tracks;\n            //      OR\n            // FIXME: this is not enabled right now because it has not been well tested:\n            // (b) there is a single FeatureTrack.\n            //\n\n            // All tracks the same?\n            var i;\n\n            var j;\n            var drawable;\n            var same_type = true;\n            var a_type = this.drawables[0].get_type();\n            var num_feature_tracks = 0;\n            for (i = 0; i < num_drawables; i++) {\n                drawable = this.drawables[i];\n                if (drawable.get_type() !== a_type) {\n                    break;\n                }\n                if (drawable instanceof FeatureTrack) {\n                    num_feature_tracks++;\n                }\n            }\n\n            if (same_type && this.drawables[0] instanceof LineTrack) {\n                this.action_icons.composite_icon.show();\n            } else {\n                this.action_icons.composite_icon.hide();\n                $(\".tooltip\").remove();\n            }\n\n            //\n            // Set up group-level filtering and update filter icon.\n            //\n            if (num_feature_tracks > 1 && num_feature_tracks === this.drawables.length) {\n                //\n                // Find shared filters.\n                //\n                var shared_filters = {};\n\n                var filter;\n\n                // Init shared filters with filters from first drawable.\n                drawable = this.drawables[0];\n                for (j = 0; j < drawable.filters_manager.filters.length; j++) {\n                    filter = drawable.filters_manager.filters[j];\n                    shared_filters[filter.name] = [filter];\n                }\n\n                // Create lists of shared filters.\n                for (i = 1; i < this.drawables.length; i++) {\n                    drawable = this.drawables[i];\n                    for (j = 0; j < drawable.filters_manager.filters.length; j++) {\n                        filter = drawable.filters_manager.filters[j];\n                        if (filter.name in shared_filters) {\n                            shared_filters[filter.name].push(filter);\n                        }\n                    }\n                }\n\n                //\n                // Create filters for shared filters manager. Shared filters manager is group's\n                // manager.\n                //\n                this.filters_manager.remove_all();\n                for (var filter_name in shared_filters) {\n                    let filters = shared_filters[filter_name];\n                    if (filters.length === num_feature_tracks) {\n                        // Add new filter.\n                        // FIXME: can filter.copy() be used?\n                        let new_filter = new filters_mod.NumberFilter({\n                            name: filters[0].name,\n                            index: filters[0].index\n                        });\n                        this.filters_manager.add_filter(new_filter);\n                    }\n                }\n\n                // Show/hide icon based on filter availability.\n                this.action_icons.filters_icon.toggle(this.filters_manager.filters.length > 0);\n            } else {\n                this.action_icons.filters_icon.hide();\n            }\n        }\n    },\n\n    /**\n     * Restore individual track filter managers.\n     */\n    _restore_filter_managers: function() {\n        for (var i = 0; i < this.drawables.length; i++) {\n            this.drawables[i].filters_manager = this.saved_filters_managers[i];\n        }\n        this.saved_filters_managers = [];\n    },\n\n    /**\n     *\n     */\n    setup_multitrack_filtering: function() {\n        // Save tracks' managers and set up shared manager.\n        if (this.filters_manager.filters.length > 0) {\n            // For all tracks, save current filter manager and set manager to shared (this object's) manager.\n            this.saved_filters_managers = [];\n            for (var i = 0; i < this.drawables.length; i++) {\n                var drawable = this.drawables[i];\n                this.saved_filters_managers.push(drawable.filters_manager);\n                drawable.filters_manager = this.filters_manager;\n            }\n\n            //TODO: hide filters icons for each drawable?\n        }\n        this.filters_manager.init_filters();\n    },\n\n    /**\n     * Replace group with a single composite track that includes all group's tracks.\n     */\n    show_composite_track: function() {\n        var composite_track = new CompositeTrack(this.view, this.view, {\n            name: this.config.get_value(\"name\"),\n            drawables: this.drawables\n        });\n        this.container.replace_drawable(this, composite_track, true);\n        composite_track.request_draw();\n    },\n\n    add_drawable: function(drawable) {\n        DrawableCollection.prototype.add_drawable.call(this, drawable);\n        this.update_icons();\n    },\n\n    remove_drawable: function(drawable) {\n        DrawableCollection.prototype.remove_drawable.call(this, drawable);\n        this.update_icons();\n    },\n\n    to_dict: function() {\n        // If filters are visible, need to restore original filter managers before converting to dict.\n        if (this.filters_manager.visible()) {\n            this._restore_filter_managers();\n        }\n\n        var obj_dict = extend(DrawableCollection.prototype.to_dict.call(this), {\n            filters: this.filters_manager.to_dict()\n        });\n\n        // Setup multi-track filtering again.\n        if (this.filters_manager.visible()) {\n            this.setup_multitrack_filtering();\n        }\n\n        return obj_dict;\n    },\n\n    request_draw: function(options) {\n        _.each(this.drawables, d => {\n            d.request_draw(options);\n        });\n    }\n});\n\n/**\n * View object manages a trackster visualization, including tracks and user interactions.\n * Events triggered:\n *      navigate: when browser view changes to a new locations\n */\nvar TracksterView = Backbone.View.extend({\n    initialize: function(obj_dict) {\n        extend(obj_dict, {\n            obj_type: \"View\"\n        });\n        DrawableCollection.call(this, \"View\", obj_dict.container, obj_dict);\n        this.chrom = null;\n        this.vis_id = obj_dict.vis_id;\n        this.dbkey = obj_dict.dbkey;\n        this.stand_alone = obj_dict.stand_alone !== undefined ? obj_dict.stand_alone : true;\n        this.label_tracks = [];\n        this.tracks_to_be_redrawn = [];\n        this.max_low = 0;\n        this.max_high = 0;\n        this.zoom_factor = 3;\n        this.min_separation = 30;\n        this.has_changes = false;\n        // Deferred object that indicates when view's chrom data has been loaded.\n        this.load_chroms_deferred = null;\n        this.render();\n        this.canvas_manager = new visualization.CanvasManager(this.container.get(0).ownerDocument);\n        this.reset();\n\n        // Define track configuration\n        this.config = config_mod.ConfigSettingCollection.from_models_and_saved_values(\n            [\n                {\n                    key: \"name\",\n                    label: \"Name\",\n                    type: \"text\",\n                    default_value: \"\"\n                },\n                {\n                    key: \"a_color\",\n                    label: \"A Color\",\n                    type: \"color\",\n                    default_value: \"#FF0000\"\n                },\n                {\n                    key: \"c_color\",\n                    label: \"C Color\",\n                    type: \"color\",\n                    default_value: \"#00FF00\"\n                },\n                {\n                    key: \"g_color\",\n                    label: \"G Color\",\n                    type: \"color\",\n                    default_value: \"#0000FF\"\n                },\n                {\n                    key: \"t_color\",\n                    label: \"T Color\",\n                    type: \"color\",\n                    default_value: \"#FF00FF\"\n                },\n                {\n                    key: \"n_color\",\n                    label: \"N Color\",\n                    type: \"color\",\n                    default_value: \"#AAAAAA\"\n                }\n            ],\n            { name: obj_dict.name }\n        );\n    },\n\n    render: function() {\n        // Attribute init.\n        this.requested_redraw = false;\n\n        // Create DOM elements\n        var parent_element = this.container;\n\n        var view = this;\n        // Top container for things that are fixed at the top\n        this.top_container = $(\"<div/>\")\n            .addClass(\"top-container\")\n            .appendTo(parent_element);\n        // Browser content, primary tracks are contained in here\n        this.browser_content_div = $(\"<div/>\")\n            .addClass(\"content\")\n            .appendTo(parent_element);\n        // Bottom container for things that are fixed at the bottom\n        this.bottom_container = $(\"<div/>\")\n            .addClass(\"bottom-container\")\n            .appendTo(parent_element);\n        // Label track fixed at top\n        this.top_labeltrack = $(\"<div/>\")\n            .addClass(\"top-labeltrack\")\n            .appendTo(this.top_container);\n        // Viewport for dragging tracks in center\n        this.viewport_container = $(\"<div/>\")\n            .addClass(\"viewport-container\")\n            .attr(\"id\", \"viewport-container\")\n            .appendTo(this.browser_content_div);\n        // Alias viewport_container as content_div so that it matches function of DrawableCollection/Group content_div.\n        this.content_div = this.viewport_container;\n        is_container(this.viewport_container, view);\n        // Introduction div shown when there are no tracks.\n        this.intro_div = $(\"<div/>\")\n            .addClass(\"intro\")\n            .appendTo(this.viewport_container);\n        // Add tracks button\n        $(\"<div/>\")\n            .text(\"Add Datasets to Visualization\")\n            .addClass(\"action-button\")\n            .appendTo(this.intro_div)\n            .click(() => {\n                visualization.select_datasets({ dbkey: view.dbkey }, tracks => {\n                    _.each(tracks, track => {\n                        view.add_drawable(object_from_template(track, view, view));\n                    });\n                });\n            });\n\n        // Navigation at top\n        this.nav_container = $(\"<div/>\")\n            .addClass(\"trackster-nav-container\")\n            .prependTo(this.top_container);\n        this.nav = $(\"<div/>\")\n            .addClass(\"trackster-nav\")\n            .appendTo(this.nav_container);\n\n        if (this.stand_alone) {\n            this.nav_container.addClass(\"stand-alone\");\n            this.nav.addClass(\"stand-alone\");\n        }\n\n        // Overview (scrollbar and overview plot) at bottom\n        this.overview = $(\"<div/>\")\n            .addClass(\"overview\")\n            .appendTo(this.bottom_container);\n        this.overview_viewport = $(\"<div/>\")\n            .addClass(\"overview-viewport\")\n            .appendTo(this.overview);\n        this.overview_close = $(\"<a/>\")\n            .attr(\"title\", \"Close overview\")\n            .addClass(\"icon-button overview-close tooltip\")\n            .hide()\n            .appendTo(this.overview_viewport);\n        this.overview_highlight = $(\"<div/>\")\n            .addClass(\"overview-highlight\")\n            .hide()\n            .appendTo(this.overview_viewport);\n        this.overview_box_background = $(\"<div/>\")\n            .addClass(\"overview-boxback\")\n            .appendTo(this.overview_viewport);\n        this.overview_box = $(\"<div/>\")\n            .addClass(\"overview-box\")\n            .appendTo(this.overview_viewport);\n        this.default_overview_height = this.overview_box.height();\n\n        this.nav_controls = $(\"<div/>\")\n            .addClass(\"nav-controls\")\n            .appendTo(this.nav);\n        this.chrom_select = $(\"<select/>\")\n            .attr({ name: \"chrom\" })\n            .addClass(\"chrom-nav\")\n            .append(\"<option value=''>Loading</option>\")\n            .appendTo(this.nav_controls);\n        var submit_nav = function(e) {\n            if (e.type === \"focusout\" || (e.keyCode || e.which) === 13 || (e.keyCode || e.which) === 27) {\n                if ((e.keyCode || e.which) !== 27) {\n                    // Not escape key\n                    view.go_to($(this).val());\n                }\n                $(this).hide();\n                $(this).val(\"\");\n                view.location_span.show();\n                view.chrom_select.show();\n            }\n\n            // Suppress key presses so that they do impact viz.\n            e.stopPropagation();\n        };\n        this.nav_input = $(\"<input/>\")\n            .addClass(\"nav-input\")\n            .hide()\n            .bind(\"keyup focusout\", submit_nav)\n            .appendTo(this.nav_controls);\n        this.location_span = $(\"<span/>\")\n            .addClass(\"location\")\n            .attr(\"title\", \"Click to change location\")\n            .tooltip({ placement: \"bottom\" })\n            .appendTo(this.nav_controls);\n        this.location_span.click(() => {\n            view.location_span.hide();\n            view.chrom_select.hide();\n            view.nav_input.val(`${view.chrom}:${view.low}-${view.high}`);\n            view.nav_input.css(\"display\", \"inline-block\");\n            view.nav_input.select();\n            view.nav_input.focus();\n            // Set up autocomplete for tracks' features.\n            view.nav_input.autocomplete({\n                source: function(request, response) {\n                    // Using current text, query each track and create list of all matching features.\n                    var all_features = [];\n\n                    var feature_search_deferreds = $.map(view.get_tracks(FeatureTrack), t =>\n                        t.data_manager.search_features(request.term).success(dataset_features => {\n                            all_features = all_features.concat(dataset_features);\n                        })\n                    );\n\n                    // When all searching is done, fill autocomplete.\n                    $.when.apply($, feature_search_deferreds).done(() => {\n                        response(\n                            $.map(all_features, feature => ({\n                                label: feature[0],\n                                value: feature[1]\n                            }))\n                        );\n                    });\n                },\n                minLength: 2\n            });\n        });\n        if (this.vis_id !== undefined) {\n            this.hidden_input = $(\"<input/>\")\n                .attr(\"type\", \"hidden\")\n                .val(this.vis_id)\n                .appendTo(this.nav_controls);\n        }\n\n        this.zo_link = $(\"<a/>\")\n            .attr(\"id\", \"zoom-out\")\n            .attr(\"title\", \"Zoom out\")\n            .tooltip({ placement: \"bottom\" })\n            .click(() => {\n                view.zoom_out();\n            })\n            .appendTo(this.nav_controls);\n        this.zi_link = $(\"<a/>\")\n            .attr(\"id\", \"zoom-in\")\n            .attr(\"title\", \"Zoom in\")\n            .tooltip({ placement: \"bottom\" })\n            .click(() => {\n                view.zoom_in();\n            })\n            .appendTo(this.nav_controls);\n\n        // Get initial set of chroms.\n        this.load_chroms_deferred = this.load_chroms({ low: 0 });\n        this.chrom_select.bind(\"change\", () => {\n            view.change_chrom(view.chrom_select.val());\n        });\n\n        /*\n        this.browser_content_div.bind(\"mousewheel\", function( e, delta ) {\n            if (Math.abs(delta) < 0.5) {\n                return;\n            }\n            if (delta > 0) {\n                view.zoom_in(e.pageX, this.viewport_container);\n            } else {\n                view.zoom_out();\n            }\n            e.preventDefault();\n        });\n        */\n\n        // Blur tool/filter inputs when user clicks on content div.\n        this.browser_content_div.click(function(e) {\n            $(this)\n                .find(\"input\")\n                .trigger(\"blur\");\n        });\n\n        // Double clicking zooms in\n        this.browser_content_div.bind(\"dblclick\", function(e) {\n            view.zoom_in(e.pageX, this.viewport_container);\n        });\n\n        // Dragging the overview box (~ horizontal scroll bar)\n        this.overview_box\n            .bind(\"dragstart\", function(e, d) {\n                this.current_x = d.offsetX;\n            })\n            .bind(\"drag\", function(e, d) {\n                var delta = d.offsetX - this.current_x;\n                this.current_x = d.offsetX;\n                var delta_chrom = Math.round(\n                    (delta / view.viewport_container.width()) * (view.max_high - view.max_low)\n                );\n                view.move_delta(-delta_chrom);\n            });\n\n        this.overview_close.click(() => {\n            view.reset_overview();\n        });\n\n        // Dragging in the viewport scrolls\n        this.viewport_container\n            .bind(\"draginit\", (e, d) => {\n                // Disable interaction if started in scrollbar (for webkit)\n                if (e.clientX > view.viewport_container.width() - 16) {\n                    return false;\n                }\n            })\n            .bind(\"dragstart\", (e, d) => {\n                d.original_low = view.low;\n                d.current_height = e.clientY;\n                d.current_x = d.offsetX;\n            })\n            .bind(\"drag\", function(e, d) {\n                var container = $(this);\n                var delta = d.offsetX - d.current_x;\n                var new_scroll = container.scrollTop() - (e.clientY - d.current_height);\n                container.scrollTop(new_scroll);\n                d.current_height = e.clientY;\n                d.current_x = d.offsetX;\n                var delta_chrom = Math.round((delta / view.viewport_container.width()) * (view.high - view.low));\n                view.move_delta(delta_chrom);\n            });\n        /*\n        FIXME: Do not do this for now because it's too jittery. Some kind of gravity approach is\n        needed here because moving left/right should be difficult.\n\n        // Also capture mouse wheel for left/right scrolling\n        }).bind( 'mousewheel', function( e, d, dx, dy ) {\n            // Only handle x axis scrolling; y axis scrolling is\n            // handled by the browser when the event bubbles up.\n            if (dx) {\n                var delta_chrom = Math.round( - dx / view.viewport_container.width() * (view.high - view.low) );\n                view.move_delta( delta_chrom );\n            }\n        });\n        */\n\n        // Dragging in the top label track allows selecting a region to zoom in on selected region.\n        this.top_labeltrack\n            .bind(\"dragstart\", function(e, d) {\n                return $(\"<div/>\")\n                    .addClass(\"zoom-area\")\n                    .css(\"height\", view.browser_content_div.height() + view.top_labeltrack.height() + 1)\n                    .appendTo($(this));\n            })\n            .bind(\"drag\", (e, d) => {\n                $(d.proxy).css({\n                    left: Math.min(e.pageX, d.startX) - view.container.offset().left,\n                    width: Math.abs(e.pageX - d.startX)\n                });\n\n                var min = Math.min(e.pageX, d.startX) - view.container.offset().left;\n\n                var max = Math.max(e.pageX, d.startX) - view.container.offset().left;\n\n                var span = view.high - view.low;\n                var width = view.viewport_container.width();\n                view.update_location(\n                    Math.round((min / width) * span) + view.low,\n                    Math.round((max / width) * span) + view.low\n                );\n            })\n            .bind(\"dragend\", (e, d) => {\n                var min = Math.min(e.pageX, d.startX);\n                var max = Math.max(e.pageX, d.startX);\n                var span = view.high - view.low;\n                var width = view.viewport_container.width();\n                var old_low = view.low;\n                view.low = Math.round((min / width) * span) + old_low;\n                view.high = Math.round((max / width) * span) + old_low;\n                $(d.proxy).remove();\n                view.request_redraw();\n            });\n\n        // FIXME: this is still wonky for embedded visualizations.\n        /*\n        // For vertical alignment, track mouse with simple line.\n        var mouse_tracker_div = $('<div/>').addClass('mouse-pos').appendTo(parent_element);\n\n        // Show tracker only when hovering over view.\n        parent_element.hover(\n            function() {\n                mouse_tracker_div.show();\n                parent_element.mousemove(function(e) {\n                    mouse_tracker_div.css({\n                        // -1 makes line appear next to the mouse w/o preventing mouse actions.\n                        left: e.pageX - parent_element.offset().left - 1\n                    });\n                });\n            },\n            function() {\n                parent_element.off('mousemove');\n                mouse_tracker_div.hide();\n            }\n        );\n        */\n\n        this.add_label_track(new LabelTrack(this, { content_div: this.top_labeltrack }));\n\n        $(window).bind(\"resize\", function() {\n            // Stop previous timer.\n            if (this.resize_timer) {\n                window.clearTimeout(this.resize_timer);\n            }\n\n            // When function activated, resize window and redraw.\n            this.resize_timer = window.setTimeout(() => {\n                view.resize_window();\n            }, 500);\n        });\n        $(document).bind(\"redraw\", () => {\n            view.redraw();\n        });\n\n        this.reset();\n        $(window).trigger(\"resize\");\n    },\n\n    get_base_color: function(base) {\n        return this.config.get_value(`${base.toLowerCase()}_color`) || this.config.get_value(\"n_color\");\n    }\n});\n\n// FIXME: need to use this approach to enable inheritance of DrawableCollection functions.\nextend(TracksterView.prototype, DrawableCollection.prototype, {\n    changed: function() {\n        this.has_changes = true;\n    },\n\n    /** Add or remove intro div depending on view state. */\n    update_intro_div: function() {\n        this.intro_div.toggle(this.drawables.length === 0);\n    },\n\n    /**\n     * Triggers navigate events as needed. If there is a delay,\n     * then event is triggered only after navigation has stopped.\n     */\n    trigger_navigate: function(new_chrom, new_low, new_high, delay) {\n        // Stop previous timer.\n        if (this.timer) {\n            window.clearTimeout(this.timer);\n        }\n\n        if (delay) {\n            // To aggregate calls, use timer and only navigate once\n            // location has stabilized.\n            this.timer = window.setTimeout(() => {\n                this.trigger(\"navigate\", `${new_chrom}:${new_low}-${new_high}`);\n            }, 500);\n        } else {\n            this.trigger(\"navigate\", `${new_chrom}:${new_low}-${new_high}`);\n        }\n    },\n\n    update_location: function(low, high) {\n        this.location_span.text(`${util.commatize(low)} - ${util.commatize(high)}`);\n        this.nav_input.val(`${this.chrom}:${util.commatize(low)}-${util.commatize(high)}`);\n\n        // Update location. Only update when there is a valid chrom; when loading vis, there may\n        // not be a valid chrom.\n        var chrom = this.chrom_select.val();\n        if (chrom !== \"\") {\n            this.trigger_navigate(chrom, this.low, this.high, true);\n        }\n    },\n\n    /**\n     * Load chrom data for the view. Returns a jQuery Deferred.\n     */\n    // FIXME: instead of loading chrom data, should load and store genome object.\n    load_chroms: function(url_parms) {\n        url_parms.num = MAX_CHROMS_SELECTABLE;\n\n        var chrom_data = $.Deferred();\n        $.ajax({\n            url: `${Galaxy.root}api/genomes/${this.dbkey}`,\n            data: url_parms,\n            dataType: \"json\",\n            success: result => {\n                // Do nothing if could not load chroms.\n                if (result.chrom_info.length === 0) {\n                    return;\n                }\n\n                // Load chroms.\n                if (result.reference) {\n                    var ref_track = new ReferenceTrack(this);\n                    this.add_label_track(ref_track);\n                    this.reference_track = ref_track;\n                }\n                this.chrom_data = result.chrom_info;\n\n                this.chrom_select.html(\"\");\n                this.chrom_select.append($('<option value=\"\">Select Chrom/Contig</option>'));\n\n                for (var i = 0, len = this.chrom_data.length; i < len; i++) {\n                    var chrom = this.chrom_data[i].chrom;\n                    var chrom_option = $(\"<option>\");\n                    chrom_option.text(chrom);\n                    chrom_option.val(chrom);\n                    this.chrom_select.append(chrom_option);\n                }\n                if (result.prev_chroms) {\n                    this.chrom_select.append($(`<option value=\"previous\">Previous ${MAX_CHROMS_SELECTABLE}</option>`));\n                }\n                if (result.next_chroms) {\n                    this.chrom_select.append($(`<option value=\"next\">Next ${MAX_CHROMS_SELECTABLE}</option>`));\n                }\n                this.chrom_start_index = result.start_index;\n\n                chrom_data.resolve(result.chrom_info);\n            },\n            error: function() {\n                alert(`Could not load chroms for this dbkey: ${this.dbkey}`);\n            }\n        });\n        return chrom_data;\n    },\n\n    change_chrom: function(chrom, low, high) {\n        var view = this;\n        // If chrom data is still loading, wait for it.\n        if (!view.chrom_data) {\n            view.load_chroms_deferred.then(() => {\n                view.change_chrom(chrom, low, high);\n            });\n            return;\n        }\n\n        // Don't do anything if chrom is \"None\" (hackish but some browsers already have this set), or null/blank\n        if (!chrom || chrom === \"None\") {\n            return;\n        }\n\n        //\n        // If user is navigating to previous/next set of chroms, load new chrom set and return.\n        //\n        if (chrom === \"previous\") {\n            view.load_chroms({\n                low: this.chrom_start_index - MAX_CHROMS_SELECTABLE\n            });\n            return;\n        }\n        if (chrom === \"next\") {\n            view.load_chroms({\n                low: this.chrom_start_index + MAX_CHROMS_SELECTABLE\n            });\n            return;\n        }\n\n        //\n        // User is loading a particular chrom. Look first in current set; if not in current set, load new\n        // chrom set.\n        //\n        var found = $.grep(view.chrom_data, (v, i) => v.chrom === chrom)[0];\n        if (found === undefined) {\n            // Try to load chrom and then change to chrom.\n            view.load_chroms({ chrom: chrom }, () => {\n                view.change_chrom(chrom, low, high);\n            });\n            return;\n        } else {\n            // Switching to local chrom.\n            if (chrom !== view.chrom) {\n                view.chrom = chrom;\n                view.chrom_select.val(view.chrom);\n                view.max_high = found.len - 1; // -1 because we're using 0-based indexing.\n                view.reset();\n\n                for (var i = 0, len = view.drawables.length; i < len; i++) {\n                    var drawable = view.drawables[i];\n                    if (drawable.init) {\n                        drawable.init();\n                    }\n                }\n                if (view.reference_track) {\n                    view.reference_track.init();\n                }\n            }\n\n            // Resolve low, high.\n            if (low === undefined && high === undefined) {\n                // Both are undefined, so view is whole chromosome.\n                view.low = 0;\n                view.high = view.max_high;\n            } else {\n                // Low and/or high is defined.\n                view.low = low !== undefined ? Math.max(low, 0) : 0;\n                if (high === undefined) {\n                    // Center visualization around low.\n                    // HACK: max resolution is currently 30 bases.\n                    view.low = Math.max(view.low - 15, 0);\n                    view.high = view.low + 30;\n                } else {\n                    // High is defined.\n                    view.high = Math.min(high, view.max_high);\n                }\n            }\n\n            view.request_redraw();\n        }\n    },\n\n    /**\n     * Change viewing region to that denoted by string. General format of string is:\n     *\n     * <chrom>[ {separator}<start>[-<end>] ]\n     *\n     * where separator can be whitespace or a colon. Examples:\n     *\n     * chr22\n     * chr1:100-200\n     * chr7 89999\n     * chr8 90000 990000\n     */\n    go_to: function(str) {\n        // Remove commas.\n        str = str.replace(/,/g, \"\");\n\n        // Replace colons and hyphens with space for easy parsing.\n        str = str.replace(/:|-/g, \" \");\n\n        // Parse new location.\n        var chrom_pos = str.split(/\\s+/);\n\n        var chrom = chrom_pos[0];\n        var new_low = chrom_pos[1] ? parseInt(chrom_pos[1], 10) : undefined;\n        var new_high = chrom_pos[2] ? parseInt(chrom_pos[2], 10) : undefined;\n\n        this.change_chrom(chrom, new_low, new_high);\n    },\n\n    move_fraction: function(fraction) {\n        var view = this;\n        var span = view.high - view.low;\n        this.move_delta(fraction * span);\n    },\n\n    move_delta: function(delta_chrom) {\n        //\n        // Update low, high.\n        //\n\n        var view = this;\n        var current_chrom_span = view.high - view.low;\n        // Check for left and right boundaries\n        if (view.low - delta_chrom < view.max_low) {\n            view.low = view.max_low;\n            view.high = view.max_low + current_chrom_span;\n        } else if (view.high - delta_chrom > view.max_high) {\n            view.high = view.max_high;\n            view.low = view.max_high - current_chrom_span;\n        } else {\n            view.high -= delta_chrom;\n            view.low -= delta_chrom;\n        }\n\n        //\n        // Redraw view.\n        //\n\n        // Redraw without requesting more data immediately.\n        view.request_redraw({ data_fetch: false });\n\n        // Set up timeout to redraw with more data when moving stops.\n        if (this.redraw_on_move_fn) {\n            window.clearTimeout(this.redraw_on_move_fn);\n        }\n\n        this.redraw_on_move_fn = window.setTimeout(() => {\n            view.request_redraw();\n        }, 200);\n\n        // Navigate.\n        var chrom = view.chrom_select.val();\n        this.trigger_navigate(chrom, view.low, view.high, true);\n    },\n\n    /**\n     * Add a drawable to the view.\n     */\n    add_drawable: function(drawable) {\n        DrawableCollection.prototype.add_drawable.call(this, drawable);\n        drawable.init();\n        this.changed();\n        this.update_intro_div();\n\n        // When drawable config changes, mark view as changed. This\n        // captures most (all?) state change that needs to be saved.\n        var self = this;\n        drawable.config.on(\"change\", () => {\n            self.changed();\n        });\n    },\n\n    add_label_track: function(label_track) {\n        label_track.view = this;\n        label_track.init();\n        this.label_tracks.push(label_track);\n    },\n\n    /**\n     * Remove drawable from the view.\n     */\n    remove_drawable: function(drawable, hide) {\n        DrawableCollection.prototype.remove_drawable.call(this, drawable);\n        if (hide) {\n            var view = this;\n            drawable.container_div.hide(0, function() {\n                $(this).remove();\n                view.update_intro_div();\n            });\n        }\n    },\n\n    reset: function() {\n        this.low = this.max_low;\n        this.high = this.max_high;\n        this.viewport_container.find(\".yaxislabel\").remove();\n    },\n\n    /**\n     * Request that view redraw one or more of view's drawables. If drawable is not specified,\n     * all drawables are redrawn.\n     */\n    request_redraw: function(options, drawable) {\n        var view = this;\n\n        var // Either redrawing a single drawable or all view's drawables.\n        track_list = drawable ? [drawable] : view.drawables;\n\n        // Add/update tracks in track list to redraw list.\n        _.each(track_list, track => {\n            var track_options = _.find(view.tracks_to_be_redrawn, to => to[0] === track);\n\n            if (track_options) {\n                // Track already in list; update options.\n                track_options[1] = options;\n            } else {\n                // Track not in list yet.\n                view.tracks_to_be_redrawn.push([track, options]);\n            }\n        });\n\n        // Set up redraw if it has not been requested since last redraw.\n        if (!this.requested_redraw) {\n            window.requestAnimationFrame(() => {\n                view._redraw();\n            });\n            this.requested_redraw = true;\n        }\n    },\n\n    /**\n     * Redraws view and tracks.\n     * NOTE: this method should never be called directly; request_redraw() should be used so\n     * that requestAnimationFrame can manage redrawing.\n     */\n    _redraw: function() {\n        // TODO: move this code to function that does location setting.\n\n        // Clear because requested redraw is being handled now.\n        this.requested_redraw = false;\n\n        var low = this.low;\n        var high = this.high;\n\n        if (low < this.max_low) {\n            low = this.max_low;\n        }\n        if (high > this.max_high) {\n            high = this.max_high;\n        }\n        var span = this.high - this.low;\n        if (this.high !== 0 && span < this.min_separation) {\n            high = low + this.min_separation;\n        }\n        this.low = Math.floor(low);\n        this.high = Math.ceil(high);\n\n        this.update_location(this.low, this.high);\n\n        // -- Drawing code --\n\n        // Resolution is a pixel density.\n        this.resolution_px_b = this.viewport_container.width() / (this.high - this.low);\n\n        // Overview\n        var left_px = (this.low / (this.max_high - this.max_low)) * this.overview_viewport.width() || 0;\n        var width_px = ((this.high - this.low) / (this.max_high - this.max_low)) * this.overview_viewport.width() || 0;\n        var min_width_px = 13;\n\n        this.overview_box\n            .css({\n                left: left_px,\n                width: Math.max(min_width_px, width_px)\n            })\n            .show();\n        if (width_px < min_width_px) {\n            this.overview_box.css(\"left\", left_px - (min_width_px - width_px) / 2);\n        }\n        if (this.overview_highlight) {\n            this.overview_highlight.css({\n                left: left_px,\n                width: width_px\n            });\n        }\n\n        // Draw data tracks.\n        _.each(this.tracks_to_be_redrawn, track_options => {\n            var track = track_options[0];\n            var options = track_options[1];\n            if (track) {\n                track._draw(options);\n            }\n        });\n        this.tracks_to_be_redrawn = [];\n\n        // Draw label tracks.\n        _.each(this.label_tracks, label_track => {\n            label_track._draw();\n        });\n    },\n\n    zoom_in: function(point, container) {\n        if (this.max_high === 0 || this.high - this.low <= this.min_separation) {\n            return;\n        }\n        var span = this.high - this.low;\n        var cur_center = span / 2 + this.low;\n        var new_half = span / this.zoom_factor / 2;\n        if (point) {\n            cur_center = (point / this.viewport_container.width()) * (this.high - this.low) + this.low;\n        }\n        this.low = Math.round(cur_center - new_half);\n        this.high = Math.round(cur_center + new_half);\n\n        this.changed();\n        this.request_redraw();\n    },\n\n    zoom_out: function() {\n        if (this.max_high === 0) {\n            return;\n        }\n        var span = this.high - this.low;\n        var cur_center = span / 2 + this.low;\n        var new_half = (span * this.zoom_factor) / 2;\n        this.low = Math.round(cur_center - new_half);\n        this.high = Math.round(cur_center + new_half);\n        this.changed();\n        this.request_redraw();\n    },\n\n    /** Resize viewport. Use this method if header/footer content has changed in size. */\n    resize_viewport: function() {\n        this.viewport_container.height(\n            this.container.height() - this.top_container.height() - this.bottom_container.height()\n        );\n    },\n\n    /** Called when window is resized. */\n    resize_window: function() {\n        this.resize_viewport();\n        this.request_redraw();\n    },\n\n    /** Show a Drawable in the overview. */\n    set_overview: function(drawable) {\n        if (this.overview_drawable) {\n            // If drawable to be set as overview is already in overview, do nothing.\n            // Otherwise, remove overview.\n            if (this.overview_drawable.dataset.id === drawable.dataset.id) {\n                return;\n            }\n            this.overview_viewport.find(\".track\").remove();\n        }\n\n        // Set new overview.\n        var overview_drawable = drawable.copy({\n            content_div: this.overview_viewport\n        });\n\n        var view = this;\n        overview_drawable.header_div.hide();\n        overview_drawable.is_overview = true;\n        view.overview_drawable = overview_drawable;\n        this.overview_drawable.postdraw_actions = () => {\n            view.overview_highlight.show().height(view.overview_drawable.content_div.height());\n            view.overview_viewport.height(\n                view.overview_drawable.content_div.height() + view.overview_box.outerHeight()\n            );\n            view.overview_close.show();\n            view.resize_window();\n        };\n        view.overview_drawable.request_draw();\n        this.changed();\n    },\n\n    /** Close and reset overview. */\n    reset_overview: function() {\n        // Update UI.\n        $(\".tooltip\").remove();\n        this.overview_viewport.find(\".track-tile\").remove();\n        this.overview_viewport.height(this.default_overview_height);\n        this.overview_box.height(this.default_overview_height);\n        this.overview_close.hide();\n        this.overview_highlight.hide();\n        this.resize_window();\n        this.overview_drawable = null;\n    }\n});\n\n/**\n * Encapsulation of a tool that users can apply to tracks/datasets.\n */\nvar TracksterTool = tools_mod.Tool.extend({\n    defaults: {\n        track: null\n    },\n\n    initialize: function(options) {\n        tools_mod.Tool.prototype.initialize.call(this, options);\n\n        // Restore tool visibility from state; default to hidden.\n        var hidden = true;\n        if (options.tool_state !== undefined && options.tool_state.hidden !== undefined) {\n            hidden = options.tool_state.hidden;\n        }\n        this.set(\"hidden\", hidden);\n\n        // FIXME: need to restore tool values from options.tool_state\n\n        // HACK: remove some inputs because Trackster does yet not work with them.\n        this.remove_inputs([\"data\", \"hidden_data\", \"conditional\"]);\n    },\n\n    state_dict: function(options) {\n        return _.extend(this.get_inputs_dict(), {\n            hidden: !this.is_visible()\n        });\n    }\n});\n\n/**\n * View renders tool parameter HTML and updates parameter value as it is changed in the HTML.\n */\nvar ToolParameterView = Backbone.View.extend({\n    events: {\n        \"change :input\": \"update_value\"\n    },\n\n    render: function() {\n        var param_div = this.$el.addClass(\"param-row\");\n        var param = this.model;\n\n        // Param label.\n        $(\"<div>\")\n            .addClass(\"param-label\")\n            .text(param.get(\"label\"))\n            .appendTo(param_div);\n        // Param HTML.\n        var html_div = $(\"<div/>\")\n            .addClass(\"param-input\")\n            .html(param.get(\"html\"))\n            .appendTo(param_div);\n        // Set initial value.\n        html_div.find(\":input\").val(param.get(\"value\"));\n\n        // Add to clear floating layout.\n        $(\"<div style='clear: both;'/>\").appendTo(param_div);\n    },\n\n    update_value: function(update_event) {\n        this.model.set_value($(update_event.target).val());\n    }\n});\n\n/**\n * View for TracksterTool.\n */\nvar TracksterToolView = Backbone.View.extend({\n    initialize: function(options) {\n        this.model.on(\"change:hidden\", this.set_visible, this);\n    },\n\n    /**\n     * Render tool UI.\n     */\n    render: function() {\n        var self = this;\n        var tool = this.model;\n        var parent_div = this.$el.addClass(\"dynamic-tool\").hide();\n\n        // Prevent div events from propogating to other elements.\n        parent_div\n            .bind(\"drag\", e => {\n                e.stopPropagation();\n            })\n            .click(e => {\n                e.stopPropagation();\n            })\n            .bind(\"dblclick\", e => {\n                e.stopPropagation();\n            })\n            .keydown(e => {\n                e.stopPropagation();\n            });\n\n        // Add name, inputs.\n        $(\"<div class='tool-name'>\")\n            .appendTo(parent_div)\n            .text(tool.get(\"name\"));\n        tool.get(\"inputs\").each(param => {\n            // Render parameter.\n            var param_view = new ToolParameterView({ model: param });\n            param_view.render();\n            parent_div.append(param_view.$el);\n        });\n\n        // Highlight value for inputs for easy replacement.\n        parent_div.find(\"input\").click(function() {\n            $(this).select();\n        });\n\n        // Add buttons for running on dataset, region.\n        var run_tool_row = $(\"<div>\")\n            .addClass(\"param-row\")\n            .appendTo(parent_div);\n        var run_on_dataset_button = $(\"<input type='submit'>\")\n            .attr(\"value\", \"Run on complete dataset\")\n            .appendTo(run_tool_row);\n        var run_on_region_button = $(\"<input type='submit'>\")\n            .attr(\"value\", \"Run on visible region\")\n            .appendTo(run_tool_row);\n        run_on_region_button.click(() => {\n            // Run tool to create new track.\n            self.run_on_region();\n        });\n        run_on_dataset_button.click(() => {\n            self.run_on_dataset();\n        });\n\n        if (tool.is_visible()) {\n            this.$el.show();\n        }\n    },\n\n    /**\n     * Show or hide tool depending on tool visibility state.\n     */\n    set_visible: function() {\n        this.$el.toggle(this.model.is_visible());\n    },\n\n    /**\n     * Update tool parameters.\n     */\n    update_params: function() {\n        for (var i = 0; i < this.params.length; i++) {\n            this.params[i].update_value();\n        }\n    },\n\n    /**\n     * Run tool on dataset. Output is placed in dataset's history and no changes to viz are made.\n     */\n    run_on_dataset: function() {\n        var tool = this.model;\n        this.run(\n            // URL params.\n            {\n                target_dataset_id: this.model.get(\"track\").dataset.id,\n                action: \"rerun\",\n                tool_id: tool.id\n            },\n            null,\n            track_data => {\n                Galaxy.modal.show({\n                    title: `${tool.get(\"name\")} is Running`,\n                    body: `${tool.get(\n                        \"name\"\n                    )} is running on the complete dataset. Tool outputs are in dataset's history.`,\n                    buttons: {\n                        Close: function() {\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n            }\n        );\n    },\n\n    /**\n     * Run dataset on visible region. This creates a new track and sets the track's contents\n     * to the tool's output.\n     */\n    run_on_region: function() {\n        //\n        // Create track for tool's output immediately to provide user feedback.\n        //\n        var track = this.model.get(\"track\");\n\n        var tool = this.model;\n\n        var region = new visualization.GenomeRegion({\n            chrom: track.view.chrom,\n            start: track.view.low,\n            end: track.view.high\n        });\n\n        var url_params = {\n            target_dataset_id: track.dataset.id,\n            action: \"rerun\",\n            tool_id: tool.id,\n            regions: [region.toJSON()]\n        };\n\n        // Set name of track to include tool name, parameters, and region used.\n        var track_name = tool.get(\"name\") + track.tool_region_and_parameters_str(region);\n\n        var container;\n\n        // If track not in a group, create a group for it and add new track to group. If track\n        // already in group, add track to group.\n        if (track.container === track.view) {\n            // Create new group.\n            var group = new DrawableGroup(track.view, track.view, {\n                name: track.config.get_value(\"name\")\n            });\n\n            // Replace track with group.\n            var index = track.container.replace_drawable(track, group, false);\n\n            // Update HTML.\n            // FIXME: this is ugly way to replace a track with a group -- make this easier via\n            // a Drawable or DrawableCollection function.\n            group.container_div.insertBefore(track.view.content_div.children()[index]);\n            group.add_drawable(track);\n            track.container_div.appendTo(group.content_div);\n            container = group;\n        } else {\n            // Use current group.\n            container = track.container;\n        }\n\n        // Create and init new track.\n        var new_track = new track.constructor(track.view, container, {\n            name: track_name,\n            hda_ldda: \"hda\"\n        });\n        new_track.init_for_tool_data();\n        new_track.change_mode(track.mode);\n        new_track.set_filters_manager(track.filters_manager.copy(new_track));\n        new_track.update_icons();\n        container.add_drawable(new_track);\n        new_track.tiles_div.text(\"Starting job.\");\n\n        // Run tool.\n        this.run(url_params, new_track, track_data => {\n            new_track.set_dataset(new data.Dataset(track_data));\n            new_track.tiles_div.text(\"Running job.\");\n            new_track.init();\n        });\n    },\n\n    /**\n     * Run tool using a set of URL params and a success callback.\n     */\n    run: function(url_params, new_track, success_callback) {\n        // Run tool.\n        url_params.inputs = this.model.get_inputs_dict();\n        var ss_deferred = new util.ServerStateDeferred({\n            ajax_settings: {\n                url: `${Galaxy.root}api/tools`,\n                data: JSON.stringify(url_params),\n                dataType: \"json\",\n                contentType: \"application/json\",\n                type: \"POST\"\n            },\n            interval: 2000,\n            success_fn: function(response) {\n                return response !== \"pending\";\n            }\n        });\n\n        // Start with this status message.\n        //new_track.container_div.addClass(\"pending\");\n        //new_track.content_div.html(DATA_PENDING);\n\n        $.when(ss_deferred.go()).then(response => {\n            if (response === \"no converter\") {\n                // No converter available for input datasets, so cannot run tool.\n                new_track.container_div.addClass(\"error\");\n                new_track.content_div.text(DATA_NOCONVERTER);\n            } else if (response.error) {\n                // General error.\n                new_track.container_div.addClass(\"error\");\n                new_track.content_div.text(DATA_CANNOT_RUN_TOOL + response.message);\n            } else {\n                // Job submitted and running.\n                success_callback(response);\n            }\n        });\n    }\n});\n\n/**\n * Generates scale values based on filter and feature's value for filter.\n */\nvar FilterScaler = function(filter, default_val) {\n    painters.Scaler.call(this, default_val);\n    this.filter = filter;\n};\n\nFilterScaler.prototype.gen_val = function(feature_data) {\n    // If filter is not initalized yet, return default val.\n    if (\n        this.filter.high === Number.MAX_VALUE ||\n        this.filter.low === -Number.MAX_VALUE ||\n        this.filter.low === this.filter.high\n    ) {\n        return this.default_val;\n    }\n\n    // Scaling value is ratio of (filter's value compared to low) to (complete filter range).\n    return (parseFloat(feature_data[this.filter.index]) - this.filter.low) / (this.filter.high - this.filter.low);\n};\n\n/**\n * Tiles drawn by tracks.\n */\nvar Tile = function(track, region, w_scale, canvas, data) {\n    this.track = track;\n    this.region = region;\n    this.low = region.get(\"start\");\n    this.high = region.get(\"end\");\n    this.w_scale = w_scale;\n    this.canvas = canvas;\n    // Wrap element in div for background and to provide container for tile-specific elements.\n    this.html_elt = $(\"<div class='track-tile'/>\").append(canvas);\n    this.data = data;\n    this.stale = false;\n};\n\n/**\n * Perform pre-display actions.\n */\nTile.prototype.predisplay_actions = () => {};\n\nvar LineTrackTile = function(track, region, w_scale, canvas, data) {\n    Tile.call(this, track, region, w_scale, canvas, data);\n};\nLineTrackTile.prototype.predisplay_actions = () => {};\n\nvar FeatureTrackTile = function(\n    track,\n    region,\n    w_scale,\n    canvas,\n    data,\n    mode,\n    message,\n    all_slotted,\n    feature_mapper,\n    incomplete_features,\n    seq_data\n) {\n    // Attribute init.\n    Tile.call(this, track, region, w_scale, canvas, data);\n    this.mode = mode;\n    this.all_slotted = all_slotted;\n    this.feature_mapper = feature_mapper;\n    this.has_icons = false;\n    this.incomplete_features = incomplete_features;\n    // Features drawn based on data from other tiles.\n    this.other_tiles_features_drawn = {};\n    this.seq_data = seq_data;\n\n    // Add message + action icons to tile's html.\n    /*\n    This does not work right now because a random set of reads is returned by the server.\n    When the server can respond with more data systematically, renable these icons.\n    if (message) {\n        this.has_icons = true;\n\n        var\n            tile = this;\n            canvas = this.html_elt.children()[0],\n            message_div = $(\"<div/>\").addClass(\"tile-message\")\n                            // -1 to account for border.\n                            .css({'height': ERROR_PADDING, 'width': canvas.width}).prependTo(this.html_elt);\n\n        // Handle message; only message currently is that only the first N elements are displayed.\n        var tile_region = new visualization.GenomeRegion({\n                chrom: track.view.chrom,\n                start: this.low,\n                end: this.high\n            }),\n            num_features = data.length,\n            more_down_icon = $(\"<a/>\").addClass(\"icon more-down\")\n                                .attr(\"title\", \"For speed, only the first \" + num_features + \" features in this region were obtained from server. Click to get more data including depth\")\n                                .tooltip().appendTo(message_div),\n            more_across_icon = $(\"<a/>\").addClass(\"icon more-across\")\n                                .attr(\"title\", \"For speed, only the first \" + num_features + \" features in this region were obtained from server. Click to get more data excluding depth\")\n                                .tooltip().appendTo(message_div);\n\n        // Set up actions for icons.\n        more_down_icon.click(function() {\n            // Mark tile as stale, request more data, and redraw track.\n            tile.stale = true;\n            track.data_manager.get_more_data(tile_region, track.mode, 1 / tile.w_scale, {}, track.data_manager.DEEP_DATA_REQ);\n            $(\".tooltip\").hide();\n            track.request_draw();\n        }).dblclick(function(e) {\n            // Do not propogate as this would normally zoom in.\n            e.stopPropagation();\n        });\n\n        more_across_icon.click(function() {\n            // Mark tile as stale, request more data, and redraw track.\n            tile.stale = true;\n            track.data_manager.get_more_data(tile_region, track.mode, 1 / tile.w_scale, {}, track.data_manager.BROAD_DATA_REQ);\n            $(\".tooltip\").hide();\n            track.request_draw();\n        }).dblclick(function(e) {\n            // Do not propogate as this would normally zoom in.\n            e.stopPropagation();\n        });\n    }\n    */\n};\nextend(FeatureTrackTile.prototype, Tile.prototype);\n\n/**\n * Sets up support for popups.\n */\nFeatureTrackTile.prototype.predisplay_actions = () => {\n    /*\n    FIXME: use a canvas library to handle popups.\n    //\n    // Add support for popups.\n    //\n    var tile = this,\n        popups = {};\n\n    // Only show popups in Pack mode.\n    if (tile.mode !== \"Pack\") { return; }\n\n    $(this.html_elt).hover(\n    function() {\n        this.hovered = true;\n        $(this).mousemove();\n    },\n    function() {\n        this.hovered = false;\n        // Clear popup if it is still hanging around (this is probably not needed)\n        $(this).parents(\".track-content\").children(\".overlay\").children(\".feature-popup\").remove();\n    } ).mousemove(function (e) {\n        // Use the hover plugin to get a delay before showing popup\n        if ( !this.hovered ) { return; }\n        // Get feature data for position.\n        var\n            this_offset = $(this).offset(),\n            offsetX = e.pageX - this_offset.left,\n            offsetY = e.pageY - this_offset.top,\n            feature_data = tile.feature_mapper.get_feature_data(offsetX, offsetY),\n            feature_uid = (feature_data ? feature_data[0] : null);\n        // Hide visible popup if not over a feature or over a different feature.\n        $(this).parents(\".track-content\").children(\".overlay\").children(\".feature-popup\").each(function() {\n            if ( !feature_uid ||\n                 $(this).attr(\"id\") !== feature_uid.toString() ) {\n                $(this).remove();\n            }\n        });\n\n        if (feature_data) {\n            // Get or create popup.\n            var popup = popups[feature_uid];\n            if (!popup) {\n                // Create feature's popup element.\n                var feature_dict = {\n                        name: feature_data[3],\n                        start: feature_data[1],\n                        end: feature_data[2],\n                        strand: feature_data[4]\n                    },\n                    filters = tile.track.filters_manager.filters,\n                    filter;\n\n                // Add filter values to feature dict.\n                for (var i = 0; i < filters.length; i++) {\n                    filter = filters[i];\n                    feature_dict[filter.name] = feature_data[filter.index];\n                }\n\n                // Build popup.\n                popup = $(\"<div/>\").attr(\"id\", feature_uid).addClass(\"feature-popup\");\n                var table = $(\"<table/>\"),\n                    key, value, row;\n                for (key in feature_dict) {\n                    value = feature_dict[key];\n                    row = $(\"<tr/>\").appendTo(table);\n                    $(\"<th/>\").appendTo(row).text(key);\n                    $(\"<td/>\").attr(\"align\", \"left\").appendTo(row)\n                              .text(typeof(value) === 'number' ? round(value, 2) : value);\n                }\n                popup.append( $(\"<div class='feature-popup-inner'>\").append( table ) );\n                popups[feature_uid] = popup;\n            }\n\n            // Attach popup to track's overlay.\n            popup.appendTo( $(this).parents(\".track-content\").children(\".overlay\") );\n\n            // Offsets are within canvas, but popup must be positioned relative to parent element.\n            // parseInt strips \"px\" from left, top measurements. +7 so that mouse pointer does not\n            // overlap popup.\n            var\n                popupX = offsetX + parseInt( tile.html_elt.css(\"left\"), 10 ) - popup.width() / 2,\n                popupY = offsetY + parseInt( tile.html_elt.css(\"top\"), 10 ) + 7;\n            popup.css(\"left\", popupX + \"px\").css(\"top\", popupY + \"px\");\n        }\n        else if (!e.isPropagationStopped()) {\n            // Propogate event to other tiles because overlapping tiles prevent mousemove from being\n            // called on tiles under this tile.\n            e.stopPropagation();\n            $(this).siblings().each(function() {\n                $(this).trigger(e);\n            });\n        }\n    })\n    .mouseleave(function() {\n        $(this).parents(\".track-content\").children(\".overlay\").children(\".feature-popup\").remove();\n    });\n    */\n};\n\n/**\n * Tracks are objects can be added to the View.\n *\n * Track object hierarchy:\n * Track\n * -> LabelTrack\n * -> TiledTrack\n * ----> LineTrack\n * ----> ReferenceTrack\n * ----> FeatureTrack\n * -------> ReadTrack\n * ----> VariantTrack\n */\nvar Track = function(view, container, obj_dict) {\n    // For now, track's container is always view.\n    extend(obj_dict, {\n        drag_handle_class: \"draghandle\"\n    });\n    Drawable.call(this, view, container, obj_dict);\n\n    //\n    // Attribute init.\n    //\n\n    // Set or create dataset.\n    this.dataset = null;\n    if (obj_dict.dataset) {\n        // Dataset can be a Backbone model or a dict that can be used to create a model.\n        this.dataset =\n            obj_dict.dataset instanceof Backbone.Model ? obj_dict.dataset : new data.Dataset(obj_dict.dataset);\n    }\n    this.dataset_check_type = \"converted_datasets_state\";\n    this.data_url_extra_params = {};\n    this.data_query_wait = \"data_query_wait\" in obj_dict ? obj_dict.data_query_wait : DEFAULT_DATA_QUERY_WAIT;\n    // A little ugly creating data manager right now due to transition to Backbone-based objects.\n    this.data_manager =\n        \"data_manager\" in obj_dict\n            ? obj_dict.data_manager\n            : new visualization.GenomeDataManager({\n                  dataset: this.dataset,\n                  // HACK: simulate 'genome' attributes from view for now.\n                  // View should eventually use Genome object.\n                  genome: new visualization.Genome({\n                      key: view.dbkey,\n                      chroms_info: {\n                          chrom_info: view.chrom_data\n                      }\n                  }),\n                  data_mode_compatible: this.data_and_mode_compatible,\n                  can_subset: this.can_subset\n              });\n\n    // Height attributes: min height, max height, and visible height.\n    this.min_height_px = 16;\n    this.max_height_px = 800;\n    this.visible_height_px = this.config.get_value(\"height\");\n\n    //\n    // Create content div, which is where track is displayed, and add to container if available.\n    //\n    this.content_div = $(\"<div class='track-content'>\").appendTo(this.container_div);\n    if (this.container) {\n        this.container.content_div.append(this.container_div);\n        if (!(\"resize\" in obj_dict) || obj_dict.resize) {\n            this.add_resize_handle();\n        }\n    }\n};\n\nextend(Track.prototype, Drawable.prototype, {\n    action_icons_def: [\n        // Change track mode.\n        {\n            name: \"mode_icon\",\n            title: _l(\"Set display mode\"),\n            css_class: \"chevron-expand\",\n            on_click_fn: function() {}\n        },\n        // Hide/show content.\n        Drawable.prototype.action_icons_def[0],\n        // Set track as overview.\n        {\n            name: \"overview_icon\",\n            title: _l(\"Set as overview\"),\n            css_class: \"application-dock-270\",\n            on_click_fn: function(track) {\n                track.view.set_overview(track);\n            }\n        },\n        // Edit config.\n        Drawable.prototype.action_icons_def[1],\n        // Toggle track filters.\n        {\n            name: \"filters_icon\",\n            title: _l(\"Filters\"),\n            css_class: \"ui-slider-050\",\n            on_click_fn: function(drawable) {\n                // TODO: update Tooltip text.\n                if (drawable.filters_manager.visible()) {\n                    drawable.filters_manager.clear_filters();\n                } else {\n                    drawable.filters_manager.init_filters();\n                }\n                drawable.filters_manager.toggle();\n            }\n        },\n        // Toggle track tool.\n        {\n            name: \"tools_icon\",\n            title: _l(\"Tool\"),\n            css_class: \"hammer\",\n            on_click_fn: function(track) {\n                // TODO: update Tooltip text.\n\n                track.tool.toggle();\n\n                // Update track name.\n                if (track.tool.is_visible()) {\n                    track.set_name(track.config.get_value(\"name\") + track.tool_region_and_parameters_str());\n                } else {\n                    track.revert_name();\n                }\n                // HACK: name change modifies icon placement, which leaves tooltip incorrectly placed.\n                $(\".tooltip\").remove();\n            }\n        },\n        // Go to parameter exploration visualization.\n        {\n            name: \"param_space_viz_icon\",\n            title: _l(\"Tool parameter space visualization\"),\n            css_class: \"arrow-split\",\n            on_click_fn: track => {\n                var html = `\n                    <strong>Tool</strong>:${track.tool.get(\"name\")}<br/>\n                    <strong>Dataset</strong>:${track.config.get_value(\"name\")}<br/>\n                    <strong>Region(s)</strong>:\n                        <select name=\"regions\">\n                            <option value=\"cur\">current viewing area</option>\n                            <option value=\"bookmarks\">bookmarks</option>\n                            <option value=\"both\">current viewing area and bookmarks</option>\n                        </select>\n                    `;\n\n                var cancel_fn = () => {\n                    Galaxy.modal.hide();\n                    $(window).unbind(\"keypress.check_enter_esc\");\n                };\n\n                var ok_fn = () => {\n                    var regions_to_use = $('select[name=\"regions\"] option:selected').val();\n                    var regions;\n                    var view_region = new visualization.GenomeRegion({\n                        chrom: this.view.chrom,\n                        start: this.view.low,\n                        end: this.view.high\n                    });\n                    var bookmarked_regions = _.map(\n                        $(\".bookmark\"),\n                        elt =>\n                            new visualization.GenomeRegion({\n                                from_str: $(elt)\n                                    .children(\".position\")\n                                    .text()\n                            })\n                    );\n\n                    // Get regions for visualization.\n                    if (regions_to_use === \"cur\") {\n                        // Use only current region.\n                        regions = [view_region];\n                    } else if (regions_to_use === \"bookmarks\") {\n                        // Use only bookmarks.\n                        regions = bookmarked_regions;\n                    } else {\n                        // Use both current region and bookmarks.\n                        regions = [view_region].concat(bookmarked_regions);\n                    }\n\n                    Galaxy.modal.hide();\n\n                    // Go to visualization.\n                    window.top.location.href = `${Galaxy.root}visualization/sweepster?${$.param({\n                        dataset_id: track.dataset.id,\n                        hda_ldda: track.dataset.get(\"hda_ldda\"),\n                        regions: JSON.stringify(new Backbone.Collection(regions).toJSON())\n                    })}`;\n                };\n\n                /*\n                 * TODO: Re-enable this when functional.\n                var check_enter_esc = e => {\n                    if ((e.keyCode || e.which) === 27) {\n                        // Escape key\n                        cancel_fn();\n                    } else if ((e.keyCode || e.which) === 13) {\n                        // Enter key\n                        ok_fn();\n                    }\n                };\n                */\n\n                // show dialog\n                Galaxy.modal.show({\n                    title: \"Visualize tool parameter space and output from different parameter settings?\",\n                    body: html,\n                    buttons: { No: cancel_fn, Yes: ok_fn }\n                });\n            }\n        },\n        // Remove track.\n        Drawable.prototype.action_icons_def[2]\n    ],\n\n    can_draw: function() {\n        return this.dataset && Drawable.prototype.can_draw.call(this);\n    },\n\n    build_container_div: function() {\n        return $(\"<div/>\")\n            .addClass(\"track\")\n            .attr(\"id\", `track_${this.id}`);\n    },\n\n    /**\n     * Set track's dataset.\n     */\n    set_dataset: function(dataset) {\n        this.dataset = dataset;\n        this.data_manager.set(\"dataset\", dataset);\n    },\n\n    /**\n     * Action to take during resize.\n     */\n    on_resize: function() {\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Add resizing handle to drawable's container_div.\n     */\n    add_resize_handle: function() {\n        var track = this;\n        var in_handle = false;\n        var in_drag = false;\n        var drag_control = $(\"<div class='track-resize'>\");\n        // Control shows on hover over track, stays while dragging\n        $(track.container_div).hover(\n            () => {\n                if (track.config.get_value(\"content_visible\")) {\n                    in_handle = true;\n                    drag_control.show();\n                }\n            },\n            () => {\n                in_handle = false;\n                if (!in_drag) {\n                    drag_control.hide();\n                }\n            }\n        );\n        // Update height and force redraw of current view while dragging,\n        // clear cache to force redraw of other tiles.\n        drag_control\n            .hide()\n            .bind(\"dragstart\", (e, d) => {\n                in_drag = true;\n                d.original_height = $(track.content_div).height();\n            })\n            .bind(\"drag\", (e, d) => {\n                var new_height = Math.min(\n                    Math.max(d.original_height + d.deltaY, track.min_height_px),\n                    track.max_height_px\n                );\n                $(track.tiles_div).css(\"height\", new_height);\n                track.visible_height_px = track.max_height_px === new_height ? 0 : new_height;\n                track.on_resize();\n            })\n            .bind(\"dragend\", (e, d) => {\n                track.tile_cache.clear();\n                in_drag = false;\n                if (!in_handle) {\n                    drag_control.hide();\n                }\n                track.config.set_value(\"height\", track.visible_height_px);\n                track.changed();\n            })\n            .appendTo(track.container_div);\n    },\n\n    /**\n     * Hide any elements that are part of the tracks contents area. Should\n     * remove as approprite, the track will be redrawn by show_contents.\n     */\n    hide_contents: function() {\n        // Hide tiles.\n        this.tiles_div.hide();\n        // Hide any y axis labels (common to several track types)\n        this.container_div.find(\".yaxislabel, .track-resize\").hide();\n    },\n\n    show_contents: function() {\n        // Show the contents div and labels (if present)\n        this.tiles_div.show();\n        this.container_div.find(\".yaxislabel, .track-resize\").show();\n        // Request a redraw of the content\n        this.request_draw();\n    },\n\n    /**\n     * Returns track type.\n     */\n    get_type: function() {\n        // Order is important: start with most-specific classes and go up the track hierarchy.\n        if (this instanceof LabelTrack) {\n            return \"LabelTrack\";\n        } else if (this instanceof ReferenceTrack) {\n            return \"ReferenceTrack\";\n        } else if (this instanceof LineTrack) {\n            return \"LineTrack\";\n        } else if (this instanceof ReadTrack) {\n            return \"ReadTrack\";\n        } else if (this instanceof VariantTrack) {\n            return \"VariantTrack\";\n        } else if (this instanceof CompositeTrack) {\n            return \"CompositeTrack\";\n        } else if (this instanceof FeatureTrack) {\n            return \"FeatureTrack\";\n        }\n        return \"\";\n    },\n\n    /**\n     * Remove visualization content and display message.\n     */\n    show_message: function(msg_html) {\n        this.tiles_div.remove();\n        return $(\"<span/>\")\n            .addClass(\"message\")\n            .html(msg_html)\n            .appendTo(this.content_div);\n    },\n\n    /**\n     * Initialize and draw the track.\n     */\n    init: function(retry) {\n        // FIXME: track should have a 'state' attribute that is checked on load; this state attribute should be\n        // used in this function to determine what action(s) to take.\n\n        var track = this;\n        track.enabled = false;\n        track.tile_cache.clear();\n        track.data_manager.clear();\n        /*\n        if (!track.content_div.text()) {\n            track.content_div.text(DATA_LOADING);\n        }\n        */\n        // Remove old track content (e.g. tiles, messages).\n        track.content_div.children().remove();\n        track.container_div.removeClass(\"nodata error pending\");\n\n        track.tiles_div = $(\"<div/>\")\n            .addClass(\"tiles\")\n            .appendTo(track.content_div);\n\n        //\n        // Tracks with no dataset id are handled differently.\n        // FIXME: is this really necessary?\n        //\n        if (!track.dataset.id) {\n            return;\n        }\n\n        // Get dataset state; if state is fine, enable and draw track. Otherwise, show message\n        // about track status.\n        var init_deferred = $.Deferred();\n\n        var params = {\n            hda_ldda: track.dataset.get(\"hda_ldda\"),\n            data_type: this.dataset_check_type,\n            chrom: track.view.chrom,\n            retry: retry\n        };\n\n        $.getJSON(this.dataset.url(), params, result => {\n            if (!result || result === \"error\" || result.kind === \"error\") {\n                // Dataset is in error state.\n                track.container_div.addClass(\"error\");\n                var msg_elt = track.show_message(DATA_ERROR);\n                if (result.message) {\n                    // Add links to (a) show error and (b) try again.\n                    msg_elt.append(\n                        $(\"<a href='javascript:void(0);'></a>\")\n                            .text(\"View error\")\n                            .click(() => {\n                                Galaxy.modal.show({\n                                    title: _l(\"Trackster Error\"),\n                                    body: `<pre>${result.message}</pre>`,\n                                    buttons: {\n                                        Close: function() {\n                                            Galaxy.modal.hide();\n                                        }\n                                    }\n                                });\n                            })\n                    );\n                    msg_elt.append($(\"<span/>\").text(\" \"));\n                    msg_elt.append(\n                        $(\"<a href='javascript:void(0);'></a>\")\n                            .text(\"Try again\")\n                            .click(() => {\n                                track.init(true);\n                            })\n                    );\n                }\n            } else if (result === \"no converter\") {\n                track.container_div.addClass(\"error\");\n                track.show_message(DATA_NOCONVERTER);\n            } else if (\n                result === \"no data\" ||\n                (result.data !== undefined && (result.data === null || result.data.length === 0))\n            ) {\n                track.container_div.addClass(\"nodata\");\n                track.show_message(DATA_NONE);\n            } else if (result === \"pending\") {\n                track.container_div.addClass(\"pending\");\n                track.show_message(DATA_PENDING);\n                //$(\"<img/>\").attr(\"src\", image_path + \"/yui/rel_interstitial_loading.gif\").appendTo(track.tiles_div);\n                window.setTimeout(() => {\n                    track.init();\n                }, track.data_query_wait);\n            } else if (result === \"data\" || result.status === \"data\") {\n                if (result.valid_chroms) {\n                    track.valid_chroms = result.valid_chroms;\n                    track.update_icons();\n                }\n                track.tiles_div.text(DATA_OK);\n                if (track.view.chrom) {\n                    track.tiles_div.text(\"\");\n                    track.tiles_div.css(\"height\", `${track.visible_height_px}px`);\n                    track.enabled = true;\n                    // predraw_init may be asynchronous, wait for it and then draw\n                    $.when.apply($, track.predraw_init()).done(() => {\n                        init_deferred.resolve();\n                        track.container_div.removeClass(\"nodata error pending\");\n                        track.request_draw();\n                    });\n                } else {\n                    init_deferred.resolve();\n                }\n            }\n        });\n\n        this.update_icons();\n        return init_deferred;\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function() {\n        var track = this;\n        return $.getJSON(\n            track.dataset.url(),\n            {\n                data_type: \"data\",\n                stats: true,\n                chrom: track.view.chrom,\n                low: 0,\n                high: track.view.max_high,\n                hda_ldda: track.dataset.get(\"hda_ldda\")\n            },\n            result => {\n                var data = result.data;\n\n                // Tracks may not have stat data either because there is no data or data is not yet ready.\n                if (data && data.min !== undefined && data.max !== undefined) {\n                    // Compute default minimum and maximum values\n                    var min_value = data.min;\n\n                    var max_value = data.max;\n                    // If mean and sd are present, use them to compute a ~95% window\n                    // but only if it would shrink the range on one side\n                    min_value = Math.floor(Math.min(0, Math.max(min_value, data.mean - 2 * data.sd)));\n                    max_value = Math.ceil(Math.max(0, Math.min(max_value, data.mean + 2 * data.sd)));\n                    // Update config, prefs\n                    track.config.set_default_value(\"min_value\", min_value);\n                    track.config.set_default_value(\"max_value\", max_value);\n                    track.config.set_value(\"min_value\", min_value);\n                    track.config.set_value(\"max_value\", max_value);\n                }\n            }\n        );\n    },\n\n    /**\n     * Returns all drawables in this drawable.\n     */\n    get_drawables: function() {\n        return this;\n    }\n});\n\nvar TiledTrack = function(view, container, obj_dict) {\n    Track.call(this, view, container, obj_dict);\n\n    var track = this;\n\n    // Make track moveable.\n    moveable(track.container_div, track.drag_handle_class, \".group\", track);\n\n    // Attribute init.\n    this.filters_manager = new filters_mod.FiltersManager(this, \"filters\" in obj_dict ? obj_dict.filters : null);\n    // HACK: set filters manager for data manager.\n    // FIXME: prolly need function to set filters and update data_manager reference.\n    this.data_manager.set(\"filters_manager\", this.filters_manager);\n    this.filters_available = false;\n    this.tool = obj_dict.tool\n        ? new TracksterTool(\n              _.extend(obj_dict.tool, {\n                  track: this,\n                  tool_state: obj_dict.tool_state\n              })\n          )\n        : null;\n    this.tile_cache = new visualization.Cache(TILE_CACHE_SIZE);\n    this.left_offset = 0;\n\n    if (this.header_div) {\n        //\n        // Setup filters.\n        //\n        this.set_filters_manager(this.filters_manager);\n\n        //\n        // Create dynamic tool view.\n        //\n        if (this.tool) {\n            var tool_view = new TracksterToolView({ model: this.tool });\n            tool_view.render();\n            this.dynamic_tool_div = tool_view.$el;\n            this.header_div.after(this.dynamic_tool_div);\n        }\n    }\n\n    // Add tiles_div, overlay_div to content_div.\n    this.tiles_div = $(\"<div/>\")\n        .addClass(\"tiles\")\n        .appendTo(this.content_div);\n    if (!this.config.get_value(\"content_visible\")) {\n        this.tiles_div.hide();\n    }\n    this.overlay_div = $(\"<div/>\")\n        .addClass(\"overlay\")\n        .appendTo(this.content_div);\n\n    if (obj_dict.mode) {\n        this.change_mode(obj_dict.mode);\n    }\n};\nextend(TiledTrack.prototype, Drawable.prototype, Track.prototype, {\n    action_icons_def: Track.prototype.action_icons_def.concat([\n        // Show more rows when all features are not slotted.\n        {\n            name: \"show_more_rows_icon\",\n            title: \"To minimize track height, not all feature rows are displayed. Click to display more rows.\",\n            css_class: \"exclamation\",\n            on_click_fn: function(track) {\n                $(\".tooltip\").remove();\n                track.slotters[track.view.resolution_px_b].max_rows *= 2;\n                track.request_draw({ clear_tile_cache: true });\n            },\n            hide: true\n        }\n    ]),\n\n    /**\n     * Returns a copy of the track. The copy uses the same data manager so that the tracks can share data.\n     */\n    copy: function(container) {\n        // Create copy.\n        var obj_dict = this.to_dict();\n        extend(obj_dict, {\n            data_manager: this.data_manager\n        });\n        var new_track = new this.constructor(this.view, container, obj_dict);\n        // Misc. init and return.\n        new_track.change_mode(this.mode);\n        new_track.enabled = this.enabled;\n        return new_track;\n    },\n\n    /**\n     * Set filters manager + HTML elements.\n     */\n    set_filters_manager: function(filters_manager) {\n        this.filters_manager = filters_manager;\n        this.header_div.after(this.filters_manager.parent_div);\n    },\n\n    /**\n     * Returns representation of object in a dictionary for easy saving.\n     * Use from_dict to recreate object.\n     */\n    to_dict: function() {\n        return {\n            track_type: this.get_type(),\n            dataset: {\n                id: this.dataset.id,\n                hda_ldda: this.dataset.get(\"hda_ldda\")\n            },\n            prefs: this.config.to_key_value_dict(),\n            mode: this.mode,\n            filters: this.filters_manager.to_dict(),\n            tool_state: this.tool ? this.tool.state_dict() : {}\n        };\n    },\n\n    /**\n     * Set track bounds for current chromosome.\n     */\n    set_min_max: function() {\n        var track = this;\n\n        return $.getJSON(\n            track.dataset.url(),\n            {\n                data_type: \"data\",\n                stats: true,\n                chrom: track.view.chrom,\n                low: 0,\n                high: track.view.max_high,\n                hda_ldda: track.dataset.get(\"hda_ldda\")\n            },\n            result => {\n                var data = result.data;\n                if (\n                    isNaN(parseFloat(track.config.get_value(\"min_value\"))) ||\n                    isNaN(parseFloat(track.config.get_value(\"max_value\")))\n                ) {\n                    // Compute default minimum and maximum values\n                    var min_value = data.min;\n\n                    var max_value = data.max;\n                    // If mean and sd are present, use them to compute a ~95% window\n                    // but only if it would shrink the range on one side\n                    min_value = Math.floor(Math.min(0, Math.max(min_value, data.mean - 2 * data.sd)));\n                    max_value = Math.ceil(Math.max(0, Math.min(max_value, data.mean + 2 * data.sd)));\n                    // Update the prefs\n                    track.config.set_value(\"min_value\", min_value);\n                    track.config.set_value(\"max_value\", max_value);\n                }\n            }\n        );\n    },\n\n    /**\n     * Change track's mode.\n     */\n    change_mode: function(new_mode) {\n        var track = this;\n        // TODO: is it necessary to store the mode in two places (.mode and track_config)?\n        track.mode = new_mode;\n        track.config.set_value(\"mode\", new_mode);\n        // FIXME: find a better way to get Auto data w/o clearing cache; using mode in the\n        // data manager would work if Auto data were checked for compatibility when a specific\n        // mode is chosen.\n        if (new_mode === \"Auto\") {\n            this.data_manager.clear();\n        }\n        track.request_draw({ clear_tile_cache: true });\n        this.action_icons.mode_icon.attr(\"title\", `Set display mode (now: ${track.mode})`);\n        return track;\n    },\n\n    /**\n     * Update track's buttons.\n     */\n    update_icons: function() {\n        var track = this;\n\n        //\n        // Show/hide filter icon.\n        //\n        track.action_icons.filters_icon.toggle(track.filters_available);\n\n        //\n        // Show/hide tool icons.\n        //\n        track.action_icons.tools_icon.toggle(track.tool !== null);\n        track.action_icons.param_space_viz_icon.toggle(track.tool !== null);\n    },\n\n    /**\n     * Generate a key for the tile cache.\n     * TODO: create a TileCache object (like DataCache) and generate key internally.\n     */\n    _gen_tile_cache_key: function(w_scale, tile_region) {\n        return `${w_scale}_${tile_region}`;\n    },\n\n    /**\n     * Request that track be drawn.\n     */\n    request_draw: function(options) {\n        if (options && options.clear_tile_cache) {\n            this.tile_cache.clear();\n        }\n        this.view.request_redraw(options, this);\n    },\n\n    /**\n     * Actions to be taken before drawing.\n     */\n    before_draw: function() {\n        // Clear because this is set when drawing.\n        this.max_height_px = 0;\n    },\n\n    /**\n     * Draw track. Options include:\n     * -force: force a redraw rather than use cached tiles (default: false)\n     * -clear_after: clear old tiles after drawing new tiles (default: false)\n     * -data_fetch: fetch data if necessary (default: true)\n     *\n     * NOTE: this function should never be called directly; use request_draw() so that drawing\n     * management can be used.\n     */\n    _draw: function(options) {\n        if (!this.can_draw()) {\n            return;\n        }\n\n        var clear_after = options && options.clear_after;\n        var low = this.view.low;\n        var high = this.view.high;\n        //var range = high - low;\n        var width = this.view.container.width();\n        var w_scale = this.view.resolution_px_b;\n        var resolution = 1 / w_scale;\n\n        // For overview, adjust high, low, resolution, and w_scale.\n        if (this.is_overview) {\n            low = this.view.max_low;\n            high = this.view.max_high;\n            w_scale = width / (this.view.max_high - this.view.max_low);\n            resolution = 1 / w_scale;\n        }\n\n        this.before_draw();\n\n        //\n        // Method for moving and/or removing tiles:\n        // (a) mark all elements for removal using class 'remove'\n        // (b) during tile drawing/placement, remove class for elements that are moved;\n        //     this occurs in show_tile()\n        // (c) after drawing tiles, remove elements still marked for removal\n        //     (i.e. that still have class 'remove').\n        //\n\n        // Step (a) for (re)moving tiles.\n        this.tiles_div.children().addClass(\"remove\");\n\n        var // Tile width in bases.\n        tile_width = Math.floor(TILE_SIZE * resolution);\n\n        var // Index of first tile that overlaps visible region.\n        tile_index = Math.floor(low / tile_width);\n\n        var tile_region;\n        var tile_promise;\n        var tile_promises = [];\n        var tiles = [];\n        // Draw tiles.\n        while (tile_index * tile_width < high) {\n            // Get tile region.\n            tile_region = new visualization.GenomeRegion({\n                chrom: this.view.chrom,\n                start: tile_index * tile_width,\n                // Tile high cannot be larger than view.max_high, which the chromosome length.\n                end: Math.min((tile_index + 1) * tile_width, this.view.max_high)\n            });\n            tile_promise = this.draw_helper(tile_region, w_scale, options);\n            tile_promises.push(tile_promise);\n            $.when(tile_promise).then(tile => {\n                tiles.push(tile);\n            });\n\n            // Go to next tile.\n            tile_index += 1;\n        }\n\n        // Step (c) for (re)moving tiles when clear_after is false.\n        if (!clear_after) {\n            this.tiles_div\n                .children(\".remove\")\n                .removeClass(\"remove\")\n                .remove();\n        }\n\n        // When all tiles are drawn, call post-draw actions.\n        $.when.apply($, tile_promises).then(() => {\n            // Step (c) for (re)moving tiles when clear_after is true:\n            this.tiles_div.children(\".remove\").remove();\n\n            // Only do postdraw actions for tiles; instances where tiles may not be drawn include:\n            // (a) ReferenceTrack without sufficient resolution;\n            // (b) data_fetch = false.\n            tiles = _.filter(tiles, t => t !== null);\n            if (tiles.length !== 0) {\n                this.postdraw_actions(tiles, width, w_scale, clear_after);\n            }\n        });\n    },\n\n    /**\n     * Add a maximum/minimum label to track.\n     */\n    _add_yaxis_label: function(type, on_change) {\n        var css_class = type === \"max\" ? \"top\" : \"bottom\";\n        var text = type === \"max\" ? \"max\" : \"min\";\n        var pref_name = type === \"max\" ? \"max_value\" : \"min_value\";\n        var label = this.container_div.find(`.yaxislabel.${css_class}`);\n        var value = round(this.config.get_value(pref_name), 1);\n\n        // Default action for on_change is to redraw track.\n        on_change =\n            on_change ||\n            (() => {\n                this.request_draw({ clear_tile_cache: true });\n            });\n\n        if (label.length !== 0) {\n            // Label already exists, so update value.\n            label.text(value);\n        } else {\n            // Add label.\n            label = $(\"<div/>\")\n                .text(value)\n                .make_text_editable({\n                    num_cols: 12,\n                    on_finish: function(new_val) {\n                        $(\".tooltip\").remove();\n                        this.config.set_value(pref_name, round(new_val, 1));\n                        on_change();\n                    },\n                    help_text: `Set ${text} value`\n                })\n                .addClass(`yaxislabel ${css_class}`)\n                .css(\"color\", this.config.get_value(\"label_color\"));\n            this.container_div.prepend(label);\n        }\n    },\n\n    /**\n     * Actions to be taken after draw has been completed. Draw is completed when all tiles have been\n     * drawn/fetched and shown.\n     */\n    postdraw_actions: function(tiles, width, w_scale, clear_after) {\n        var line_track_tiles = _.filter(tiles, tile => tile instanceof LineTrackTile);\n\n        //\n        // Take different actions depending on whether there are LineTrack/Coverage tiles.\n        //\n\n        if (line_track_tiles.length > 0) {\n            // -- Drawing in Coverage mode. --\n\n            // Clear because this is set when drawing.\n            this.max_height_px = 0;\n            _.each(tiles, tile => {\n                if (!(tile instanceof LineTrackTile)) {\n                    tile.html_elt.remove();\n                    this.draw_helper(tile.region, w_scale, {\n                        force: true,\n                        mode: \"Coverage\"\n                    });\n                }\n            });\n\n            this._add_yaxis_label(\"max\");\n        } else {\n            // -- Drawing in non-Coverage mode. --\n\n            // Remove Y-axis labels because there are no line track tiles.\n            this.container_div.find(\".yaxislabel\").remove();\n\n            //\n            // If some tiles have icons, set padding of tiles without icons so features and rows align.\n            //\n            var icons_present = _.find(tiles, tile => tile.has_icons);\n\n            if (icons_present) {\n                _.each(tiles, tile => {\n                    if (!tile.has_icons) {\n                        // Need to align with other tile(s) that have icons.\n                        tile.html_elt.css(\"padding-top\", ERROR_PADDING);\n                    }\n                });\n            }\n        }\n    },\n\n    /**\n     * Returns appropriate display mode based on data.\n     */\n    get_mode: function(data) {\n        return this.mode;\n    },\n\n    /**\n     * Update track interface to show display mode being used.\n     */\n    update_auto_mode: function(display_mode) {\n        // FIXME: needs to be implemented.\n    },\n\n    /**\n     * Returns a list of drawables to draw. Defaults to current track.\n     */\n    _get_drawables: function() {\n        return [this];\n    },\n\n    /**\n     * Retrieves from cache, draws, or sets up drawing for a single tile. Returns either a Tile object or a\n     * jQuery.Deferred object that is fulfilled when tile can be drawn again. Options include:\n     * -force: force a redraw rather than use cached tiles (default: false)\n     * -data_fetch: fetch data if necessary (default: true)\n     */\n    draw_helper: function(region, w_scale, options) {\n        // Init options if necessary to avoid having to check if options defined.\n        if (!options) {\n            options = {};\n        }\n\n        var force = options.force;\n        var mode = options.mode || this.mode;\n        var resolution = 1 / w_scale;\n\n        var drawables = this._get_drawables();\n        var key = this._gen_tile_cache_key(w_scale, region);\n\n        var is_tile = o => o && \"track\" in o;\n\n        // Check tile cache, if found show existing tile in correct position\n        var tile = force ? undefined : this.tile_cache.get_elt(key);\n        if (tile) {\n            if (is_tile(tile)) {\n                this.show_tile(tile, w_scale);\n            }\n            return tile;\n        }\n\n        // If not fetching data, nothing more to do because data is needed to draw tile.\n        if (options.data_fetch === false) {\n            return null;\n        }\n\n        // Function that returns data/Deferreds needed to draw tile.\n        var get_tile_data = () => {\n            // HACK: if display mode (mode) is in continuous data modes, data mode must be coverage to get coverage data.\n            var data_mode = _.find(CONTINUOUS_DATA_MODES, m => m === mode) ? \"Coverage\" : mode;\n\n            // Map drawable object to data needed for drawing.\n            var tile_data = _.map(drawables, (\n                d // Get the track data/promise.\n            ) => d.data_manager.get_data(region, data_mode, resolution, this.data_url_extra_params));\n\n            // Get reference data/promise.\n            if (this.view.reference_track) {\n                tile_data.push(\n                    this.view.reference_track.data_manager.get_data(\n                        region,\n                        mode,\n                        resolution,\n                        this.view.reference_track.data_url_extra_params\n                    )\n                );\n            }\n\n            return tile_data;\n        };\n\n        //\n        // When data is available, draw tile.\n        //\n        var tile_drawn = $.Deferred();\n        this.tile_cache.set_elt(key, tile_drawn);\n        $.when.apply($, get_tile_data()).then(() => {\n            var tile_data = get_tile_data();\n            var tracks_data = tile_data;\n            var seq_data;\n\n            // Deferreds may show up here if trying to fetch a subset of data from a superset data chunk\n            // that cannot be subsetted. This may occur if the superset has a message. If there is a\n            // Deferred, try again from the top. NOTE: this condition could (should?) be handled by the\n            // GenomeDataManager in visualization module.\n            if (_.find(tile_data, d => util.is_deferred(d))) {\n                this.tile_cache.set_elt(key, undefined);\n                $.when(this.draw_helper(region, w_scale, options)).then(tile => {\n                    tile_drawn.resolve(tile);\n                });\n                return;\n            }\n\n            // If sequence data is available, subset to get only data in region.\n            if (this.view.reference_track) {\n                seq_data = this.view.reference_track.data_manager.subset_entry(tile_data.pop(), region);\n            }\n\n            // Get drawing modes, heights for all tracks.\n            var drawing_modes = [];\n            var drawing_heights = [];\n\n            _.each(drawables, (d, i) => {\n                var data = tracks_data[i];\n                if (d.mode === \"Auto\") {\n                    d.mode = d.get_mode(data);\n                    d.update_auto_mode(d.mode);\n                }\n                drawing_modes.push(d.mode);\n                drawing_heights.push(d.get_canvas_height(data, d.mode, w_scale, width));\n            });\n\n            var canvas = this.view.canvas_manager.new_canvas();\n            var tile_low = region.get(\"start\");\n            var tile_high = region.get(\"end\");\n            var width = Math.ceil((tile_high - tile_low) * w_scale) + this.left_offset;\n            var height = _.max(drawing_heights);\n            var tile;\n\n            //\n            // Draw all tracks on tile.\n            //\n            canvas.width = width;\n            // Height is specified in options or is the height found above.\n            canvas.height = options.height || height;\n            var ctx = canvas.getContext(\"2d\");\n            ctx.translate(this.left_offset, 0);\n            if (drawables.length > 1) {\n                ctx.globalAlpha = 0.5;\n                ctx.globalCompositeOperation = \"source-over\";\n            }\n            _.each(drawables, (d, i) => {\n                tile = d.draw_tile(tracks_data[i], ctx, drawing_modes[i], region, w_scale, seq_data);\n            });\n\n            // Don't cache, show if no tile.\n            if (tile !== undefined) {\n                this.tile_cache.set_elt(key, tile);\n                this.show_tile(tile, w_scale);\n            }\n\n            tile_drawn.resolve(tile);\n        });\n\n        return tile_drawn;\n    },\n\n    /**\n     * Returns canvas height needed to display data; return value is an integer that denotes the\n     * number of pixels required.\n     */\n    get_canvas_height: function(result, mode, w_scale, canvas_width) {\n        return this.visible_height_px;\n    },\n\n    /**\n     * Draw line (bigwig) data onto tile.\n     */\n    _draw_line_track_tile: function(result, ctx, mode, region, w_scale) {\n        // Set min/max if they are not already set.\n        // FIXME: checking for different null/undefined/0 is messy; it would be nice to\n        // standardize this.\n        if ([undefined, null].indexOf(this.config.get_value(\"min_value\")) !== -1) {\n            this.config.set_value(\"min_value\", 0);\n        }\n        if ([undefined, null, 0].indexOf(this.config.get_value(\"max_value\")) !== -1) {\n            this.config.set_value(\"max_value\", _.max(_.map(result.data, d => d[1])) || 0);\n        }\n\n        var canvas = ctx.canvas;\n\n        var painter = new painters.LinePainter(\n            result.data,\n            region.get(\"start\"),\n            region.get(\"end\"),\n            this.config.to_key_value_dict(),\n            mode\n        );\n\n        painter.draw(ctx, canvas.width, canvas.height, w_scale);\n\n        return new LineTrackTile(this, region, w_scale, canvas, result.data);\n    },\n\n    /**\n     * Draw a track tile.\n     * @param result result from server\n     * @param ctx canvas context to draw on\n     * @param mode mode to draw in\n     * @param region region to draw on tile\n     * @param w_scale pixels per base\n     * @param ref_seq reference sequence data\n     */\n    draw_tile: function(result, ctx, mode, region, w_scale, ref_seq) {},\n\n    /**\n     * Show track tile and perform associated actions. Showing tile may actually move\n     * an existing tile rather than reshowing it.\n     */\n    show_tile: function(tile, w_scale) {\n        var tile_element = tile.html_elt;\n\n        // -- Show/move tile element. --\n\n        tile.predisplay_actions();\n\n        // Position tile element based on current viewport.\n        var left = Math.round((tile.low - (this.is_overview ? this.view.max_low : this.view.low)) * w_scale);\n        if (this.left_offset) {\n            left -= this.left_offset;\n        }\n        tile_element.css(\"left\", left);\n\n        if (tile_element.hasClass(\"remove\")) {\n            // Step (b) for (re)moving tiles. See _draw() function for description of algorithm\n            // for removing tiles.\n            tile_element.removeClass(\"remove\");\n        } else {\n            // Showing new tile.\n            this.tiles_div.append(tile_element);\n        }\n\n        // -- Update track, tile heights based on new tile. --\n\n        tile_element.css(\"height\", \"auto\");\n\n        // Update max height based on current tile's height.\n        // BUG/HACK: tile_element.height() returns a height that is always 2 pixels too big, so\n        // -2 to get the correct height.\n        this.max_height_px = Math.max(this.max_height_px, tile_element.height() - 2);\n\n        // Update height for all tiles based on max height.\n        tile_element\n            .parent()\n            .children()\n            .css(\"height\", `${this.max_height_px}px`);\n\n        // Update track height based on max height and visible height.\n        var track_height = this.max_height_px;\n        if (this.visible_height_px !== 0) {\n            track_height = Math.min(this.max_height_px, this.visible_height_px);\n        }\n        this.tiles_div.css(\"height\", `${track_height}px`);\n    },\n\n    /**\n     * Utility function that creates a label string describing the region and parameters of a track's tool.\n     */\n    tool_region_and_parameters_str: function(region) {\n        var track = this;\n        var region_str = region !== undefined ? region.toString() : \"all\";\n        var param_str = _.values(track.tool.get_inputs_dict()).join(\", \");\n        return ` - region=[${region_str}], parameters=[${param_str}]`;\n    },\n\n    /**\n     * Returns true if data is compatible with a given mode.\n     */\n    data_and_mode_compatible: function(data, mode) {\n        // Only handle modes that user can set.\n        if (mode === \"Auto\") {\n            return true;\n        } else if (mode === \"Coverage\") {\n            // Histogram mode requires bigwig data.\n            return data.dataset_type === \"bigwig\";\n        } else if (data.dataset_type === \"bigwig\" || data.extra_info === \"no_detail\") {\n            // All other modes--Dense, Squish, Pack--require data + details.\n            return false;\n        } else {\n            return true;\n        }\n    },\n\n    /**\n     * Returns true if entry can be subsetted.\n     */\n    can_subset: function(entry) {\n        // Do not subset entries with a message or data with no detail.\n        if (entry.message || entry.extra_info === \"no_detail\") {\n            return false;\n        } else if (entry.dataset_type === \"bigwig\") {\n            // Subset only if data is single-bp resolution.\n            return entry.data[1][0] - entry.data[0][0] === 1;\n        }\n\n        return true;\n    },\n\n    /**\n     * Set up track to receive tool data.\n     */\n    init_for_tool_data: function() {\n        // Set up track to fetch raw data rather than converted data.\n        this.data_manager.set(\"data_type\", \"raw_data\");\n        this.data_query_wait = 1000;\n        this.dataset_check_type = \"state\";\n\n        // FIXME: this is optional and is disabled for now because it creates\n        // additional converter jobs without a clear benefit because indexing\n        // such a small dataset provides little benefit.\n        //\n        // Set up one-time, post-draw to clear tool execution settings.\n        //\n        /*\n        this.normal_postdraw_actions = this.postdraw_actions;\n        this.postdraw_actions = function(tiles, width, w_scale, clear_after) {\n            var self = this;\n\n            // Do normal postdraw init.\n            self.normal_postdraw_actions(tiles, width, w_scale, clear_after);\n\n            // Tool-execution specific post-draw init:\n\n            // Reset dataset check, wait time.\n            self.dataset_check_type = 'converted_datasets_state';\n            self.data_query_wait = DEFAULT_DATA_QUERY_WAIT;\n\n            // Reset data URL when dataset indexing has completed/when not pending.\n            var ss_deferred = new util.ServerStateDeferred({\n                url: self.dataset_state_url,\n                url_params: {dataset_id : self.dataset.id, hda_ldda: self.dataset.get('hda_ldda')},\n                interval: self.data_query_wait,\n                // Set up deferred to check dataset state until it is not pending.\n                success_fn: function(result) { return result !== \"pending\"; }\n            });\n            $.when(ss_deferred.go()).then(function() {\n                // Dataset is indexed, so use converted data.\n                self.data_manager.set('data_type', 'data');\n            });\n\n            // Reset post-draw actions function.\n            self.postdraw_actions = self.normal_postdraw_actions;\n        };\n        */\n    }\n});\n\nvar LabelTrack = function(view, container) {\n    Track.call(this, view, container, {\n        resize: false,\n        header: false\n    });\n    this.container_div.addClass(\"label-track\");\n};\nextend(LabelTrack.prototype, Track.prototype, {\n    init: function() {\n        // Enable by default because there should always be data when drawing track.\n        this.enabled = true;\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function() {},\n\n    _draw: function(options) {\n        var view = this.view;\n        var range = view.high - view.low;\n\n        var tickDistance = Math.floor(Math.pow(10, Math.floor(Math.log(range) / Math.log(10))));\n\n        var position = Math.floor(view.low / tickDistance) * tickDistance;\n        var width = this.view.container.width();\n        var new_div = $(\"<div/>\").addClass(\"label-container\");\n        while (position < view.high) {\n            var screenPosition = Math.floor(((position - view.low) / range) * width);\n            new_div.append(\n                $(\"<div/>\")\n                    .addClass(\"pos-label\")\n                    .text(util.commatize(position))\n                    .css({\n                        left: screenPosition\n                    })\n            );\n            position += tickDistance;\n        }\n        this.content_div.children(\":first\").remove();\n        this.content_div.append(new_div);\n    }\n});\n\n// FIXME: Composite tracks have code for showing composite tracks with line tracks and\n// composite tracks with line + feature tracks. It's probably best if different classes\n// are created for each type of composite track.\n\n/**\n * A tiled track composed of multiple other tracks. Composite tracks only work with\n * bigwig data for now.\n */\nvar CompositeTrack = function(view, container, obj_dict) {\n    TiledTrack.call(this, view, container, obj_dict);\n\n    // Init drawables; each drawable is a copy so that config/preferences\n    // are independent of each other. Also init left offset.\n    this.drawables = [];\n    if (\"drawables\" in obj_dict) {\n        var drawable;\n        for (var i = 0; i < obj_dict.drawables.length; i++) {\n            drawable = obj_dict.drawables[i];\n            this.drawables[i] = object_from_template(drawable, view, null);\n\n            // Track's left offset is the max of all tracks.\n            if (drawable.left_offset > this.left_offset) {\n                this.left_offset = drawable.left_offset;\n            }\n        }\n        this.enabled = true;\n    }\n\n    // Set all feature tracks to use Coverage mode.\n    _.each(this.drawables, d => {\n        if (d instanceof FeatureTrack || d instanceof ReadTrack) {\n            d.change_mode(\"Coverage\");\n        }\n    });\n\n    this.update_icons();\n\n    // HACK: needed for saving object for now. Need to generalize get_type() to all Drawables and use\n    // that for object type.\n    this.obj_type = \"CompositeTrack\";\n};\n\nextend(CompositeTrack.prototype, TiledTrack.prototype, {\n    display_modes: CONTINUOUS_DATA_MODES,\n\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            {\n                key: \"min_value\",\n                label: \"Min Value\",\n                type: \"float\",\n                default_value: undefined\n            },\n            {\n                key: \"max_value\",\n                label: \"Max Value\",\n                type: \"float\",\n                default_value: undefined\n            },\n            {\n                key: \"mode\",\n                type: \"string\",\n                default_value: this.mode,\n                hidden: true\n            },\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 30,\n                hidden: true\n            }\n        ]);\n    },\n\n    action_icons_def: [\n        // Create composite track from group's tracks.\n        {\n            name: \"composite_icon\",\n            title: _l(\"Show individual tracks\"),\n            css_class: \"layers-stack\",\n            on_click_fn: function(track) {\n                $(\".tooltip\").remove();\n                track.show_group();\n            }\n        }\n    ].concat(TiledTrack.prototype.action_icons_def),\n\n    // HACK: CompositeTrack should inherit from DrawableCollection as well.\n    /**\n     * Returns representation of object in a dictionary for easy saving.\n     * Use from_dict to recreate object.\n     */\n    to_dict: DrawableCollection.prototype.to_dict,\n\n    add_drawable: DrawableCollection.prototype.add_drawable,\n\n    unpack_drawables: DrawableCollection.prototype.unpack_drawables,\n\n    config_onchange: function() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Action to take during resize.\n     */\n    on_resize: function() {\n        // Propogate visible height to other tracks.\n        var visible_height = this.visible_height_px;\n        _.each(this.drawables, d => {\n            d.visible_height_px = visible_height;\n        });\n        Track.prototype.on_resize.call(this);\n    },\n\n    /**\n     * Change mode for all tracks.\n     */\n    change_mode: function(new_mode) {\n        TiledTrack.prototype.change_mode.call(this, new_mode);\n        for (var i = 0; i < this.drawables.length; i++) {\n            this.drawables[i].change_mode(new_mode);\n        }\n    },\n\n    /**\n     * Initialize component tracks and draw composite track when all components are initialized.\n     */\n    init: function() {\n        // Init components.\n        var init_deferreds = [];\n        for (var i = 0; i < this.drawables.length; i++) {\n            init_deferreds.push(this.drawables[i].init());\n        }\n\n        // Draw composite when all tracks available.\n        var track = this;\n        $.when.apply($, init_deferreds).then(() => {\n            track.enabled = true;\n            track.request_draw();\n        });\n    },\n\n    update_icons: function() {\n        // For now, hide filters and tool.\n        this.action_icons.filters_icon.hide();\n        this.action_icons.tools_icon.hide();\n        this.action_icons.param_space_viz_icon.hide();\n    },\n\n    can_draw: Drawable.prototype.can_draw,\n\n    _get_drawables: function() {\n        return this.drawables;\n    },\n\n    /**\n     * Replace this track with group that includes individual tracks.\n     */\n    show_group: function() {\n        // Create group with individual tracks.\n        var group = new DrawableGroup(this.view, this.container, {\n            name: this.config.get_value(\"name\")\n        });\n\n        var track;\n        for (var i = 0; i < this.drawables.length; i++) {\n            track = this.drawables[i];\n            track.update_icons();\n            group.add_drawable(track);\n            track.container = group;\n            group.content_div.append(track.container_div);\n        }\n\n        // Replace track with group.\n        this.container.replace_drawable(this, group, true);\n        group.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Actions taken before drawing.\n     */\n    before_draw: function() {\n        // FIXME: this is needed only if there are feature tracks in the composite track.\n        // TiledTrack.prototype.before_draw.call(this);\n\n        //\n        // Set min, max for tracks to be largest min, max.\n        //\n\n        // Get smallest min, biggest max.\n        var min = _.min(_.map(this.drawables, d => d.config.get_value(\"min_value\")));\n\n        var max = _.max(_.map(this.drawables, d => d.config.get_value(\"max_value\")));\n\n        this.config.set_value(\"min_value\", min);\n        this.config.set_value(\"max_value\", max);\n\n        // Set all tracks to smallest min, biggest max.\n        _.each(this.drawables, d => {\n            d.config.set_value(\"min_value\", min);\n            d.config.set_value(\"max_value\", max);\n        });\n    },\n\n    /**\n     * Update minimum, maximum for component tracks.\n     */\n    update_all_min_max: function() {\n        var min_value = this.config.get_value(\"min_value\");\n        var max_value = this.config.get_value(\"max_value\");\n        _.each(this.drawables, d => {\n            d.config.set_value(\"min_value\", min_value);\n            d.config.set_value(\"max_value\", max_value);\n        });\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Actions to be taken after draw has been completed. Draw is completed when all tiles have been\n     * drawn/fetched and shown.\n     */\n    postdraw_actions: function(tiles, width, w_scale, clear_after) {\n        // All tiles must be the same height in order to draw LineTracks, so redraw tiles as needed.\n        var max_height = -1;\n\n        var i;\n        for (i = 0; i < tiles.length; i++) {\n            var height = tiles[i].html_elt.find(\"canvas\").height();\n            if (height > max_height) {\n                max_height = height;\n            }\n        }\n\n        for (i = 0; i < tiles.length; i++) {\n            var tile = tiles[i];\n            if (tile.html_elt.find(\"canvas\").height() !== max_height) {\n                this.draw_helper(tile.region, w_scale, {\n                    force: true,\n                    height: max_height\n                });\n                tile.html_elt.remove();\n            }\n        }\n\n        // Wrap function so that it can be called without object reference.\n        var track = this;\n\n        var t = () => {\n            track.update_all_min_max();\n        };\n\n        // Add min, max labels.\n        this._add_yaxis_label(\"min\", t);\n        this._add_yaxis_label(\"max\", t);\n    }\n});\n\n/**\n * Displays reference genome data.\n */\nvar ReferenceTrack = function(view) {\n    TiledTrack.call(this, view, { content_div: view.top_labeltrack }, { resize: false, header: false });\n\n    // Use offset to ensure that bases at tile edges are drawn.\n    this.left_offset = view.canvas_manager.char_width_px;\n    this.container_div.addClass(\"reference-track\");\n    this.data_url = `${Galaxy.root}api/genomes/${this.view.dbkey}`;\n    this.data_url_extra_params = { reference: true };\n    this.data_manager = new visualization.GenomeReferenceDataManager({\n        data_url: this.data_url,\n        can_subset: this.can_subset\n    });\n    this.hide_contents();\n};\nextend(ReferenceTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 13,\n                hidden: true\n            }\n        ]);\n    },\n\n    init: function() {\n        this.data_manager.clear();\n        // Enable by default because there should always be data when drawing track.\n        this.enabled = true;\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function() {},\n\n    can_draw: Drawable.prototype.can_draw,\n\n    /**\n     * Draws and shows tile if reference data can be displayed; otherwise track is hidden.\n     */\n    draw_helper: function(region, w_scale, options) {\n        var cur_visible = this.tiles_div.is(\":visible\");\n        var new_visible;\n        var tile = null;\n        if (w_scale > this.view.canvas_manager.char_width_px) {\n            this.tiles_div.show();\n            new_visible = true;\n            tile = TiledTrack.prototype.draw_helper.call(this, region, w_scale, options);\n        } else {\n            new_visible = false;\n            this.tiles_div.hide();\n        }\n\n        // NOTE: viewport resizing conceptually belongs in postdraw_actions(), but currently\n        // postdraw_actions is not called when reference track not shown due to no tiles. If\n        // it is moved to postdraw_actions, resize must be called each time because cannot\n        // easily detect showing/hiding.\n\n        // If showing or hiding reference track, resize viewport.\n        if (cur_visible !== new_visible) {\n            this.view.resize_viewport();\n        }\n\n        return tile;\n    },\n\n    can_subset: function(entry) {\n        return true;\n    },\n\n    /**\n     * Draw ReferenceTrack tile.\n     */\n    draw_tile: function(data, ctx, mode, region, w_scale) {\n        // Try to subset data.\n        var subset = this.data_manager.subset_entry(data, region);\n\n        var seq_data = subset.data;\n\n        // Draw sequence data.\n        var canvas = ctx.canvas;\n        ctx.font = ctx.canvas.manager.default_font;\n        ctx.textAlign = \"center\";\n        for (var c = 0, str_len = seq_data.length; c < str_len; c++) {\n            ctx.fillStyle = this.view.get_base_color(seq_data[c]);\n            ctx.fillText(seq_data[c], Math.floor(c * w_scale), 10);\n        }\n        return new Tile(this, region, w_scale, canvas, subset);\n    }\n});\n\n/**\n * Track displays continuous/numerical data. Track expects position data in 1-based format, i.e. wiggle format.\n */\nvar LineTrack = function(view, container, obj_dict) {\n    this.mode = \"Histogram\";\n    TiledTrack.call(this, view, container, obj_dict);\n    // Need left offset for drawing overlap near tile boundaries.\n    this.left_offset = 30;\n\n    // If server has byte-range support, use BBI data manager to read directly from the BBI file.\n    // FIXME: there should be a flag to wait for this check to complete before loading the track.\n    var self = this;\n    $.when(supportsByteRanges(`${Galaxy.root}datasets/${this.dataset.id}/display`)).then(supportsByteRanges => {\n        if (supportsByteRanges) {\n            self.data_manager = new bbi.BBIDataManager({\n                dataset: self.dataset\n            });\n        }\n    });\n};\n\nextend(LineTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    display_modes: CONTINUOUS_DATA_MODES,\n\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            { key: \"color\", label: \"Color\", type: \"color\" },\n            {\n                key: \"min_value\",\n                label: \"Min Value\",\n                type: \"float\",\n                default_value: undefined\n            },\n            {\n                key: \"max_value\",\n                label: \"Max Value\",\n                type: \"float\",\n                default_value: undefined\n            },\n            {\n                key: \"mode\",\n                type: \"string\",\n                default_value: this.mode,\n                hidden: true\n            },\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 30,\n                hidden: true\n            }\n        ]);\n    },\n\n    config_onchange: function() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Actions to be taken before drawing.\n     */\n    // FIXME: can the default behavior be used; right now it breaks during resize.\n    before_draw: function() {},\n\n    /**\n     * Draw track tile.\n     */\n    draw_tile: function(result, ctx, mode, region, w_scale) {\n        return this._draw_line_track_tile(result, ctx, mode, region, w_scale);\n    },\n\n    /**\n     * Subset data only if data is at single-base pair resolution.\n     */\n    can_subset: function(entry) {\n        return entry.data[1][0] - entry.data[0][0] === 1;\n    },\n\n    /**\n     * Add min, max labels.\n     */\n    postdraw_actions: function(tiles, width, w_scale, clear_after) {\n        // Add min, max labels.\n        this._add_yaxis_label(\"max\");\n        this._add_yaxis_label(\"min\");\n    }\n});\n\n/**\n * Diagonal heatmap for showing interactions data.\n */\nvar DiagonalHeatmapTrack = function(view, container, obj_dict) {\n    this.mode = \"Heatmap\";\n    TiledTrack.call(this, view, container, obj_dict);\n};\n\nextend(DiagonalHeatmapTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    display_modes: [\"Heatmap\"],\n\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            {\n                key: \"pos_color\",\n                label: \"Positive Color\",\n                type: \"color\",\n                default_value: \"#FF8C00\"\n            },\n            {\n                key: \"neg_color\",\n                label: \"Negative Color\",\n                type: \"color\",\n                default_value: \"#4169E1\"\n            },\n            {\n                key: \"min_value\",\n                label: \"Min Value\",\n                type: \"int\",\n                default_value: undefined\n            },\n            {\n                key: \"max_value\",\n                label: \"Max Value\",\n                type: \"int\",\n                default_value: undefined\n            },\n            {\n                key: \"mode\",\n                type: \"string\",\n                default_value: this.mode,\n                hidden: true\n            },\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 500,\n                hidden: true\n            }\n        ]);\n    },\n\n    config_onchange: function() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function() {\n        var track = this;\n        return $.getJSON(\n            track.dataset.url(),\n            {\n                data_type: \"data\",\n                stats: true,\n                chrom: track.view.chrom,\n                low: 0,\n                high: track.view.max_high,\n                hda_ldda: track.dataset.get(\"hda_ldda\")\n            },\n            result => {\n                // What does this do?  Is it meant to be attached to some higher scope state object?\n                // var data = result.data;\n            }\n        );\n    },\n\n    /**\n     * Draw tile.\n     */\n    draw_tile: function(result, ctx, mode, region, w_scale) {\n        // Paint onto canvas.\n        var canvas = ctx.canvas;\n\n        var painter = new painters.DiagonalHeatmapPainter(\n            result.data,\n            region.get(\"start\"),\n            region.get(\"end\"),\n            this.config.to_key_value_dict(),\n            mode\n        );\n\n        painter.draw(ctx, canvas.width, canvas.height, w_scale);\n\n        return new Tile(this, region, w_scale, canvas, result.data);\n    }\n});\n\n/**\n * A track that displays features/regions. Track expects position data in BED format, i.e. 0-based, half-open.\n */\nvar FeatureTrack = function(view, container, obj_dict) {\n    TiledTrack.call(this, view, container, obj_dict);\n    this.container_div.addClass(\"feature-track\");\n    this.summary_draw_height = 30;\n    this.slotters = {};\n    this.start_end_dct = {};\n    this.left_offset = 200;\n    this.set_painter_from_config();\n};\n\nextend(FeatureTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    display_modes: [\"Auto\", \"Coverage\", \"Dense\", \"Squish\", \"Pack\"],\n\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            {\n                key: \"block_color\",\n                label: \"Block color\",\n                type: \"color\"\n            },\n            {\n                key: \"reverse_strand_color\",\n                label: \"Antisense strand color\",\n                type: \"color\"\n            },\n            {\n                key: \"label_color\",\n                label: \"Label color\",\n                type: \"color\",\n                default_value: \"black\"\n            },\n            {\n                key: \"show_counts\",\n                label: \"Show summary counts\",\n                type: \"bool\",\n                default_value: true,\n                help: \"Show the number of items in each bin when drawing summary histogram\"\n            },\n            {\n                key: \"min_value\",\n                label: \"Histogram minimum\",\n                type: \"float\",\n                default_value: undefined,\n                help: \"clear value to set automatically\"\n            },\n            {\n                key: \"max_value\",\n                label: \"Histogram maximum\",\n                type: \"float\",\n                default_value: undefined,\n                help: \"clear value to set automatically\"\n            },\n            {\n                key: \"connector_style\",\n                label: \"Connector style\",\n                type: \"select\",\n                default_value: \"fishbones\",\n                options: [\n                    {\n                        label: \"Line with arrows\",\n                        value: \"fishbone\"\n                    },\n                    { label: \"Arcs\", value: \"arcs\" }\n                ]\n            },\n            {\n                key: \"mode\",\n                type: \"string\",\n                default_value: this.mode,\n                hidden: true\n            },\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 0,\n                hidden: true\n            }\n        ]);\n    },\n\n    config_onchange: function() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.set_painter_from_config();\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    set_painter_from_config: function() {\n        if (this.config.get_value(\"connector_style\") === \"arcs\") {\n            this.painter = painters.ArcLinkedFeaturePainter;\n        } else {\n            this.painter = painters.LinkedFeaturePainter;\n        }\n    },\n\n    /**\n     * Actions to be taken after draw has been completed. Draw is completed when all tiles have been\n     * drawn/fetched and shown.\n     */\n    postdraw_actions: function(tiles, width, w_scale, clear_after) {\n        TiledTrack.prototype.postdraw_actions.call(this, tiles, width, w_scale, clear_after);\n\n        var line_track_tiles = _.filter(tiles, t => t instanceof LineTrackTile);\n\n        //\n        // Finish drawing of features that span multiple tiles. Features that span multiple tiles\n        // are labeled incomplete on the tile level because they cannot be completely drawn.\n        //\n        if (line_track_tiles.length === 0) {\n            // Gather incomplete features together.\n            var all_incomplete_features = {};\n            _.each(_.pluck(tiles, \"incomplete_features\"), inc_features => {\n                _.each(inc_features, feature => {\n                    all_incomplete_features[feature[0]] = feature;\n                });\n            });\n\n            // Draw incomplete features on each tile.\n            _.each(tiles, tile => {\n                // Remove features already drawn on tile originally.\n                var tile_incomplete_features = _.omit(\n                    all_incomplete_features,\n                    _.map(tile.incomplete_features, f => f[0])\n                );\n\n                // Remove features already drawn on tile in past postdraw actions.\n                tile_incomplete_features = _.omit(tile_incomplete_features, _.keys(tile.other_tiles_features_drawn));\n\n                // Draw tile's incomplete features.\n                if (_.size(tile_incomplete_features) !== 0) {\n                    // To draw incomplete features, create new canvas, copy original canvas/tile onto new\n                    // canvas, and then draw incomplete features on the new canvas.\n                    var features = {\n                        data: _.values(tile_incomplete_features)\n                    };\n\n                    var new_canvas = this.view.canvas_manager.new_canvas();\n                    var new_canvas_ctx = new_canvas.getContext(\"2d\");\n                    new_canvas.height = Math.max(\n                        tile.canvas.height,\n                        this.get_canvas_height(features, tile.mode, tile.w_scale, 100)\n                    );\n                    new_canvas.width = tile.canvas.width;\n                    new_canvas_ctx.drawImage(tile.canvas, 0, 0);\n                    new_canvas_ctx.translate(this.left_offset, 0);\n                    var new_tile = this.draw_tile(\n                        features,\n                        new_canvas_ctx,\n                        tile.mode,\n                        tile.region,\n                        tile.w_scale,\n                        tile.seq_data\n                    );\n                    $(tile.canvas).replaceWith($(new_tile.canvas));\n                    tile.canvas = new_canvas;\n                    _.extend(tile.other_tiles_features_drawn, all_incomplete_features);\n                }\n            });\n        }\n\n        // If mode is Coverage and tiles do not share max, redraw tiles as necessary using new max.\n        /*\n        This code isn't used right now because Coverage mode uses predefined max in preferences.\n        if (track.mode === \"Coverage\") {\n            // Get global max.\n            var global_max = -1;\n            for (i = 0; i < tiles.length; i++) {\n                var cur_max = tiles[i].max_val;\n                if (cur_max > global_max) {\n                    global_max = cur_max;\n                }\n            }\n\n            for (i = 0; i < tiles.length; i++) {\n                var tile = tiles[i];\n                if (tile.max_val !== global_max) {\n                    tile.html_elt.remove();\n                    track.draw_helper(tile.index, w_scale, { more_tile_data: { force: true, max: global_max } } );\n                }\n            }\n        }\n        */\n\n        //\n        // Update filter attributes, UI.\n        //\n\n        // Update filtering UI.\n        if (this.filters_manager) {\n            var filters = this.filters_manager.filters;\n            var f;\n            for (f = 0; f < filters.length; f++) {\n                filters[f].update_ui_elt();\n            }\n\n            // Determine if filters are available; this is based on the tiles' data.\n            // Criteria for filter to be available: (a) it is applicable to tile data and (b) filter min != filter max.\n            var filters_available = false;\n\n            var example_feature;\n            var filter;\n            for (let i = 0; i < tiles.length; i++) {\n                if (tiles[i].data.length) {\n                    example_feature = tiles[i].data[0];\n                    for (f = 0; f < filters.length; f++) {\n                        filter = filters[f];\n                        if (filter.applies_to(example_feature) && filter.min !== filter.max) {\n                            filters_available = true;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            // If filter availability changed, hide filter div if necessary and update menu.\n            if (this.filters_available !== filters_available) {\n                this.filters_available = filters_available;\n                if (!this.filters_available) {\n                    this.filters_manager.hide();\n                }\n                this.update_icons();\n            }\n        }\n\n        //\n        // If not all features slotted, show icon for showing more rows (slots).\n        //\n        if (tiles[0] instanceof FeatureTrackTile) {\n            var all_slotted = true;\n            for (let i = 0; i < tiles.length; i++) {\n                if (!tiles[i].all_slotted) {\n                    all_slotted = false;\n                    break;\n                }\n            }\n            this.action_icons.show_more_rows_icon.toggle(!all_slotted);\n        } else {\n            this.action_icons.show_more_rows_icon.hide();\n        }\n    },\n\n    /**\n     * Update track interface to show display mode being used.\n     */\n    update_auto_mode: function(mode) {\n        if (this.mode === \"Auto\") {\n            if (mode === \"no_detail\") {\n                mode = \"feature spans\";\n            }\n            this.action_icons.mode_icon.attr(\"title\", `Set display mode (now: Auto/${mode})`);\n        }\n    },\n\n    /**\n     * Place features in slots for drawing (i.e. pack features).\n     * this.slotters[level] is created in this method. this.slotters[level]\n     * is a Slotter object. Returns the number of slots used to pack features.\n     */\n    incremental_slots: function(level, features, mode) {\n        // Get/create incremental slots for level. If display mode changed,\n        // need to create new slots.\n\n        var dummy_context = this.view.canvas_manager.dummy_context;\n\n        var slotter = this.slotters[level];\n        if (!slotter || slotter.mode !== mode) {\n            slotter = new slotting.FeatureSlotter(level, mode, MAX_FEATURE_DEPTH, x => dummy_context.measureText(x));\n            this.slotters[level] = slotter;\n        }\n\n        return slotter.slot_features(features);\n    },\n\n    /**\n     * Returns appropriate display mode based on data.\n     */\n    get_mode: function(data) {\n        var mode;\n        // HACK: use no_detail mode track is in overview to prevent overview from being too large.\n        if (data.extra_info === \"no_detail\" || this.is_overview) {\n            mode = \"no_detail\";\n        } else {\n            // Choose b/t Squish and Pack.\n            // Proxy measures for using Squish:\n            // (a) error message re: limiting number of features shown;\n            // (b) X number of features shown;\n            // (c) size of view shown.\n            // TODO: cannot use (a) and (b) because it requires coordinating mode across tiles;\n            // fix this so that tiles are redrawn as necessary to use the same mode.\n            //if ( (result.message && result.message.match(/^Only the first [\\d]+/)) ||\n            //     (result.data && result.data.length > 2000) ||\n            //var data = result.data;\n            // if ( (data.length && data.length < 4) ||\n            //      (this.view.high - this.view.low > MIN_SQUISH_VIEW_WIDTH) ) {\n            if (this.view.high - this.view.low > MIN_SQUISH_VIEW_WIDTH) {\n                mode = \"Squish\";\n            } else {\n                mode = \"Pack\";\n            }\n        }\n        return mode;\n    },\n\n    /**\n     * Returns canvas height needed to display data; return value is an integer that denotes the\n     * number of pixels required.\n     */\n    get_canvas_height: function(result, mode, w_scale, canvas_width) {\n        if (mode === \"Coverage\" || result.dataset_type === \"bigwig\") {\n            return this.summary_draw_height;\n        } else {\n            // All other modes require slotting.\n            var rows_required = this.incremental_slots(w_scale, result.data, mode);\n            // HACK: use dummy painter to get required height. Painter should be extended so that get_required_height\n            // works as a static function.\n            var dummy_painter = new this.painter(null, null, null, this.config.to_key_value_dict(), mode);\n            return Math.max(this.min_height_px, dummy_painter.get_required_height(rows_required, canvas_width));\n        }\n    },\n\n    /**\n     * Draw FeatureTrack tile.\n     * @param result result from server\n     * @param cxt canvas context to draw on\n     * @param mode mode to draw in\n     * @param region region to draw on tile\n     * @param w_scale pixels per base\n     * @param ref_seq reference sequence data\n     * @param cur_tile true if drawing is occurring on a currently visible tile.\n     */\n    draw_tile: function(result, ctx, mode, region, w_scale, ref_seq, cur_tile) {\n        var track = this;\n        var canvas = ctx.canvas;\n        var tile_low = region.get(\"start\");\n        var tile_high = region.get(\"end\");\n        var left_offset = this.left_offset;\n\n        // If data is line track data, draw line track tile.\n        if (result.dataset_type === \"bigwig\") {\n            return this._draw_line_track_tile(result, ctx, mode, region, w_scale);\n        }\n\n        // Handle row-by-row tracks\n\n        // Preprocessing: filter features and determine whether all unfiltered features have been slotted.\n        var filtered = [];\n\n        var slots = this.slotters[w_scale].slots;\n        var all_slotted = true;\n        if (result.data) {\n            var filters = this.filters_manager.filters;\n            for (var i = 0, len = result.data.length; i < len; i++) {\n                var feature = result.data[i];\n                var hide_feature = false;\n                var filter;\n                for (var f = 0, flen = filters.length; f < flen; f++) {\n                    filter = filters[f];\n                    filter.update_attrs(feature);\n                    if (!filter.keep(feature)) {\n                        hide_feature = true;\n                        break;\n                    }\n                }\n                if (!hide_feature) {\n                    // Feature visible.\n                    filtered.push(feature);\n                    // Set flag if not slotted.\n                    if (!(feature[0] in slots)) {\n                        all_slotted = false;\n                    }\n                }\n            }\n        }\n\n        // Create painter.\n        var filter_alpha_scaler = this.filters_manager.alpha_filter\n            ? new FilterScaler(this.filters_manager.alpha_filter)\n            : null;\n\n        var filter_height_scaler = this.filters_manager.height_filter\n            ? new FilterScaler(this.filters_manager.height_filter)\n            : null;\n\n        var painter = new this.painter(\n            filtered,\n            tile_low,\n            tile_high,\n            this.config.to_key_value_dict(),\n            mode,\n            filter_alpha_scaler,\n            filter_height_scaler,\n            // HACK: ref_seq only be defined for ReadTracks, and only the ReadPainter accepts that argument\n            ref_seq,\n            b => track.view.get_base_color(b)\n        );\n\n        var feature_mapper = null;\n        var incomplete_features = null;\n\n        ctx.fillStyle = this.config.get_value(\"block_color\");\n        ctx.font = ctx.canvas.manager.default_font;\n        ctx.textAlign = \"right\";\n\n        if (result.data) {\n            // Draw features.\n            var draw_results = painter.draw(ctx, canvas.width, canvas.height, w_scale, slots);\n            feature_mapper = draw_results.feature_mapper;\n            incomplete_features = draw_results.incomplete_features;\n            feature_mapper.translation = -left_offset;\n        }\n\n        // If not drawing on current tile, create new tile.\n        if (!cur_tile) {\n            return new FeatureTrackTile(\n                track,\n                region,\n                w_scale,\n                canvas,\n                result.data,\n                mode,\n                result.message,\n                all_slotted,\n                feature_mapper,\n                incomplete_features,\n                ref_seq\n            );\n        }\n    }\n});\n\n/**\n * Displays variant data.\n */\nvar VariantTrack = function(view, container, obj_dict) {\n    TiledTrack.call(this, view, container, obj_dict);\n    this.painter = painters.VariantPainter;\n    this.summary_draw_height = 30;\n\n    // Maximum resolution is ~45 pixels/base, so use this size left offset to ensure that full\n    // variant is drawn when variant is at start of tile.\n    this.left_offset = 30;\n};\n\nextend(VariantTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    display_modes: [\"Auto\", \"Coverage\", \"Dense\", \"Squish\", \"Pack\"],\n\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            {\n                key: \"color\",\n                label: \"Histogram color\",\n                type: \"color\"\n            },\n            {\n                key: \"show_sample_data\",\n                label: \"Show sample data\",\n                type: \"bool\",\n                default_value: true\n            },\n            {\n                key: \"show_labels\",\n                label: \"Show summary and sample labels\",\n                type: \"bool\",\n                default_value: true\n            },\n            {\n                key: \"summary_height\",\n                label: \"Locus summary height\",\n                type: \"float\",\n                default_value: 20\n            },\n            {\n                key: \"mode\",\n                type: \"string\",\n                default_value: this.mode,\n                hidden: true\n            },\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 0,\n                hidden: true\n            }\n        ]);\n    },\n\n    config_onchange: function() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Draw tile.\n     */\n    draw_tile: function(result, ctx, mode, region, w_scale) {\n        // Data could be coverage data or variant data.\n        if (result.dataset_type === \"bigwig\") {\n            return this._draw_line_track_tile(result, ctx, \"Histogram\", region, w_scale);\n        } else {\n            // result.dataset_type === 'variant'\n            var view = this.view;\n\n            var painter = new this.painter(\n                result.data,\n                region.get(\"start\"),\n                region.get(\"end\"),\n                this.config.to_key_value_dict(),\n                mode,\n                b => view.get_base_color(b)\n            );\n\n            painter.draw(ctx, ctx.canvas.width, ctx.canvas.height, w_scale);\n            return new Tile(this, region, w_scale, ctx.canvas, result.data);\n        }\n    },\n\n    /**\n     * Returns canvas height needed to display data; return value is an integer that denotes the\n     * number of pixels required.\n     */\n    get_canvas_height: function(result, mode, w_scale, canvas_width) {\n        if (result.dataset_type === \"bigwig\") {\n            return this.summary_draw_height;\n        } else {\n            // HACK: sample_names is not be defined when dataset definition is fetched before\n            // dataset is complete (as is done when running tools). In that case, fall back on\n            // # of samples in data. This can be fixed by re-requesting dataset definition\n            // in init.\n            var num_samples = this.dataset.get_metadata(\"sample_names\")\n                ? this.dataset.get_metadata(\"sample_names\").length\n                : 0;\n            if (num_samples === 0 && result.data.length !== 0) {\n                // Sample data is separated by commas, so this computes # of samples:\n                num_samples = result.data[0][7].match(/,/g);\n                if (num_samples === null) {\n                    num_samples = 1;\n                } else {\n                    num_samples = num_samples.length + 1;\n                }\n            }\n\n            var dummy_painter = new this.painter(null, null, null, this.config.to_key_value_dict(), mode);\n            return dummy_painter.get_required_height(num_samples);\n        }\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function() {\n        var deferreds = [Track.prototype.predraw_init.call(this)];\n        // FIXME: updating dataset metadata is only needed for visual analysis. Can\n        // this be moved somewhere else?\n        if (!this.dataset.get_metadata(\"sample_names\")) {\n            deferreds.push(this.dataset.fetch());\n        }\n        return deferreds;\n    },\n\n    /**\n     * Actions to be taken after draw has been completed. Draw is completed when all tiles have been\n     * drawn/fetched and shown.\n     */\n    postdraw_actions: function(tiles, width, w_scale, clear_after) {\n        TiledTrack.prototype.postdraw_actions.call(this, tiles, width, w_scale, clear_after);\n\n        var line_track_tiles = _.filter(tiles, t => t instanceof LineTrackTile);\n\n        // Add summary/sample labels if needed and not already included.\n        var sample_names = this.dataset.get_metadata(\"sample_names\");\n        if (\n            line_track_tiles.length === 0 &&\n            this.config.get_value(\"show_labels\") &&\n            sample_names &&\n            sample_names.length > 1\n        ) {\n            var font_size;\n\n            // Add and/or style labels.\n            if (this.container_div.find(\".yaxislabel.variant\").length === 0) {\n                // Add summary and sample labels.\n\n                // Add summary label to middle of summary area.\n                font_size = this.config.get_value(\"summary_height\") / 2;\n                this.tiles_div.prepend(\n                    $(\"<div/>\")\n                        .text(\"Summary\")\n                        .addClass(\"yaxislabel variant top\")\n                        .css({\n                            \"font-size\": `${font_size}px`,\n                            top: `${(this.config.get_value(\"summary_height\") - font_size) / 2}px`\n                        })\n                );\n\n                // Show sample labels.\n                if (this.config.get_value(\"show_sample_data\")) {\n                    var samples_div_html = sample_names.join(\"<br/>\");\n\n                    this.tiles_div.prepend(\n                        $(\"<div/>\")\n                            .html(samples_div_html)\n                            .addClass(\"yaxislabel variant top sample\")\n                            .css({\n                                top: this.config.get_value(\"summary_height\")\n                            })\n                    );\n                }\n            }\n\n            // Style labels.\n\n            // Match sample font size to mode.\n            font_size = `${this.mode === \"Squish\" ? 5 : 10}px`;\n            $(this.tiles_div)\n                .find(\".sample\")\n                .css({\n                    \"font-size\": font_size,\n                    \"line-height\": font_size\n                });\n            // Color labels to preference color.\n            $(this.tiles_div)\n                .find(\".yaxislabel\")\n                .css(\"color\", this.config.get_value(\"label_color\"));\n        } else {\n            // Remove all labels.\n            this.container_div.find(\".yaxislabel.variant\").remove();\n        }\n    }\n});\n\n/**\n * Track that displays mapped reads. Track expects position data in 1-based, closed format, i.e. SAM/BAM format.\n */\nvar ReadTrack = function(view, container, obj_dict) {\n    FeatureTrack.call(this, view, container, obj_dict);\n    this.painter = painters.ReadPainter;\n    this.update_icons();\n};\n\nextend(ReadTrack.prototype, Drawable.prototype, TiledTrack.prototype, FeatureTrack.prototype, {\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            {\n                key: \"block_color\",\n                label: \"Histogram color\",\n                type: \"color\"\n            },\n            {\n                key: \"detail_block_color\",\n                label: \"Sense strand block color\",\n                type: \"color\",\n                default_value: \"#AAAAAA\"\n            },\n            {\n                key: \"reverse_strand_color\",\n                label: \"Antisense strand block color\",\n                type: \"color\",\n                default_value: \"#DDDDDD\"\n            },\n            {\n                key: \"label_color\",\n                label: \"Label color\",\n                type: \"color\",\n                default_value: \"black\"\n            },\n            {\n                key: \"show_insertions\",\n                label: \"Show insertions\",\n                type: \"bool\",\n                default_value: false\n            },\n            {\n                key: \"show_differences\",\n                label: \"Show differences only\",\n                type: \"bool\",\n                default_value: true\n            },\n            {\n                key: \"show_counts\",\n                label: \"Show summary counts\",\n                type: \"bool\",\n                default_value: true\n            },\n            {\n                key: \"mode\",\n                type: \"string\",\n                default_value: this.mode,\n                hidden: true\n            },\n            {\n                key: \"min_value\",\n                label: \"Histogram minimum\",\n                type: \"float\",\n                default_value: undefined,\n                help: \"clear value to set automatically\"\n            },\n            {\n                key: \"max_value\",\n                label: \"Histogram maximum\",\n                type: \"float\",\n                default_value: undefined,\n                help: \"clear value to set automatically\"\n            },\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 0,\n                hidden: true\n            }\n        ]);\n    },\n\n    config_onchange: function() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    }\n});\n\n/**\n * Objects that can be added to a view.\n */\nvar addable_objects = {\n    CompositeTrack: CompositeTrack,\n    DrawableGroup: DrawableGroup,\n    DiagonalHeatmapTrack: DiagonalHeatmapTrack,\n    FeatureTrack: FeatureTrack,\n    LineTrack: LineTrack,\n    ReadTrack: ReadTrack,\n    VariantTrack: VariantTrack,\n    // For backward compatibility, map vcf track to variant.\n    VcfTrack: VariantTrack\n};\n\n/**\n * Create new object from a template. A template can be either an object dictionary or an\n * object itself.\n */\nvar object_from_template = (template, view, container) => {\n    if (\"copy\" in template) {\n        // Template is an object.\n        return template.copy(container);\n    } else {\n        // Template is a dictionary.\n        var drawable_type = template.obj_type;\n        // For backward compatibility:\n        if (!drawable_type) {\n            drawable_type = template.track_type;\n        }\n        return new addable_objects[drawable_type](view, container, template);\n    }\n};\n\nexport default {\n    TracksterView: TracksterView,\n    DrawableGroup: DrawableGroup,\n    LineTrack: LineTrack,\n    FeatureTrack: FeatureTrack,\n    DiagonalHeatmapTrack: DiagonalHeatmapTrack,\n    ReadTrack: ReadTrack,\n    VariantTrack: VariantTrack,\n    CompositeTrack: CompositeTrack,\n    object_from_template: object_from_template\n};\n"]}